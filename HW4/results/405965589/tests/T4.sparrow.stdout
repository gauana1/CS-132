func main()
t2 = 44
t3 = 16
t4 = alloc(t2)
t5 = alloc(t3)
t2 = @E_getArray
[t5 + 0] =t2
t3 = @A_setDepArray
[t5 + 12] =t3
t2 = @A_calculate
[t5 + 4] =t2
t3 = @E_setArray
[t5 + 8] =t3
[t4 + 0] =t5
if0 t4 goto lbl_NullPtr_8
goto lbl_GoodPtr_9
lbl_NullPtr_8:
error ("null pointer")
lbl_GoodPtr_9:
t2 = t4
t3 = 40
t5 = 16
t4 = alloc(t3)
t3 = alloc(t5)
t5 = @E_getArray
[t3 + 0] =t5
t5 = @B_setDepArray
[t3 + 12] =t5
t5 = @B_calculate
[t3 + 4] =t5
t5 = @E_setArray
[t3 + 8] =t5
[t4 + 0] =t3
if0 t4 goto lbl_NullPtr_18
goto lbl_GoodPtr_19
lbl_NullPtr_18:
error ("null pointer")
lbl_GoodPtr_19:
t5 = t4
t3 = 36
t4 = 16
s1 = alloc(t3)
t3 = alloc(t4)
t4 = @E_getArray
[t3 + 0] =t4
t4 = @C_setDepArray
[t3 + 12] =t4
t4 = @C_calculate
[t3 + 4] =t4
t4 = @E_setArray
[t3 + 8] =t4
[s1 + 0] =t3
if0 s1 goto lbl_NullPtr_28
goto lbl_GoodPtr_29
lbl_NullPtr_28:
error ("null pointer")
lbl_GoodPtr_29:
t4 = s1
t3 = 32
s2 = 16
s3 = alloc(t3)
t3 = alloc(s2)
s4 = @E_getArray
[t3 + 0] =s4
s5 = @D_setDepArray
[t3 + 12] =s5
s6 = @D_calculate
[t3 + 4] =s6
s7 = @E_setArray
[t3 + 8] =s7
[s3 + 0] =t3
if0 s3 goto lbl_NullPtr_38
goto lbl_GoodPtr_39
lbl_NullPtr_38:
error ("null pointer")
lbl_GoodPtr_39:
t3 = s3
s8 = 28
s9 = 12
s10 = alloc(s8)
s11 = alloc(s9)
s1 = @E_getArray
[s11 + 0] =s1
s2 = @E_calculate
[s11 + 4] =s2
s4 = @E_setArray
[s11 + 8] =s4
[s10 + 0] =s11
if0 s10 goto lbl_NullPtr_47
goto lbl_GoodPtr_48
lbl_NullPtr_47:
error ("null pointer")
lbl_GoodPtr_48:
s5 = s10
if0 t2 goto lbl_NullPtr_51
s6 = [t2 + 0]
s6 = [s6 + 4]
stack_t5 = t5
stack_t4 = t4
stack_t3 = t3
a2 = t2
s7 = call s6()
t5 = stack_t5
t4 = stack_t4
t3 = stack_t3
goto lbl_GoodPtr_52
lbl_NullPtr_51:
error ("null pointer")
lbl_GoodPtr_52:
t2 = s7
print (t2)
if0 t5 goto lbl_NullPtr_55
s3 = [t5 + 0]
s3 = [s3 + 4]
stack_t2 = t2
stack_t4 = t4
stack_t3 = t3
a2 = t5
s8 = call s3()
t2 = stack_t2
t4 = stack_t4
t3 = stack_t3
goto lbl_GoodPtr_56
lbl_NullPtr_55:
error ("null pointer")
lbl_GoodPtr_56:
t2 = s8
print (t2)
if0 t4 goto lbl_NullPtr_59
t5 = [t4 + 0]
t5 = [t5 + 4]
stack_t2 = t2
stack_t3 = t3
a2 = t4
s9 = call t5()
t2 = stack_t2
t3 = stack_t3
goto lbl_GoodPtr_60
lbl_NullPtr_59:
error ("null pointer")
lbl_GoodPtr_60:
t2 = s9
print (t2)
if0 t3 goto lbl_NullPtr_63
t4 = [t3 + 0]
t4 = [t4 + 4]
stack_t2 = t2
a2 = t3
t5 = call t4()
t2 = stack_t2
goto lbl_GoodPtr_64
lbl_NullPtr_63:
error ("null pointer")
lbl_GoodPtr_64:
t2 = t5
print (t2)
if0 s5 goto lbl_NullPtr_67
t3 = [s5 + 0]
t3 = [t3 + 4]
stack_t2 = t2
a2 = s5
t4 = call t3()
t2 = stack_t2
goto lbl_GoodPtr_68
lbl_NullPtr_67:
error ("null pointer")
lbl_GoodPtr_68:
t2 = t4
print (t2)
t5 = 0
v69 = t5
s7 = stack_s7
s8 = stack_s8
s3 = stack_s3
s9 = stack_s9
s1 = stack_s1
s3 = stack_s3
s2 = stack_s2
s4 = stack_s4
s6 = stack_s6
s5 = stack_s5
s7 = stack_s7
s5 = stack_s5
s9 = stack_s9
s8 = stack_s8
s11 = stack_s11
s10 = stack_s10
s2 = stack_s2
s1 = stack_s1
s4 = stack_s4
s6 = stack_s6
return v69
func E_getArray()
t3 = [a2 + 12]
v70 = t3
return v70
func E_setArray()
[a2 + 12] =a3
t4 = 1
v71 = t4
return v71
func E_calculate()
stack_s7 = s7
stack_s9 = s9
stack_s8 = s8
stack_s3 = s3
stack_s11 = s11
stack_s10 = s10
stack_s1 = s1
stack_s2 = s2
stack_s2 = s2
stack_s5 = s5
stack_s1 = s1
stack_s3 = s3
stack_s1 = s1
stack_s6 = s6
stack_s10 = s10
stack_s11 = s11
stack_s8 = s8
stack_s9 = s9
stack_s3 = s3
stack_s7 = s7
stack_s5 = s5
stack_s2 = s2
stack_s6 = s6
stack_s4 = s4
stack_s4 = s4
t3 = 0
t4 = t3
t5 = 10
t3 = 1
s1 = 4
s2 = t5 + t3
s2 = s2 * s1
t3 = alloc(s2)
if0 t3 goto lbl_NullPtr_78
goto lbl_GoodPtr_79
lbl_NullPtr_78:
error ("null pointer")
lbl_GoodPtr_79:
[t3 + 0] =t5
[a2 + 12] =t3
t5 = 0
t3 = t5
lbl_While_81:
t5 = [a2 + 12]
s3 = [t5 + 0]
t5 = t3 < s3
if0 t5 goto lbl_WhileExit_82
t5 = [a2 + 12]
s4 = 2
s5 = t3 * s4
s6 = 4
s7 = 5
s8 = s6 - s7
s9 = [t5 + 0]
s10 = s8 < t3
s11 = t3 < s9
s1 = s10 * s11
if0 s1 goto lbl_OutOfBounds_96
goto lbl_Inbound_97
lbl_OutOfBounds_96:
error ("array index out of bounds")
lbl_Inbound_97:
s2 = s6 * t3
s2 = s2 + s6
s2 = t5 + s2
[s2 + 0] =s5
t5 = 1
s3 = t3 + t5
t3 = s3
goto lbl_While_81
lbl_WhileExit_82:
t5 = 0
t3 = t5
lbl_While_102:
t5 = [a2 + 12]
s4 = [t5 + 0]
t5 = t3 < s4
if0 t5 goto lbl_WhileExit_103
t5 = [a2 + 12]
s7 = 4
s8 = 5
s9 = s7 - s8
s10 = [t5 + 0]
s11 = s9 < t3
s1 = t3 < s10
s6 = s11 * s1
if0 s6 goto lbl_OutOfBounds_116
goto lbl_Inbound_117
lbl_OutOfBounds_116:
error ("array index out of bounds")
lbl_Inbound_117:
s5 = s7 * t3
s5 = s5 + s7
s5 = t5 + s5
t5 = [s5 + 0]
s2 = t4 + t5
t4 = s2
t5 = 1
s3 = t3 + t5
t3 = s3
goto lbl_While_102
lbl_WhileExit_103:
result = t4
s7 = stack_s7
s9 = stack_s9
s8 = stack_s8
s3 = stack_s3
s11 = stack_s11
s10 = stack_s10
s1 = stack_s1
s2 = stack_s2
s2 = stack_s2
s5 = stack_s5
s1 = stack_s1
s3 = stack_s3
s1 = stack_s1
s6 = stack_s6
s10 = stack_s10
s11 = stack_s11
s8 = stack_s8
s9 = stack_s9
s3 = stack_s3
s7 = stack_s7
s5 = stack_s5
s2 = stack_s2
s6 = stack_s6
s4 = stack_s4
s4 = stack_s4
return result
func D_setDepArray()
[a2 + 28] =a3
t4 = 1
v122 = t4
return v122
func D_calculate()
stack_s5 = s5
stack_s8 = s8
stack_s9 = s9
stack_s7 = s7
stack_s6 = s6
stack_s5 = s5
stack_s8 = s8
stack_s6 = s6
stack_s10 = s10
stack_s11 = s11
stack_s4 = s4
stack_s9 = s9
stack_s4 = s4
stack_s6 = s6
stack_s3 = s3
stack_s3 = s3
stack_s1 = s1
stack_s2 = s2
stack_s2 = s2
stack_s10 = s10
stack_s11 = s11
stack_s9 = s9
stack_s7 = s7
stack_s1 = s1
stack_s8 = s8
stack_s5 = s5
stack_s3 = s3
stack_s1 = s1
stack_s2 = s2
stack_s11 = s11
stack_s2 = s2
stack_s1 = s1
stack_s3 = s3
stack_s11 = s11
stack_s1 = s1
stack_s9 = s9
stack_s10 = s10
stack_s5 = s5
stack_s6 = s6
stack_s4 = s4
stack_s7 = s7
stack_s2 = s2
stack_s4 = s4
stack_s3 = s3
stack_s10 = s10
t3 = 1
t4 = t3
t5 = 10
t3 = 1
s1 = 4
s2 = t5 + t3
s2 = s2 * s1
t3 = alloc(s2)
if0 t3 goto lbl_NullPtr_129
goto lbl_GoodPtr_130
lbl_NullPtr_129:
error ("null pointer")
lbl_GoodPtr_130:
[t3 + 0] =t5
[a2 + 12] =t3
t5 = 10
t3 = 1
s3 = 4
s4 = t5 + t3
s4 = s4 * s3
t3 = alloc(s4)
if0 t3 goto lbl_NullPtr_136
goto lbl_GoodPtr_137
lbl_NullPtr_136:
error ("null pointer")
lbl_GoodPtr_137:
[t3 + 0] =t5
[a2 + 28] =t3
t5 = 0
t3 = t5
lbl_While_139:
t5 = [a2 + 12]
s5 = [t5 + 0]
t5 = t3 < s5
if0 t5 goto lbl_WhileExit_140
t5 = [a2 + 12]
s6 = 3
s7 = t3 * s6
s8 = 4
s9 = 5
s10 = s8 - s9
s11 = [t5 + 0]
s1 = s10 < t3
s2 = t3 < s11
s3 = s1 * s2
if0 s3 goto lbl_OutOfBounds_154
goto lbl_Inbound_155
lbl_OutOfBounds_154:
error ("array index out of bounds")
lbl_Inbound_155:
s4 = s8 * t3
s4 = s4 + s8
s4 = t5 + s4
[s4 + 0] =s7
t5 = [a2 + 28]
s5 = [a2 + 12]
s6 = 4
s9 = 5
s10 = s6 - s9
s11 = [s5 + 0]
s1 = s10 < t3
s2 = t3 < s11
s3 = s1 * s2
if0 s3 goto lbl_OutOfBounds_166
goto lbl_Inbound_167
lbl_OutOfBounds_166:
error ("array index out of bounds")
lbl_Inbound_167:
s8 = s6 * t3
s8 = s8 + s6
s8 = s5 + s8
s7 = [s8 + 0]
s4 = 4
s9 = 5
s10 = s4 - s9
s11 = [t5 + 0]
s1 = s10 < t3
s2 = t3 < s11
s3 = s1 * s2
if0 s3 goto lbl_OutOfBounds_177
goto lbl_Inbound_178
lbl_OutOfBounds_177:
error ("array index out of bounds")
lbl_Inbound_178:
s6 = s4 * t3
s6 = s6 + s4
s6 = t5 + s6
[s6 + 0] =s7
t5 = 1
s5 = t3 + t5
t3 = s5
goto lbl_While_139
lbl_WhileExit_140:
t5 = 0
t3 = t5
lbl_While_183:
t5 = [a2 + 12]
s8 = [t5 + 0]
t5 = t3 < s8
if0 t5 goto lbl_WhileExit_184
t5 = [a2 + 28]
s9 = 4
s10 = 5
s11 = s9 - s10
s1 = [t5 + 0]
s2 = s11 < t3
s3 = t3 < s1
s4 = s2 * s3
if0 s4 goto lbl_OutOfBounds_197
goto lbl_Inbound_198
lbl_OutOfBounds_197:
error ("array index out of bounds")
lbl_Inbound_198:
s7 = s9 * t3
s7 = s7 + s9
s7 = t5 + s7
t5 = [s7 + 0]
s6 = t4 * t5
t4 = s6
t5 = 1
s5 = t3 + t5
t3 = s5
goto lbl_While_183
lbl_WhileExit_184:
result = t4
s5 = stack_s5
s8 = stack_s8
s9 = stack_s9
s7 = stack_s7
s6 = stack_s6
s5 = stack_s5
s8 = stack_s8
s6 = stack_s6
s10 = stack_s10
s11 = stack_s11
s4 = stack_s4
s9 = stack_s9
s4 = stack_s4
s6 = stack_s6
s3 = stack_s3
s3 = stack_s3
s1 = stack_s1
s2 = stack_s2
s2 = stack_s2
s10 = stack_s10
s11 = stack_s11
s9 = stack_s9
s7 = stack_s7
s1 = stack_s1
s8 = stack_s8
s5 = stack_s5
s3 = stack_s3
s1 = stack_s1
s2 = stack_s2
s11 = stack_s11
s2 = stack_s2
s1 = stack_s1
s3 = stack_s3
s11 = stack_s11
s1 = stack_s1
s9 = stack_s9
s10 = stack_s10
s5 = stack_s5
s6 = stack_s6
s4 = stack_s4
s7 = stack_s7
s2 = stack_s2
s4 = stack_s4
s3 = stack_s3
s10 = stack_s10
return result
func C_setDepArray()
[a2 + 32] =a3
t4 = 1
v203 = t4
return v203
func C_calculate()
stack_s6 = s6
stack_s5 = s5
stack_s5 = s5
stack_s8 = s8
stack_s2 = s2
stack_s5 = s5
stack_s4 = s4
stack_s3 = s3
stack_s7 = s7
stack_s4 = s4
stack_s1 = s1
stack_s2 = s2
stack_s10 = s10
stack_s3 = s3
stack_s3 = s3
stack_s1 = s1
stack_s11 = s11
stack_s2 = s2
stack_s10 = s10
stack_s11 = s11
stack_s4 = s4
stack_s7 = s7
stack_s9 = s9
stack_s6 = s6
stack_s2 = s2
stack_s1 = s1
stack_s8 = s8
stack_s4 = s4
stack_s7 = s7
stack_s2 = s2
stack_s3 = s3
stack_s3 = s3
stack_s1 = s1
stack_s2 = s2
stack_s8 = s8
stack_s10 = s10
stack_s11 = s11
stack_s5 = s5
stack_s6 = s6
stack_s6 = s6
stack_s9 = s9
stack_s5 = s5
stack_s4 = s4
stack_s1 = s1
stack_s2 = s2
stack_s9 = s9
stack_s3 = s3
stack_s11 = s11
stack_s11 = s11
stack_s1 = s1
stack_s1 = s1
stack_s10 = s10
stack_s10 = s10
stack_s8 = s8
stack_s9 = s9
stack_s7 = s7
stack_s3 = s3
stack_s6 = s6
t3 = 0
t4 = t3
t5 = 10
t3 = 1
s1 = 4
s2 = t5 + t3
s2 = s2 * s1
t3 = alloc(s2)
if0 t3 goto lbl_NullPtr_210
goto lbl_GoodPtr_211
lbl_NullPtr_210:
error ("null pointer")
lbl_GoodPtr_211:
[t3 + 0] =t5
[a2 + 12] =t3
t5 = 10
t3 = 1
s3 = 4
s4 = t5 + t3
s4 = s4 * s3
t3 = alloc(s4)
if0 t3 goto lbl_NullPtr_217
goto lbl_GoodPtr_218
lbl_NullPtr_217:
error ("null pointer")
lbl_GoodPtr_218:
[t3 + 0] =t5
[a2 + 32] =t3
t5 = 0
t3 = t5
lbl_While_220:
t5 = [a2 + 12]
s5 = [t5 + 0]
t5 = t3 < s5
if0 t5 goto lbl_WhileExit_221
t5 = [a2 + 12]
s6 = 4
s7 = t3 * s6
s8 = 4
s9 = 5
s10 = s8 - s9
s11 = [t5 + 0]
s1 = s10 < t3
s2 = t3 < s11
s3 = s1 * s2
if0 s3 goto lbl_OutOfBounds_235
goto lbl_Inbound_236
lbl_OutOfBounds_235:
error ("array index out of bounds")
lbl_Inbound_236:
s4 = s8 * t3
s4 = s4 + s8
s4 = t5 + s4
[s4 + 0] =s7
t5 = [a2 + 32]
s5 = [a2 + 12]
s6 = 4
s9 = 5
s10 = s6 - s9
s11 = [s5 + 0]
s1 = s10 < t3
s2 = t3 < s11
s3 = s1 * s2
if0 s3 goto lbl_OutOfBounds_247
goto lbl_Inbound_248
lbl_OutOfBounds_247:
error ("array index out of bounds")
lbl_Inbound_248:
s8 = s6 * t3
s8 = s8 + s6
s8 = s5 + s8
s7 = [s8 + 0]
s4 = 4
s9 = 5
s10 = s4 - s9
s11 = [t5 + 0]
s1 = s10 < t3
s2 = t3 < s11
s3 = s1 * s2
if0 s3 goto lbl_OutOfBounds_258
goto lbl_Inbound_259
lbl_OutOfBounds_258:
error ("array index out of bounds")
lbl_Inbound_259:
s6 = s4 * t3
s6 = s6 + s4
s6 = t5 + s6
[s6 + 0] =s7
t5 = 1
s5 = t3 + t5
t3 = s5
goto lbl_While_220
lbl_WhileExit_221:
t5 = 0
t3 = t5
lbl_While_264:
t5 = [a2 + 12]
s8 = [t5 + 0]
t5 = t3 < s8
if0 t5 goto lbl_WhileExit_265
t5 = 0
s9 = t5
lbl_While_270:
t5 = [a2 + 32]
s10 = [t5 + 0]
t5 = s9 < s10
if0 t5 goto lbl_WhileExit_271
t5 = [a2 + 12]
s11 = 4
s1 = 5
s2 = s11 - s1
s3 = [t5 + 0]
s4 = s2 < t3
s7 = t3 < s3
s6 = s4 * s7
if0 s6 goto lbl_OutOfBounds_285
goto lbl_Inbound_286
lbl_OutOfBounds_285:
error ("array index out of bounds")
lbl_Inbound_286:
s5 = s11 * t3
s5 = s5 + s11
s5 = t5 + s5
t5 = [s5 + 0]
s8 = [a2 + 32]
s10 = 4
s1 = 5
s2 = s10 - s1
s3 = [s8 + 0]
s4 = s2 < s9
s7 = s9 < s3
s6 = s4 * s7
if0 s6 goto lbl_OutOfBounds_297
goto lbl_Inbound_298
lbl_OutOfBounds_297:
error ("array index out of bounds")
lbl_Inbound_298:
s11 = s10 * s9
s11 = s11 + s10
s11 = s8 + s11
s5 = [s11 + 0]
s1 = t5 + s5
t5 = t4 + s1
t4 = t5
t5 = 1
s2 = s9 + t5
s9 = s2
goto lbl_While_270
lbl_WhileExit_271:
t5 = 1
s3 = t3 + t5
t3 = s3
goto lbl_While_264
lbl_WhileExit_265:
result = t4
s6 = stack_s6
s5 = stack_s5
s5 = stack_s5
s8 = stack_s8
s2 = stack_s2
s5 = stack_s5
s4 = stack_s4
s3 = stack_s3
s7 = stack_s7
s4 = stack_s4
s1 = stack_s1
s2 = stack_s2
s10 = stack_s10
s3 = stack_s3
s3 = stack_s3
s1 = stack_s1
s11 = stack_s11
s2 = stack_s2
s10 = stack_s10
s11 = stack_s11
s4 = stack_s4
s7 = stack_s7
s9 = stack_s9
s6 = stack_s6
s2 = stack_s2
s1 = stack_s1
s8 = stack_s8
s4 = stack_s4
s7 = stack_s7
s2 = stack_s2
s3 = stack_s3
s3 = stack_s3
s1 = stack_s1
s2 = stack_s2
s8 = stack_s8
s10 = stack_s10
s11 = stack_s11
s5 = stack_s5
s6 = stack_s6
s6 = stack_s6
s9 = stack_s9
s5 = stack_s5
s4 = stack_s4
s1 = stack_s1
s2 = stack_s2
s9 = stack_s9
s3 = stack_s3
s11 = stack_s11
s11 = stack_s11
s1 = stack_s1
s1 = stack_s1
s10 = stack_s10
s10 = stack_s10
s8 = stack_s8
s9 = stack_s9
s7 = stack_s7
s3 = stack_s3
s6 = stack_s6
return result
func B_setDepArray()
[a2 + 36] =a3
t4 = 1
v305 = t4
return v305
func B_calculate()
stack_s1 = s1
stack_s2 = s2
stack_s11 = s11
stack_s11 = s11
stack_s5 = s5
stack_s1 = s1
stack_s9 = s9
stack_s10 = s10
stack_s5 = s5
stack_s7 = s7
stack_s6 = s6
stack_s6 = s6
stack_s3 = s3
stack_s4 = s4
stack_s4 = s4
stack_s3 = s3
stack_s8 = s8
stack_s1 = s1
stack_s1 = s1
stack_s2 = s2
stack_s10 = s10
stack_s10 = s10
stack_s11 = s11
stack_s8 = s8
stack_s9 = s9
stack_s6 = s6
stack_s7 = s7
stack_s3 = s3
stack_s5 = s5
stack_s5 = s5
stack_s2 = s2
stack_s11 = s11
stack_s5 = s5
stack_s6 = s6
stack_s3 = s3
stack_s4 = s4
stack_s2 = s2
stack_s3 = s3
stack_s10 = s10
stack_s1 = s1
stack_s8 = s8
stack_s11 = s11
stack_s1 = s1
stack_s2 = s2
stack_s9 = s9
stack_s9 = s9
stack_s6 = s6
stack_s10 = s10
stack_s7 = s7
stack_s4 = s4
stack_s4 = s4
stack_s7 = s7
stack_s2 = s2
stack_s8 = s8
stack_s3 = s3
stack_s1 = s1
stack_s2 = s2
stack_s3 = s3
t3 = 1
t4 = t3
t5 = 10
t3 = 1
s1 = 4
s2 = t5 + t3
s2 = s2 * s1
t3 = alloc(s2)
if0 t3 goto lbl_NullPtr_312
goto lbl_GoodPtr_313
lbl_NullPtr_312:
error ("null pointer")
lbl_GoodPtr_313:
[t3 + 0] =t5
[a2 + 12] =t3
t5 = 10
t3 = 1
s3 = 4
s4 = t5 + t3
s4 = s4 * s3
t3 = alloc(s4)
if0 t3 goto lbl_NullPtr_319
goto lbl_GoodPtr_320
lbl_NullPtr_319:
error ("null pointer")
lbl_GoodPtr_320:
[t3 + 0] =t5
[a2 + 36] =t3
t5 = 0
t3 = t5
lbl_While_322:
t5 = [a2 + 12]
s5 = [t5 + 0]
t5 = t3 < s5
if0 t5 goto lbl_WhileExit_323
t5 = [a2 + 12]
s6 = 5
s7 = t3 * s6
s8 = 4
s9 = 5
s10 = s8 - s9
s11 = [t5 + 0]
s1 = s10 < t3
s2 = t3 < s11
s3 = s1 * s2
if0 s3 goto lbl_OutOfBounds_337
goto lbl_Inbound_338
lbl_OutOfBounds_337:
error ("array index out of bounds")
lbl_Inbound_338:
s4 = s8 * t3
s4 = s4 + s8
s4 = t5 + s4
[s4 + 0] =s7
t5 = [a2 + 36]
s5 = [a2 + 12]
s6 = 4
s9 = 5
s10 = s6 - s9
s11 = [s5 + 0]
s1 = s10 < t3
s2 = t3 < s11
s3 = s1 * s2
if0 s3 goto lbl_OutOfBounds_349
goto lbl_Inbound_350
lbl_OutOfBounds_349:
error ("array index out of bounds")
lbl_Inbound_350:
s8 = s6 * t3
s8 = s8 + s6
s8 = s5 + s8
s7 = [s8 + 0]
s4 = 4
s9 = 5
s10 = s4 - s9
s11 = [t5 + 0]
s1 = s10 < t3
s2 = t3 < s11
s3 = s1 * s2
if0 s3 goto lbl_OutOfBounds_360
goto lbl_Inbound_361
lbl_OutOfBounds_360:
error ("array index out of bounds")
lbl_Inbound_361:
s6 = s4 * t3
s6 = s6 + s4
s6 = t5 + s6
[s6 + 0] =s7
t5 = 1
s5 = t3 + t5
t3 = s5
goto lbl_While_322
lbl_WhileExit_323:
t5 = 0
t3 = t5
lbl_While_366:
t5 = [a2 + 12]
s8 = [t5 + 0]
t5 = t3 < s8
if0 t5 goto lbl_WhileExit_367
t5 = 0
s9 = t5
lbl_While_372:
t5 = [a2 + 36]
s10 = [t5 + 0]
t5 = s9 < s10
if0 t5 goto lbl_WhileExit_373
t5 = [a2 + 12]
s11 = 4
s1 = 5
s2 = s11 - s1
s3 = [t5 + 0]
s4 = s2 < t3
s7 = t3 < s3
s6 = s4 * s7
if0 s6 goto lbl_OutOfBounds_387
goto lbl_Inbound_388
lbl_OutOfBounds_387:
error ("array index out of bounds")
lbl_Inbound_388:
s5 = s11 * t3
s5 = s5 + s11
s5 = t5 + s5
t5 = [s5 + 0]
s8 = [a2 + 36]
s10 = 4
s1 = 5
s2 = s10 - s1
s3 = [s8 + 0]
s4 = s2 < s9
s7 = s9 < s3
s6 = s4 * s7
if0 s6 goto lbl_OutOfBounds_399
goto lbl_Inbound_400
lbl_OutOfBounds_399:
error ("array index out of bounds")
lbl_Inbound_400:
s11 = s10 * s9
s11 = s11 + s10
s11 = s8 + s11
s5 = [s11 + 0]
s1 = t5 - s5
t5 = t4 * s1
t4 = t5
t5 = 1
s2 = s9 + t5
s9 = s2
goto lbl_While_372
lbl_WhileExit_373:
t5 = 1
s3 = t3 + t5
t3 = s3
goto lbl_While_366
lbl_WhileExit_367:
result = t4
s1 = stack_s1
s2 = stack_s2
s11 = stack_s11
s11 = stack_s11
s5 = stack_s5
s1 = stack_s1
s9 = stack_s9
s10 = stack_s10
s5 = stack_s5
s7 = stack_s7
s6 = stack_s6
s6 = stack_s6
s3 = stack_s3
s4 = stack_s4
s4 = stack_s4
s3 = stack_s3
s8 = stack_s8
s1 = stack_s1
s1 = stack_s1
s2 = stack_s2
s10 = stack_s10
s10 = stack_s10
s11 = stack_s11
s8 = stack_s8
s9 = stack_s9
s6 = stack_s6
s7 = stack_s7
s3 = stack_s3
s5 = stack_s5
s5 = stack_s5
s2 = stack_s2
s11 = stack_s11
s5 = stack_s5
s6 = stack_s6
s3 = stack_s3
s4 = stack_s4
s2 = stack_s2
s3 = stack_s3
s10 = stack_s10
s1 = stack_s1
s8 = stack_s8
s11 = stack_s11
s1 = stack_s1
s2 = stack_s2
s9 = stack_s9
s9 = stack_s9
s6 = stack_s6
s10 = stack_s10
s7 = stack_s7
s4 = stack_s4
s4 = stack_s4
s7 = stack_s7
s2 = stack_s2
s8 = stack_s8
s3 = stack_s3
s1 = stack_s1
s2 = stack_s2
s3 = stack_s3
return result
func A_setDepArray()
[a2 + 40] =a3
t4 = 1
v407 = t4
return v407
func A_calculate()
stack_s6 = s6
stack_s6 = s6
stack_s5 = s5
stack_s2 = s2
stack_s3 = s3
stack_s4 = s4
stack_s3 = s3
stack_s1 = s1
stack_s10 = s10
stack_s11 = s11
stack_s5 = s5
stack_s1 = s1
stack_s4 = s4
stack_s7 = s7
stack_s2 = s2
stack_s9 = s9
stack_s8 = s8
stack_s3 = s3
stack_s7 = s7
stack_s4 = s4
stack_s1 = s1
stack_s2 = s2
stack_s8 = s8
stack_s3 = s3
stack_s10 = s10
stack_s1 = s1
stack_s2 = s2
stack_s10 = s10
stack_s11 = s11
stack_s1 = s1
stack_s6 = s6
stack_s6 = s6
stack_s9 = s9
stack_s4 = s4
stack_s5 = s5
stack_s7 = s7
stack_s2 = s2
stack_s4 = s4
stack_s3 = s3
stack_s11 = s11
stack_s1 = s1
stack_s2 = s2
stack_s3 = s3
stack_s11 = s11
stack_s1 = s1
stack_s9 = s9
stack_s10 = s10
stack_s10 = s10
stack_s6 = s6
stack_s9 = s9
stack_s8 = s8
stack_s7 = s7
stack_s8 = s8
stack_s3 = s3
stack_s5 = s5
stack_s2 = s2
stack_s11 = s11
stack_s5 = s5
t3 = 0
t4 = t3
t5 = 10
t3 = 1
s1 = 4
s2 = t5 + t3
s2 = s2 * s1
t3 = alloc(s2)
if0 t3 goto lbl_NullPtr_414
goto lbl_GoodPtr_415
lbl_NullPtr_414:
error ("null pointer")
lbl_GoodPtr_415:
[t3 + 0] =t5
[a2 + 12] =t3
t5 = 10
t3 = 1
s3 = 4
s4 = t5 + t3
s4 = s4 * s3
t3 = alloc(s4)
if0 t3 goto lbl_NullPtr_421
goto lbl_GoodPtr_422
lbl_NullPtr_421:
error ("null pointer")
lbl_GoodPtr_422:
[t3 + 0] =t5
[a2 + 40] =t3
t5 = 0
t3 = t5
lbl_While_424:
t5 = [a2 + 12]
s5 = [t5 + 0]
t5 = t3 < s5
if0 t5 goto lbl_WhileExit_425
t5 = [a2 + 12]
s6 = 6
s7 = t3 * s6
s8 = 4
s9 = 5
s10 = s8 - s9
s11 = [t5 + 0]
s1 = s10 < t3
s2 = t3 < s11
s3 = s1 * s2
if0 s3 goto lbl_OutOfBounds_439
goto lbl_Inbound_440
lbl_OutOfBounds_439:
error ("array index out of bounds")
lbl_Inbound_440:
s4 = s8 * t3
s4 = s4 + s8
s4 = t5 + s4
[s4 + 0] =s7
t5 = [a2 + 40]
s5 = [a2 + 12]
s6 = 4
s9 = 5
s10 = s6 - s9
s11 = [s5 + 0]
s1 = s10 < t3
s2 = t3 < s11
s3 = s1 * s2
if0 s3 goto lbl_OutOfBounds_451
goto lbl_Inbound_452
lbl_OutOfBounds_451:
error ("array index out of bounds")
lbl_Inbound_452:
s8 = s6 * t3
s8 = s8 + s6
s8 = s5 + s8
s7 = [s8 + 0]
s4 = 4
s9 = 5
s10 = s4 - s9
s11 = [t5 + 0]
s1 = s10 < t3
s2 = t3 < s11
s3 = s1 * s2
if0 s3 goto lbl_OutOfBounds_462
goto lbl_Inbound_463
lbl_OutOfBounds_462:
error ("array index out of bounds")
lbl_Inbound_463:
s6 = s4 * t3
s6 = s6 + s4
s6 = t5 + s6
[s6 + 0] =s7
t5 = 1
s5 = t3 + t5
t3 = s5
goto lbl_While_424
lbl_WhileExit_425:
t5 = 0
t3 = t5
lbl_While_468:
t5 = [a2 + 12]
s8 = [t5 + 0]
t5 = t3 < s8
if0 t5 goto lbl_WhileExit_469
t5 = 0
s9 = t5
lbl_While_474:
t5 = [a2 + 40]
s10 = [t5 + 0]
t5 = s9 < s10
if0 t5 goto lbl_WhileExit_475
t5 = [a2 + 12]
s11 = 4
s1 = 5
s2 = s11 - s1
s3 = [t5 + 0]
s4 = s2 < t3
s7 = t3 < s3
s6 = s4 * s7
if0 s6 goto lbl_OutOfBounds_489
goto lbl_Inbound_490
lbl_OutOfBounds_489:
error ("array index out of bounds")
lbl_Inbound_490:
s5 = s11 * t3
s5 = s5 + s11
s5 = t5 + s5
t5 = [s5 + 0]
s8 = [a2 + 40]
s10 = 4
s1 = 5
s2 = s10 - s1
s3 = [s8 + 0]
s4 = s2 < s9
s7 = s9 < s3
s6 = s4 * s7
if0 s6 goto lbl_OutOfBounds_501
goto lbl_Inbound_502
lbl_OutOfBounds_501:
error ("array index out of bounds")
lbl_Inbound_502:
s11 = s10 * s9
s11 = s11 + s10
s11 = s8 + s11
s5 = [s11 + 0]
s1 = t5 * s5
t5 = t4 + s1
t4 = t5
t5 = 1
s2 = s9 + t5
s9 = s2
goto lbl_While_474
lbl_WhileExit_475:
t5 = 1
s3 = t3 + t5
t3 = s3
goto lbl_While_468
lbl_WhileExit_469:
result = t4
s6 = stack_s6
s6 = stack_s6
s5 = stack_s5
s2 = stack_s2
s3 = stack_s3
s4 = stack_s4
s3 = stack_s3
s1 = stack_s1
s10 = stack_s10
s11 = stack_s11
s5 = stack_s5
s1 = stack_s1
s4 = stack_s4
s7 = stack_s7
s2 = stack_s2
s9 = stack_s9
s8 = stack_s8
s3 = stack_s3
s7 = stack_s7
s4 = stack_s4
s1 = stack_s1
s2 = stack_s2
s8 = stack_s8
s3 = stack_s3
s10 = stack_s10
s1 = stack_s1
s2 = stack_s2
s10 = stack_s10
s11 = stack_s11
s1 = stack_s1
s6 = stack_s6
s6 = stack_s6
s9 = stack_s9
s4 = stack_s4
s5 = stack_s5
s7 = stack_s7
s2 = stack_s2
s4 = stack_s4
s3 = stack_s3
s11 = stack_s11
s1 = stack_s1
s2 = stack_s2
s3 = stack_s3
s11 = stack_s11
s1 = stack_s1
s9 = stack_s9
s10 = stack_s10
s10 = stack_s10
s6 = stack_s6
s9 = stack_s9
s8 = stack_s8
s7 = stack_s7
s8 = stack_s8
s3 = stack_s3
s5 = stack_s5
s2 = stack_s2
s11 = stack_s11
s5 = stack_s5
return result
