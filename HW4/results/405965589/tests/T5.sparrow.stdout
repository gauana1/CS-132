func main()
stack_s3 = s3
stack_s4 = s4
stack_s5 = s5
stack_s1 = s1
stack_s2 = s2
stack_s4 = s4
stack_s8 = s8
stack_s7 = s7
stack_s3 = s3
stack_s10 = s10
stack_s5 = s5
stack_s9 = s9
stack_s11 = s11
stack_s7 = s7
stack_s1 = s1
stack_s2 = s2
stack_s6 = s6
stack_s9 = s9
stack_s10 = s10
stack_s5 = s5
stack_s4 = s4
stack_s7 = s7
stack_s6 = s6
stack_s11 = s11
stack_s8 = s8
stack_s2 = s2
stack_s1 = s1
stack_s9 = s9
stack_s10 = s10
stack_s4 = s4
stack_s3 = s3
stack_s5 = s5
stack_s7 = s7
stack_s6 = s6
stack_s11 = s11
stack_s6 = s6
stack_s3 = s3
stack_s8 = s8
stack_s1 = s1
stack_s2 = s2
t2 = 64
t3 = 20
t4 = alloc(t2)
t5 = alloc(t3)
s1 = @X_compute
[t5 + 0] =s1
s2 = @V_getArray
[t5 + 4] =s2
s3 = @X_setDepArray
[t5 + 16] =s3
s4 = @V_calculate
[t5 + 8] =s4
s5 = @V_setArray
[t5 + 12] =s5
[t4 + 0] =t5
if0 t4 goto lbl_NullPtr_9
goto lbl_GoodPtr_10
lbl_NullPtr_9:
error ("null pointer")
lbl_GoodPtr_10:
s6 = t4
s7 = 56
s8 = 20
s9 = alloc(s7)
s10 = alloc(s8)
s11 = @Y_compute
[s10 + 0] =s11
t2 = @V_getArray
[s10 + 4] =t2
t3 = @Y_setDepArray
[s10 + 16] =t3
s1 = @V_calculate
[s10 + 8] =s1
s2 = @V_setArray
[s10 + 12] =s2
[s9 + 0] =s10
if0 s9 goto lbl_NullPtr_20
goto lbl_GoodPtr_21
lbl_NullPtr_20:
error ("null pointer")
lbl_GoodPtr_21:
s3 = s9
s4 = 48
s5 = 20
t5 = alloc(s4)
t4 = alloc(s5)
s6 = @Z_compute
[t4 + 0] =s6
s7 = @V_getArray
[t4 + 4] =s7
s8 = @Z_setDepArray
[t4 + 16] =s8
s11 = @V_calculate
[t4 + 8] =s11
t2 = @V_setArray
[t4 + 12] =t2
[t5 + 0] =t4
if0 t5 goto lbl_NullPtr_31
goto lbl_GoodPtr_32
lbl_NullPtr_31:
error ("null pointer")
lbl_GoodPtr_32:
t3 = t5
s1 = 40
s2 = 20
s10 = alloc(s1)
s9 = alloc(s2)
s3 = @W_compute
[s9 + 0] =s3
s4 = @V_getArray
[s9 + 4] =s4
s5 = @W_setDepArray
[s9 + 16] =s5
s6 = @V_calculate
[s9 + 8] =s6
s7 = @V_setArray
[s9 + 12] =s7
[s10 + 0] =s9
if0 s10 goto lbl_NullPtr_42
goto lbl_GoodPtr_43
lbl_NullPtr_42:
error ("null pointer")
lbl_GoodPtr_43:
t1 = s10
w= t1
s11 = 32
t2 = 16
s8 = alloc(s11)
t4 = alloc(t2)
t5 = @V_compute
[t4 + 0] =t5
t3 = @V_getArray
[t4 + 4] =t3
s1 = @V_calculate
[t4 + 8] =s1
s2 = @V_setArray
[t4 + 12] =s2
[s8 + 0] =t4
if0 s8 goto lbl_NullPtr_52
goto lbl_GoodPtr_53
lbl_NullPtr_52:
error ("null pointer")
lbl_GoodPtr_53:
t1 = s8
v= t1
t0 = w
if0 t0 goto lbl_NullPtr_56
t0 = w
s4 = [t0 + 0]
s4 = [s4 + 0]
s5 = 40
stack_a2 = a2
a2 = w
stack_a3 = a3
a3 = s5
s3 = call s4()
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_57
lbl_NullPtr_56:
error ("null pointer")
lbl_GoodPtr_57:
t1 = s3
result= t1
t0 = result
print (t0)
t0 = v
if0 t0 goto lbl_NullPtr_61
t0 = v
s7 = [t0 + 0]
s7 = [s7 + 0]
s9 = 50
stack_a2 = a2
a2 = v
stack_a3 = a3
a3 = s9
s6 = call s7()
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_62
lbl_NullPtr_61:
error ("null pointer")
lbl_GoodPtr_62:
t1 = s6
result= t1
t0 = result
print (t0)
s10 = 0
v64 = s10
s3 = stack_s3
s4 = stack_s4
s5 = stack_s5
s1 = stack_s1
s2 = stack_s2
s4 = stack_s4
s8 = stack_s8
s7 = stack_s7
s3 = stack_s3
s10 = stack_s10
s5 = stack_s5
s9 = stack_s9
s11 = stack_s11
s7 = stack_s7
s1 = stack_s1
s2 = stack_s2
s6 = stack_s6
s9 = stack_s9
s10 = stack_s10
s5 = stack_s5
s4 = stack_s4
s7 = stack_s7
s6 = stack_s6
s11 = stack_s11
s8 = stack_s8
s2 = stack_s2
s1 = stack_s1
s9 = stack_s9
s10 = stack_s10
s4 = stack_s4
s3 = stack_s3
s5 = stack_s5
s7 = stack_s7
s6 = stack_s6
s11 = stack_s11
s6 = stack_s6
s3 = stack_s3
s8 = stack_s8
s1 = stack_s1
s2 = stack_s2
t0 = v64
return v64
func V_getArray()
t3 = [a2 + 20]
v65 = t3
t0 = v65
return v65
func V_setArray()
[a2 + 20] =a3
t4 = 1
v66 = t4
t0 = v66
return v66
func V_compute()
stack_s6 = s6
stack_s7 = s7
stack_s4 = s4
stack_s2 = s2
stack_s3 = s3
stack_s1 = s1
stack_s2 = s2
stack_s4 = s4
stack_s3 = s3
stack_s5 = s5
stack_s5 = s5
stack_s1 = s1
stack_s6 = s6
stack_s7 = s7
stack_s8 = s8
stack_s10 = s10
stack_s9 = s9
stack_s11 = s11
stack_s10 = s10
stack_s8 = s8
stack_s11 = s11
t4 = 64
t3 = 20
t2 = alloc(t4)
t5 = alloc(t3)
s1 = @X_compute
[t5 + 0] =s1
s2 = @V_getArray
[t5 + 4] =s2
s3 = @X_setDepArray
[t5 + 16] =s3
s4 = @V_calculate
[t5 + 8] =s4
s5 = @V_setArray
[t5 + 12] =s5
[t2 + 0] =t5
if0 t2 goto lbl_NullPtr_76
goto lbl_GoodPtr_77
lbl_NullPtr_76:
error ("null pointer")
lbl_GoodPtr_77:
[a2 + 8] =t2
s6 = [a2 + 8]
if0 s6 goto lbl_NullPtr_81
s7 = [s6 + 0]
s7 = [s7 + 8]
stack_a2 = a2
a2 = s6
stack_a3 = a3
a3 = a3
s8 = call s7()
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_82
lbl_NullPtr_81:
error ("null pointer")
lbl_GoodPtr_82:
t1 = s8
result= t1
s10 = 1
s11 = 4
s9 = a3 + s10
s9 = s9 * s11
t4 = alloc(s9)
if0 t4 goto lbl_NullPtr_87
goto lbl_GoodPtr_88
lbl_NullPtr_87:
error ("null pointer")
lbl_GoodPtr_88:
[t4 + 0] =a3
[a2 + 20] =t4
t3 = 0
t1 = t3
i= t1
lbl_While_90:
s2 = [a2 + 20]
s3 = [s2 + 0]
t0 = i
s4 = t0 < s3
if0 s4 goto lbl_WhileExit_91
t0 =[a2 + 20]
v95 = t0
t0 = 4
v96 = t0
s1 = 5
t0 = v96
s5 = t0 - s1
t0 = v95
t2 = [t0 + 0]
t1 = i
t5 = s5 < t1
t0 = i
s6 = t0 < t2
s7 = t5 * s6
if0 s7 goto lbl_OutOfBounds_103
goto lbl_Inbound_104
lbl_OutOfBounds_103:
error ("array index out of bounds")
lbl_Inbound_104:
t0 = v96
t1 = i
s8 = t0 * t1
t1 = v96
s8 = s8 + t1
t0 = v95
s8 = t0 + s8
t1 = result
[s8 + 0] =t1
s10 = 1
t0 = i
s11 = t0 + s10
t1 = s11
i= t1
goto lbl_While_90
lbl_WhileExit_91:
s6 = stack_s6
s7 = stack_s7
s4 = stack_s4
s2 = stack_s2
s3 = stack_s3
s1 = stack_s1
s2 = stack_s2
s4 = stack_s4
s3 = stack_s3
s5 = stack_s5
s5 = stack_s5
s1 = stack_s1
s6 = stack_s6
s7 = stack_s7
s8 = stack_s8
s10 = stack_s10
s9 = stack_s9
s11 = stack_s11
s10 = stack_s10
s8 = stack_s8
s11 = stack_s11
t0 = result
return result
func V_calculate()
t4 = 2
t5 = a3 * t4
v108 = t5
t0 = v108
return v108
func W_setDepArray()
[a2 + 36] =a3
t4 = 1
v110 = t4
t0 = v110
return v110
func W_compute()
stack_s1 = s1
stack_s7 = s7
stack_s8 = s8
stack_s6 = s6
stack_s9 = s9
stack_s4 = s4
stack_s5 = s5
stack_s2 = s2
stack_s3 = s3
t4 = 56
t2 = 20
t3 = alloc(t4)
t5 = alloc(t2)
s1 = @Y_compute
[t5 + 0] =s1
s2 = @V_getArray
[t5 + 4] =s2
s3 = @Y_setDepArray
[t5 + 16] =s3
s4 = @V_calculate
[t5 + 8] =s4
s5 = @V_setArray
[t5 + 12] =s5
[t3 + 0] =t5
if0 t3 goto lbl_NullPtr_120
goto lbl_GoodPtr_121
lbl_NullPtr_120:
error ("null pointer")
lbl_GoodPtr_121:
[a2 + 32] =t3
s6 = [a2 + 32]
if0 s6 goto lbl_NullPtr_125
s7 = [s6 + 0]
s7 = [s7 + 8]
stack_a2 = a2
a2 = s6
stack_a3 = a3
a3 = a3
s8 = call s7()
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_126
lbl_NullPtr_125:
error ("null pointer")
lbl_GoodPtr_126:
s9 = s8
result = s9
s1 = stack_s1
s7 = stack_s7
s8 = stack_s8
s6 = stack_s6
s9 = stack_s9
s4 = stack_s4
s5 = stack_s5
s2 = stack_s2
s3 = stack_s3
t0 = result
return result
func Z_setDepArray()
[a2 + 44] =a3
t4 = 1
v127 = t4
t0 = v127
return v127
func Z_compute()
stack_s7 = s7
stack_s3 = s3
stack_s4 = s4
stack_s1 = s1
stack_s11 = s11
stack_s7 = s7
stack_s9 = s9
stack_s10 = s10
stack_s8 = s8
stack_s6 = s6
stack_s10 = s10
stack_s5 = s5
stack_s9 = s9
stack_s6 = s6
stack_s6 = s6
stack_s9 = s9
stack_s5 = s5
stack_s6 = s6
stack_s3 = s3
stack_s1 = s1
stack_s8 = s8
stack_s4 = s4
stack_s2 = s2
stack_s5 = s5
stack_s1 = s1
stack_s2 = s2
stack_s7 = s7
stack_s11 = s11
stack_s4 = s4
stack_s3 = s3
stack_s10 = s10
stack_s7 = s7
stack_s2 = s2
stack_s11 = s11
stack_s5 = s5
stack_s8 = s8
stack_s9 = s9
stack_s11 = s11
stack_s10 = s10
stack_s9 = s9
stack_s1 = s1
stack_s5 = s5
stack_s10 = s10
stack_s8 = s8
stack_s11 = s11
stack_s6 = s6
stack_s8 = s8
stack_s4 = s4
stack_s7 = s7
stack_s1 = s1
stack_s3 = s3
stack_s2 = s2
stack_s3 = s3
stack_s2 = s2
stack_s4 = s4
t4 = 48
t3 = 20
t2 = alloc(t4)
t5 = alloc(t3)
s1 = @Z_compute
[t5 + 0] =s1
s2 = @V_getArray
[t5 + 4] =s2
s3 = @Z_setDepArray
[t5 + 16] =s3
s4 = @V_calculate
[t5 + 8] =s4
s5 = @V_setArray
[t5 + 12] =s5
[t2 + 0] =t5
if0 t2 goto lbl_NullPtr_137
goto lbl_GoodPtr_138
lbl_NullPtr_137:
error ("null pointer")
lbl_GoodPtr_138:
[a2 + 40] =t2
s6 = [a2 + 40]
if0 s6 goto lbl_NullPtr_142
s7 = [s6 + 0]
s7 = [s7 + 8]
stack_a2 = a2
a2 = s6
stack_a3 = a3
a3 = a3
s8 = call s7()
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_143
lbl_NullPtr_142:
error ("null pointer")
lbl_GoodPtr_143:
t1 = s8
result= t1
s10 = 1
s11 = 4
s9 = a3 + s10
s9 = s9 * s11
t4 = alloc(s9)
if0 t4 goto lbl_NullPtr_148
goto lbl_GoodPtr_149
lbl_NullPtr_148:
error ("null pointer")
lbl_GoodPtr_149:
[t4 + 0] =a3
[a2 + 20] =t4
t3 = 1
s1 = 4
s2 = a3 + t3
s2 = s2 * s1
s3 = alloc(s2)
if0 s3 goto lbl_NullPtr_154
goto lbl_GoodPtr_155
lbl_NullPtr_154:
error ("null pointer")
lbl_GoodPtr_155:
[s3 + 0] =a3
[a2 + 44] =s3
s4 = 0
t1 = s4
i= t1
lbl_While_157:
t5 = [a2 + 20]
t2 = [t5 + 0]
t0 = i
s6 = t0 < t2
if0 s6 goto lbl_WhileExit_158
t0 =[a2 + 20]
v162 = t0
s8 = 2
t0 = result
t0 =t0 * s8
v163 = t0
t0 = 4
v165 = t0
s5 = 5
t0 = v165
s7 = t0 - s5
t0 = v162
s11 = [t0 + 0]
t1 = i
s10 = s7 < t1
t0 = i
s9 = t0 < s11
t4 = s10 * s9
if0 t4 goto lbl_OutOfBounds_172
goto lbl_Inbound_173
lbl_OutOfBounds_172:
error ("array index out of bounds")
lbl_Inbound_173:
t0 = v165
t1 = i
t3 = t0 * t1
t1 = v165
t3 = t3 + t1
t0 = v162
t3 = t0 + t3
t1 = v163
[t3 + 0] =t1
t0 =[a2 + 44]
v175 = t0
t0 =[a2 + 20]
v176 = t0
t0 = 4
v177 = t0
s1 = 5
t0 = v177
s2 = t0 - s1
t0 = v176
s4 = [t0 + 0]
t1 = i
s3 = s2 < t1
t0 = i
t5 = t0 < s4
t2 = s3 * t5
if0 t2 goto lbl_OutOfBounds_184
goto lbl_Inbound_185
lbl_OutOfBounds_184:
error ("array index out of bounds")
lbl_Inbound_185:
t0 = v177
t1 = i
s6 = t0 * t1
t1 = v177
s6 = s6 + t1
t0 = v176
s6 = t0 + s6
t0 =[s6 + 0]
v187 = t0
t0 = 4
v188 = t0
s7 = 5
t0 = v188
s8 = t0 - s7
t0 = v175
s11 = [t0 + 0]
t1 = i
s5 = s8 < t1
t0 = i
s10 = t0 < s11
s9 = s5 * s10
if0 s9 goto lbl_OutOfBounds_195
goto lbl_Inbound_196
lbl_OutOfBounds_195:
error ("array index out of bounds")
lbl_Inbound_196:
t0 = v188
t1 = i
t4 = t0 * t1
t1 = v188
t4 = t4 + t1
t0 = v175
t4 = t0 + t4
t1 = v187
[t4 + 0] =t1
t3 = 1
t0 = i
s1 = t0 + t3
t1 = s1
i= t1
goto lbl_While_157
lbl_WhileExit_158:
s2 = 0
t1 = s2
i= t1
lbl_While_201:
s4 = [a2 + 20]
s3 = [s4 + 0]
t0 = i
t5 = t0 < s3
if0 t5 goto lbl_WhileExit_202
t2 = 0
t1 = t2
j= t1
lbl_While_207:
s7 = [a2 + 44]
s8 = [s7 + 0]
t0 = j
s11 = t0 < s8
if0 s11 goto lbl_WhileExit_208
t0 =[a2 + 20]
v214 = t0
t0 = 4
v215 = t0
s6 = 5
t0 = v215
s5 = t0 - s6
t0 = v214
s9 = [t0 + 0]
t1 = i
s10 = s5 < t1
t0 = i
t4 = t0 < s9
t3 = s10 * t4
if0 t3 goto lbl_OutOfBounds_222
goto lbl_Inbound_223
lbl_OutOfBounds_222:
error ("array index out of bounds")
lbl_Inbound_223:
t0 = v215
t1 = i
s1 = t0 * t1
t1 = v215
s1 = s1 + t1
t0 = v214
s1 = t0 + s1
t0 =[s1 + 0]
v225 = t0
t0 =[a2 + 44]
v226 = t0
t0 = 4
v227 = t0
s2 = 5
t0 = v227
s4 = t0 - s2
t0 = v226
t5 = [t0 + 0]
t1 = j
s3 = s4 < t1
t0 = j
t2 = t0 < t5
s7 = s3 * t2
if0 s7 goto lbl_OutOfBounds_234
goto lbl_Inbound_235
lbl_OutOfBounds_234:
error ("array index out of bounds")
lbl_Inbound_235:
t0 = v227
t1 = j
s8 = t0 * t1
t1 = v227
s8 = s8 + t1
t0 = v226
s8 = t0 + s8
s11 = [s8 + 0]
t0 = v225
s6 = t0 + s11
t0 = result
s5 = t0 + s6
t1 = s5
result= t1
s9 = 1
t0 = j
s10 = t0 + s9
t1 = s10
j= t1
goto lbl_While_207
lbl_WhileExit_208:
t4 = 1
t0 = i
t3 = t0 + t4
t1 = t3
i= t1
goto lbl_While_201
lbl_WhileExit_202:
s7 = stack_s7
s3 = stack_s3
s4 = stack_s4
s1 = stack_s1
s11 = stack_s11
s7 = stack_s7
s9 = stack_s9
s10 = stack_s10
s8 = stack_s8
s6 = stack_s6
s10 = stack_s10
s5 = stack_s5
s9 = stack_s9
s6 = stack_s6
s6 = stack_s6
s9 = stack_s9
s5 = stack_s5
s6 = stack_s6
s3 = stack_s3
s1 = stack_s1
s8 = stack_s8
s4 = stack_s4
s2 = stack_s2
s5 = stack_s5
s1 = stack_s1
s2 = stack_s2
s7 = stack_s7
s11 = stack_s11
s4 = stack_s4
s3 = stack_s3
s10 = stack_s10
s7 = stack_s7
s2 = stack_s2
s11 = stack_s11
s5 = stack_s5
s8 = stack_s8
s9 = stack_s9
s11 = stack_s11
s10 = stack_s10
s9 = stack_s9
s1 = stack_s1
s5 = stack_s5
s10 = stack_s10
s8 = stack_s8
s11 = stack_s11
s6 = stack_s6
s8 = stack_s8
s4 = stack_s4
s7 = stack_s7
s1 = stack_s1
s3 = stack_s3
s2 = stack_s2
s3 = stack_s3
s2 = stack_s2
s4 = stack_s4
t0 = result
return result
func Y_setDepArray()
[a2 + 52] =a3
t4 = 1
v242 = t4
t0 = v242
return v242
func Y_compute()
stack_s8 = s8
stack_s11 = s11
stack_s2 = s2
stack_s1 = s1
stack_s3 = s3
stack_s2 = s2
stack_s5 = s5
stack_s1 = s1
stack_s10 = s10
stack_s1 = s1
stack_s4 = s4
stack_s3 = s3
stack_s11 = s11
stack_s9 = s9
stack_s7 = s7
stack_s8 = s8
stack_s9 = s9
stack_s5 = s5
stack_s5 = s5
stack_s6 = s6
stack_s4 = s4
stack_s2 = s2
stack_s5 = s5
stack_s2 = s2
stack_s7 = s7
stack_s3 = s3
stack_s4 = s4
stack_s10 = s10
stack_s9 = s9
stack_s4 = s4
stack_s6 = s6
stack_s10 = s10
stack_s1 = s1
stack_s6 = s6
stack_s8 = s8
stack_s11 = s11
stack_s3 = s3
stack_s2 = s2
stack_s1 = s1
stack_s3 = s3
stack_s7 = s7
stack_s11 = s11
stack_s11 = s11
stack_s9 = s9
stack_s8 = s8
stack_s5 = s5
stack_s7 = s7
stack_s10 = s10
stack_s9 = s9
stack_s8 = s8
stack_s10 = s10
stack_s4 = s4
stack_s6 = s6
stack_s6 = s6
stack_s7 = s7
t4 = 32
t3 = 16
t2 = alloc(t4)
t5 = alloc(t3)
s1 = @V_compute
[t5 + 0] =s1
s2 = @V_getArray
[t5 + 4] =s2
s3 = @V_calculate
[t5 + 8] =s3
s4 = @V_setArray
[t5 + 12] =s4
[t2 + 0] =t5
if0 t2 goto lbl_NullPtr_251
goto lbl_GoodPtr_252
lbl_NullPtr_251:
error ("null pointer")
lbl_GoodPtr_252:
[a2 + 48] =t2
s5 = [a2 + 48]
if0 s5 goto lbl_NullPtr_256
s6 = [s5 + 0]
s6 = [s6 + 8]
stack_a2 = a2
a2 = s5
stack_a3 = a3
a3 = a3
s7 = call s6()
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_257
lbl_NullPtr_256:
error ("null pointer")
lbl_GoodPtr_257:
t1 = s7
result= t1
s9 = 1
s10 = 4
s8 = a3 + s9
s8 = s8 * s10
s11 = alloc(s8)
if0 s11 goto lbl_NullPtr_262
goto lbl_GoodPtr_263
lbl_NullPtr_262:
error ("null pointer")
lbl_GoodPtr_263:
[s11 + 0] =a3
[a2 + 20] =s11
t4 = 1
t3 = 4
s1 = a3 + t4
s1 = s1 * t3
s2 = alloc(s1)
if0 s2 goto lbl_NullPtr_268
goto lbl_GoodPtr_269
lbl_NullPtr_268:
error ("null pointer")
lbl_GoodPtr_269:
[s2 + 0] =a3
[a2 + 52] =s2
s3 = 0
t1 = s3
i= t1
lbl_While_271:
t5 = [a2 + 20]
t2 = [t5 + 0]
t0 = i
s5 = t0 < t2
if0 s5 goto lbl_WhileExit_272
t0 =[a2 + 20]
v276 = t0
s7 = 3
t0 = result
t0 =t0 * s7
v277 = t0
t0 = 4
v279 = t0
s4 = 5
t0 = v279
s6 = t0 - s4
t0 = v276
s10 = [t0 + 0]
t1 = i
s9 = s6 < t1
t0 = i
s8 = t0 < s10
s11 = s9 * s8
if0 s11 goto lbl_OutOfBounds_286
goto lbl_Inbound_287
lbl_OutOfBounds_286:
error ("array index out of bounds")
lbl_Inbound_287:
t0 = v279
t1 = i
t4 = t0 * t1
t1 = v279
t4 = t4 + t1
t0 = v276
t4 = t0 + t4
t1 = v277
[t4 + 0] =t1
t0 =[a2 + 52]
v289 = t0
t0 =[a2 + 20]
v290 = t0
t0 = 4
v291 = t0
t3 = 5
t0 = v291
s1 = t0 - t3
t0 = v290
s3 = [t0 + 0]
t1 = i
s2 = s1 < t1
t0 = i
t5 = t0 < s3
t2 = s2 * t5
if0 t2 goto lbl_OutOfBounds_298
goto lbl_Inbound_299
lbl_OutOfBounds_298:
error ("array index out of bounds")
lbl_Inbound_299:
t0 = v291
t1 = i
s5 = t0 * t1
t1 = v291
s5 = s5 + t1
t0 = v290
s5 = t0 + s5
t0 =[s5 + 0]
v301 = t0
t0 = 4
v302 = t0
s6 = 5
t0 = v302
s7 = t0 - s6
t0 = v289
s10 = [t0 + 0]
t1 = i
s4 = s7 < t1
t0 = i
s9 = t0 < s10
s8 = s4 * s9
if0 s8 goto lbl_OutOfBounds_309
goto lbl_Inbound_310
lbl_OutOfBounds_309:
error ("array index out of bounds")
lbl_Inbound_310:
t0 = v302
t1 = i
s11 = t0 * t1
t1 = v302
s11 = s11 + t1
t0 = v289
s11 = t0 + s11
t1 = v301
[s11 + 0] =t1
t4 = 1
t0 = i
t3 = t0 + t4
t1 = t3
i= t1
goto lbl_While_271
lbl_WhileExit_272:
s1 = 0
t1 = s1
i= t1
lbl_While_315:
s3 = [a2 + 20]
s2 = [s3 + 0]
t0 = i
t5 = t0 < s2
if0 t5 goto lbl_WhileExit_316
t2 = 0
t1 = t2
j= t1
lbl_While_321:
s6 = [a2 + 52]
s7 = [s6 + 0]
t0 = j
s10 = t0 < s7
if0 s10 goto lbl_WhileExit_322
t0 =[a2 + 20]
v328 = t0
t0 = 4
v329 = t0
s5 = 5
t0 = v329
s4 = t0 - s5
t0 = v328
s8 = [t0 + 0]
t1 = i
s9 = s4 < t1
t0 = i
s11 = t0 < s8
t4 = s9 * s11
if0 t4 goto lbl_OutOfBounds_336
goto lbl_Inbound_337
lbl_OutOfBounds_336:
error ("array index out of bounds")
lbl_Inbound_337:
t0 = v329
t1 = i
t3 = t0 * t1
t1 = v329
t3 = t3 + t1
t0 = v328
t3 = t0 + t3
t0 =[t3 + 0]
v339 = t0
t0 =[a2 + 52]
v340 = t0
t0 = 4
v341 = t0
s1 = 5
t0 = v341
s3 = t0 - s1
t0 = v340
t5 = [t0 + 0]
t1 = j
s2 = s3 < t1
t0 = j
t2 = t0 < t5
s6 = s2 * t2
if0 s6 goto lbl_OutOfBounds_348
goto lbl_Inbound_349
lbl_OutOfBounds_348:
error ("array index out of bounds")
lbl_Inbound_349:
t0 = v341
t1 = j
s7 = t0 * t1
t1 = v341
s7 = s7 + t1
t0 = v340
s7 = t0 + s7
s10 = [s7 + 0]
t0 = v339
s5 = t0 - s10
t0 = result
s4 = t0 * s5
t1 = s4
result= t1
s8 = 1
t0 = j
s9 = t0 + s8
t1 = s9
j= t1
goto lbl_While_321
lbl_WhileExit_322:
s11 = 1
t0 = i
t4 = t0 + s11
t1 = t4
i= t1
goto lbl_While_315
lbl_WhileExit_316:
s8 = stack_s8
s11 = stack_s11
s2 = stack_s2
s1 = stack_s1
s3 = stack_s3
s2 = stack_s2
s5 = stack_s5
s1 = stack_s1
s10 = stack_s10
s1 = stack_s1
s4 = stack_s4
s3 = stack_s3
s11 = stack_s11
s9 = stack_s9
s7 = stack_s7
s8 = stack_s8
s9 = stack_s9
s5 = stack_s5
s5 = stack_s5
s6 = stack_s6
s4 = stack_s4
s2 = stack_s2
s5 = stack_s5
s2 = stack_s2
s7 = stack_s7
s3 = stack_s3
s4 = stack_s4
s10 = stack_s10
s9 = stack_s9
s4 = stack_s4
s6 = stack_s6
s10 = stack_s10
s1 = stack_s1
s6 = stack_s6
s8 = stack_s8
s11 = stack_s11
s3 = stack_s3
s2 = stack_s2
s1 = stack_s1
s3 = stack_s3
s7 = stack_s7
s11 = stack_s11
s11 = stack_s11
s9 = stack_s9
s8 = stack_s8
s5 = stack_s5
s7 = stack_s7
s10 = stack_s10
s9 = stack_s9
s8 = stack_s8
s10 = stack_s10
s4 = stack_s4
s6 = stack_s6
s6 = stack_s6
s7 = stack_s7
t0 = result
return result
func X_setDepArray()
[a2 + 60] =a3
t4 = 1
v356 = t4
t0 = v356
return v356
func X_compute()
stack_s2 = s2
stack_s3 = s3
stack_s1 = s1
stack_s7 = s7
stack_s10 = s10
stack_s11 = s11
stack_s10 = s10
stack_s6 = s6
stack_s5 = s5
stack_s8 = s8
stack_s4 = s4
stack_s4 = s4
stack_s8 = s8
stack_s5 = s5
stack_s7 = s7
stack_s6 = s6
stack_s3 = s3
stack_s8 = s8
stack_s4 = s4
stack_s9 = s9
stack_s5 = s5
stack_s2 = s2
stack_s11 = s11
stack_s1 = s1
stack_s10 = s10
stack_s2 = s2
stack_s3 = s3
stack_s1 = s1
stack_s9 = s9
stack_s11 = s11
stack_s7 = s7
stack_s7 = s7
stack_s9 = s9
stack_s6 = s6
stack_s5 = s5
stack_s7 = s7
stack_s3 = s3
stack_s8 = s8
stack_s4 = s4
stack_s10 = s10
stack_s1 = s1
stack_s2 = s2
stack_s4 = s4
stack_s6 = s6
stack_s1 = s1
stack_s6 = s6
stack_s5 = s5
stack_s11 = s11
stack_s8 = s8
stack_s3 = s3
stack_s10 = s10
stack_s2 = s2
stack_s1 = s1
stack_s9 = s9
stack_s11 = s11
stack_s9 = s9
t4 = 40
t3 = 20
t2 = alloc(t4)
t5 = alloc(t3)
s1 = @W_compute
[t5 + 0] =s1
s2 = @V_getArray
[t5 + 4] =s2
s3 = @W_setDepArray
[t5 + 16] =s3
s4 = @V_calculate
[t5 + 8] =s4
s5 = @V_setArray
[t5 + 12] =s5
[t2 + 0] =t5
if0 t2 goto lbl_NullPtr_366
goto lbl_GoodPtr_367
lbl_NullPtr_366:
error ("null pointer")
lbl_GoodPtr_367:
[a2 + 56] =t2
s6 = [a2 + 56]
if0 s6 goto lbl_NullPtr_371
s7 = [s6 + 0]
s7 = [s7 + 8]
stack_a2 = a2
a2 = s6
stack_a3 = a3
a3 = a3
s8 = call s7()
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_372
lbl_NullPtr_371:
error ("null pointer")
lbl_GoodPtr_372:
t1 = s8
result= t1
s10 = 0
t1 = s10
result= t1
s11 = 1
t4 = 4
s9 = a3 + s11
s9 = s9 * t4
t3 = alloc(s9)
if0 t3 goto lbl_NullPtr_378
goto lbl_GoodPtr_379
lbl_NullPtr_378:
error ("null pointer")
lbl_GoodPtr_379:
[t3 + 0] =a3
[a2 + 20] =t3
s1 = 1
s2 = 4
s3 = a3 + s1
s3 = s3 * s2
s4 = alloc(s3)
if0 s4 goto lbl_NullPtr_384
goto lbl_GoodPtr_385
lbl_NullPtr_384:
error ("null pointer")
lbl_GoodPtr_385:
[s4 + 0] =a3
[a2 + 60] =s4
s5 = 0
t1 = s5
i= t1
lbl_While_387:
t2 = [a2 + 20]
s6 = [t2 + 0]
t0 = i
s7 = t0 < s6
if0 s7 goto lbl_WhileExit_388
t0 =[a2 + 20]
v392 = t0
s10 = 4
t0 = result
t0 =t0 * s10
v393 = t0
t0 = 4
v395 = t0
t5 = 5
t0 = v395
s8 = t0 - t5
t0 = v392
t4 = [t0 + 0]
t1 = i
s11 = s8 < t1
t0 = i
s9 = t0 < t4
t3 = s11 * s9
if0 t3 goto lbl_OutOfBounds_402
goto lbl_Inbound_403
lbl_OutOfBounds_402:
error ("array index out of bounds")
lbl_Inbound_403:
t0 = v395
t1 = i
s1 = t0 * t1
t1 = v395
s1 = s1 + t1
t0 = v392
s1 = t0 + s1
t1 = v393
[s1 + 0] =t1
t0 =[a2 + 60]
v405 = t0
t0 =[a2 + 20]
v406 = t0
t0 = 4
v407 = t0
s2 = 5
t0 = v407
s3 = t0 - s2
t0 = v406
s5 = [t0 + 0]
t1 = i
s4 = s3 < t1
t0 = i
t2 = t0 < s5
s6 = s4 * t2
if0 s6 goto lbl_OutOfBounds_414
goto lbl_Inbound_415
lbl_OutOfBounds_414:
error ("array index out of bounds")
lbl_Inbound_415:
t0 = v407
t1 = i
s7 = t0 * t1
t1 = v407
s7 = s7 + t1
t0 = v406
s7 = t0 + s7
t0 =[s7 + 0]
v417 = t0
t0 = 4
v418 = t0
s8 = 5
t0 = v418
s10 = t0 - s8
t0 = v405
t4 = [t0 + 0]
t1 = i
t5 = s10 < t1
t0 = i
s11 = t0 < t4
s9 = t5 * s11
if0 s9 goto lbl_OutOfBounds_425
goto lbl_Inbound_426
lbl_OutOfBounds_425:
error ("array index out of bounds")
lbl_Inbound_426:
t0 = v418
t1 = i
t3 = t0 * t1
t1 = v418
t3 = t3 + t1
t0 = v405
t3 = t0 + t3
t1 = v417
[t3 + 0] =t1
s1 = 1
t0 = i
s2 = t0 + s1
t1 = s2
i= t1
goto lbl_While_387
lbl_WhileExit_388:
s3 = 0
t1 = s3
i= t1
lbl_While_431:
s5 = [a2 + 20]
s4 = [s5 + 0]
t0 = i
t2 = t0 < s4
if0 t2 goto lbl_WhileExit_432
s6 = 0
t1 = s6
j= t1
lbl_While_437:
s8 = [a2 + 60]
s10 = [s8 + 0]
t0 = j
t4 = t0 < s10
if0 t4 goto lbl_WhileExit_438
t0 =[a2 + 20]
v444 = t0
t0 = 4
v445 = t0
s7 = 5
t0 = v445
t5 = t0 - s7
t0 = v444
s9 = [t0 + 0]
t1 = i
s11 = t5 < t1
t0 = i
t3 = t0 < s9
s1 = s11 * t3
if0 s1 goto lbl_OutOfBounds_452
goto lbl_Inbound_453
lbl_OutOfBounds_452:
error ("array index out of bounds")
lbl_Inbound_453:
t0 = v445
t1 = i
s2 = t0 * t1
t1 = v445
s2 = s2 + t1
t0 = v444
s2 = t0 + s2
t0 =[s2 + 0]
v455 = t0
t0 =[a2 + 60]
v456 = t0
t0 = 4
v457 = t0
s3 = 5
t0 = v457
s5 = t0 - s3
t0 = v456
t2 = [t0 + 0]
t1 = j
s4 = s5 < t1
t0 = j
s6 = t0 < t2
s8 = s4 * s6
if0 s8 goto lbl_OutOfBounds_464
goto lbl_Inbound_465
lbl_OutOfBounds_464:
error ("array index out of bounds")
lbl_Inbound_465:
t0 = v457
t1 = j
s10 = t0 * t1
t1 = v457
s10 = s10 + t1
t0 = v456
s10 = t0 + s10
t4 = [s10 + 0]
t0 = v455
s7 = t0 * t4
t0 = result
t5 = t0 + s7
t1 = t5
result= t1
s9 = 1
t0 = j
s11 = t0 + s9
t1 = s11
j= t1
goto lbl_While_437
lbl_WhileExit_438:
t3 = 1
t0 = i
s1 = t0 + t3
t1 = s1
i= t1
goto lbl_While_431
lbl_WhileExit_432:
s2 = stack_s2
s3 = stack_s3
s1 = stack_s1
s7 = stack_s7
s10 = stack_s10
s11 = stack_s11
s10 = stack_s10
s6 = stack_s6
s5 = stack_s5
s8 = stack_s8
s4 = stack_s4
s4 = stack_s4
s8 = stack_s8
s5 = stack_s5
s7 = stack_s7
s6 = stack_s6
s3 = stack_s3
s8 = stack_s8
s4 = stack_s4
s9 = stack_s9
s5 = stack_s5
s2 = stack_s2
s11 = stack_s11
s1 = stack_s1
s10 = stack_s10
s2 = stack_s2
s3 = stack_s3
s1 = stack_s1
s9 = stack_s9
s11 = stack_s11
s7 = stack_s7
s7 = stack_s7
s9 = stack_s9
s6 = stack_s6
s5 = stack_s5
s7 = stack_s7
s3 = stack_s3
s8 = stack_s8
s4 = stack_s4
s10 = stack_s10
s1 = stack_s1
s2 = stack_s2
s4 = stack_s4
s6 = stack_s6
s1 = stack_s1
s6 = stack_s6
s5 = stack_s5
s11 = stack_s11
s8 = stack_s8
s3 = stack_s3
s10 = stack_s10
s2 = stack_s2
s1 = stack_s1
s9 = stack_s9
s11 = stack_s11
s9 = stack_s9
t0 = result
return result
