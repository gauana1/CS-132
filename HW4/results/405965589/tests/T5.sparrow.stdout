func main()
t2 = 64
t3 = 20
t4 = alloc(t2)
t5 = alloc(t3)
t2 = @X_compute
[t5 + 0] =t2
t3 = @V_getArray
[t5 + 4] =t3
t2 = @X_setDepArray
[t5 + 16] =t2
t3 = @V_calculate
[t5 + 8] =t3
t2 = @V_setArray
[t5 + 12] =t2
[t4 + 0] =t5
if0 t4 goto lbl_NullPtr_9
goto lbl_GoodPtr_10
lbl_NullPtr_9:
error ("null pointer")
lbl_GoodPtr_10:
t3 = t4
t2 = 56
t5 = 20
t4 = alloc(t2)
t3 = alloc(t5)
t2 = @Y_compute
[t3 + 0] =t2
t5 = @V_getArray
[t3 + 4] =t5
t2 = @Y_setDepArray
[t3 + 16] =t2
t5 = @V_calculate
[t3 + 8] =t5
t2 = @V_setArray
[t3 + 12] =t2
[t4 + 0] =t3
if0 t4 goto lbl_NullPtr_20
goto lbl_GoodPtr_21
lbl_NullPtr_20:
error ("null pointer")
lbl_GoodPtr_21:
t5 = t4
t2 = 48
t3 = 20
t4 = alloc(t2)
t5 = alloc(t3)
t2 = @Z_compute
[t5 + 0] =t2
t3 = @V_getArray
[t5 + 4] =t3
t2 = @Z_setDepArray
[t5 + 16] =t2
t3 = @V_calculate
[t5 + 8] =t3
t2 = @V_setArray
[t5 + 12] =t2
[t4 + 0] =t5
if0 t4 goto lbl_NullPtr_31
goto lbl_GoodPtr_32
lbl_NullPtr_31:
error ("null pointer")
lbl_GoodPtr_32:
t3 = t4
t2 = 40
t5 = 20
t4 = alloc(t2)
t3 = alloc(t5)
t2 = @W_compute
[t3 + 0] =t2
t5 = @V_getArray
[t3 + 4] =t5
t2 = @W_setDepArray
[t3 + 16] =t2
t5 = @V_calculate
[t3 + 8] =t5
t2 = @V_setArray
[t3 + 12] =t2
[t4 + 0] =t3
if0 t4 goto lbl_NullPtr_42
goto lbl_GoodPtr_43
lbl_NullPtr_42:
error ("null pointer")
lbl_GoodPtr_43:
t5 = t4
t2 = 32
t3 = 16
t4 = alloc(t2)
t2 = alloc(t3)
t3 = @V_compute
[t2 + 0] =t3
t3 = @V_getArray
[t2 + 4] =t3
t3 = @V_calculate
[t2 + 8] =t3
t3 = @V_setArray
[t2 + 12] =t3
[t4 + 0] =t2
if0 t4 goto lbl_NullPtr_52
goto lbl_GoodPtr_53
lbl_NullPtr_52:
error ("null pointer")
lbl_GoodPtr_53:
t3 = t4
if0 t5 goto lbl_NullPtr_56
t2 = [t5 + 0]
t2 = [t2 + 0]
t4 = 40
stack_t3 = t3
a2 = t5
a3 = t4
s1 = call t2()
t3 = stack_t3
goto lbl_GoodPtr_57
lbl_NullPtr_56:
error ("null pointer")
lbl_GoodPtr_57:
t5 = s1
print (t5)
if0 t3 goto lbl_NullPtr_61
t2 = [t3 + 0]
t2 = [t2 + 0]
t4 = 50
stack_t5 = t5
a2 = t3
a3 = t4
s2 = call t2()
t5 = stack_t5
goto lbl_GoodPtr_62
lbl_NullPtr_61:
error ("null pointer")
lbl_GoodPtr_62:
t5 = s2
print (t5)
t3 = 0
v64 = t3
s1 = stack_s1
s2 = stack_s2
return v64
func V_getArray()
t3 = [a2 + 20]
v65 = t3
return v65
func V_setArray()
[a2 + 20] =a3
t4 = 1
v66 = t4
return v66
func V_compute()
stack_s11 = s11
stack_s1 = s1
stack_s10 = s10
stack_s5 = s5
stack_s6 = s6
stack_s8 = s8
stack_s7 = s7
stack_s9 = s9
stack_s2 = s2
stack_s4 = s4
stack_s3 = s3
stack_s2 = s2
stack_s3 = s3
stack_s1 = s1
t4 = 64
t5 = 20
s1 = alloc(t4)
t4 = alloc(t5)
t5 = @X_compute
[t4 + 0] =t5
t5 = @V_getArray
[t4 + 4] =t5
t5 = @X_setDepArray
[t4 + 16] =t5
t5 = @V_calculate
[t4 + 8] =t5
t5 = @V_setArray
[t4 + 12] =t5
[s1 + 0] =t4
if0 s1 goto lbl_NullPtr_76
goto lbl_GoodPtr_77
lbl_NullPtr_76:
error ("null pointer")
lbl_GoodPtr_77:
[a2 + 8] =s1
t5 = [a2 + 8]
if0 t5 goto lbl_NullPtr_81
t4 = [t5 + 0]
t4 = [t4 + 8]
stack_a2 = a2
a2 = t5
stack_a3 = a3
s2 = call t4()
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_82
lbl_NullPtr_81:
error ("null pointer")
lbl_GoodPtr_82:
t5 = s2
t4 = 1
s3 = 4
s4 = a3 + t4
s4 = s4 * s3
t4 = alloc(s4)
if0 t4 goto lbl_NullPtr_87
goto lbl_GoodPtr_88
lbl_NullPtr_87:
error ("null pointer")
lbl_GoodPtr_88:
[t4 + 0] =a3
[a2 + 20] =t4
t2 = 0
t4 = t2
lbl_While_90:
t2 = [a2 + 20]
s5 = [t2 + 0]
t2 = t4 < s5
if0 t2 goto lbl_WhileExit_91
t2 = [a2 + 20]
s6 = 4
s7 = 5
s8 = s6 - s7
s9 = [t2 + 0]
s10 = s8 < t4
s11 = t4 < s9
s1 = s10 * s11
if0 s1 goto lbl_OutOfBounds_103
goto lbl_Inbound_104
lbl_OutOfBounds_103:
error ("array index out of bounds")
lbl_Inbound_104:
s2 = s6 * t4
s2 = s2 + s6
s2 = t2 + s2
[s2 + 0] =t5
t2 = 1
s3 = t4 + t2
t4 = s3
goto lbl_While_90
lbl_WhileExit_91:
result = t5
s11 = stack_s11
s1 = stack_s1
s10 = stack_s10
s5 = stack_s5
s6 = stack_s6
s8 = stack_s8
s7 = stack_s7
s9 = stack_s9
s2 = stack_s2
s4 = stack_s4
s3 = stack_s3
s2 = stack_s2
s3 = stack_s3
s1 = stack_s1
return result
func V_calculate()
t4 = 2
t5 = a3 * t4
v108 = t5
return v108
func W_setDepArray()
[a2 + 36] =a3
t4 = 1
v110 = t4
return v110
func W_compute()
stack_s1 = s1
t4 = 56
t5 = 20
s1 = alloc(t4)
t4 = alloc(t5)
t5 = @Y_compute
[t4 + 0] =t5
t5 = @V_getArray
[t4 + 4] =t5
t5 = @Y_setDepArray
[t4 + 16] =t5
t5 = @V_calculate
[t4 + 8] =t5
t5 = @V_setArray
[t4 + 12] =t5
[s1 + 0] =t4
if0 s1 goto lbl_NullPtr_120
goto lbl_GoodPtr_121
lbl_NullPtr_120:
error ("null pointer")
lbl_GoodPtr_121:
[a2 + 32] =s1
t5 = [a2 + 32]
if0 t5 goto lbl_NullPtr_125
t4 = [t5 + 0]
t4 = [t4 + 8]
stack_a2 = a2
a2 = t5
stack_a3 = a3
t3 = call t4()
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_126
lbl_NullPtr_125:
error ("null pointer")
lbl_GoodPtr_126:
t2 = t3
result = t2
s1 = stack_s1
return result
func Z_setDepArray()
[a2 + 44] =a3
t4 = 1
v127 = t4
return v127
func Z_compute()
stack_s5 = s5
stack_s3 = s3
stack_s4 = s4
stack_s2 = s2
stack_s7 = s7
stack_s3 = s3
stack_s11 = s11
stack_s4 = s4
stack_s9 = s9
stack_s9 = s9
stack_s6 = s6
stack_s8 = s8
stack_s2 = s2
stack_s10 = s10
stack_s6 = s6
stack_s4 = s4
stack_s5 = s5
stack_s2 = s2
stack_s3 = s3
stack_s4 = s4
stack_s5 = s5
stack_s3 = s3
stack_s11 = s11
stack_s1 = s1
stack_s1 = s1
stack_s7 = s7
stack_s8 = s8
stack_s1 = s1
stack_s6 = s6
stack_s10 = s10
stack_s7 = s7
stack_s3 = s3
stack_s1 = s1
stack_s2 = s2
stack_s10 = s10
stack_s11 = s11
stack_s9 = s9
stack_s5 = s5
stack_s8 = s8
stack_s7 = s7
stack_s4 = s4
stack_s5 = s5
stack_s5 = s5
stack_s3 = s3
stack_s4 = s4
stack_s1 = s1
stack_s2 = s2
stack_s2 = s2
stack_s11 = s11
stack_s8 = s8
stack_s7 = s7
stack_s6 = s6
stack_s9 = s9
stack_s6 = s6
stack_s8 = s8
stack_s5 = s5
stack_s3 = s3
stack_s4 = s4
stack_s10 = s10
stack_s1 = s1
t4 = 48
t5 = 20
s1 = alloc(t4)
t4 = alloc(t5)
t5 = @Z_compute
[t4 + 0] =t5
t5 = @V_getArray
[t4 + 4] =t5
t5 = @Z_setDepArray
[t4 + 16] =t5
t5 = @V_calculate
[t4 + 8] =t5
t5 = @V_setArray
[t4 + 12] =t5
[s1 + 0] =t4
if0 s1 goto lbl_NullPtr_137
goto lbl_GoodPtr_138
lbl_NullPtr_137:
error ("null pointer")
lbl_GoodPtr_138:
[a2 + 40] =s1
t5 = [a2 + 40]
if0 t5 goto lbl_NullPtr_142
t4 = [t5 + 0]
t4 = [t4 + 8]
stack_a2 = a2
a2 = t5
stack_a3 = a3
s2 = call t4()
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_143
lbl_NullPtr_142:
error ("null pointer")
lbl_GoodPtr_143:
t5 = s2
t4 = 1
s3 = 4
s4 = a3 + t4
s4 = s4 * s3
t4 = alloc(s4)
if0 t4 goto lbl_NullPtr_148
goto lbl_GoodPtr_149
lbl_NullPtr_148:
error ("null pointer")
lbl_GoodPtr_149:
[t4 + 0] =a3
[a2 + 20] =t4
t4 = 1
s5 = 4
s6 = a3 + t4
s6 = s6 * s5
t4 = alloc(s6)
if0 t4 goto lbl_NullPtr_154
goto lbl_GoodPtr_155
lbl_NullPtr_154:
error ("null pointer")
lbl_GoodPtr_155:
[t4 + 0] =a3
[a2 + 44] =t4
t2 = 0
t4 = t2
lbl_While_157:
t2 = [a2 + 20]
s7 = [t2 + 0]
t2 = t4 < s7
if0 t2 goto lbl_WhileExit_158
t2 = [a2 + 20]
s8 = 2
s9 = t5 * s8
s10 = 4
s11 = 5
s1 = s10 - s11
s2 = [t2 + 0]
s3 = s1 < t4
s4 = t4 < s2
s5 = s3 * s4
if0 s5 goto lbl_OutOfBounds_172
goto lbl_Inbound_173
lbl_OutOfBounds_172:
error ("array index out of bounds")
lbl_Inbound_173:
s6 = s10 * t4
s6 = s6 + s10
s6 = t2 + s6
[s6 + 0] =s9
t2 = [a2 + 44]
s7 = [a2 + 20]
s8 = 4
s11 = 5
s1 = s8 - s11
s2 = [s7 + 0]
s3 = s1 < t4
s4 = t4 < s2
s5 = s3 * s4
if0 s5 goto lbl_OutOfBounds_184
goto lbl_Inbound_185
lbl_OutOfBounds_184:
error ("array index out of bounds")
lbl_Inbound_185:
s10 = s8 * t4
s10 = s10 + s8
s10 = s7 + s10
s9 = [s10 + 0]
s6 = 4
s11 = 5
s1 = s6 - s11
s2 = [t2 + 0]
s3 = s1 < t4
s4 = t4 < s2
s5 = s3 * s4
if0 s5 goto lbl_OutOfBounds_195
goto lbl_Inbound_196
lbl_OutOfBounds_195:
error ("array index out of bounds")
lbl_Inbound_196:
s8 = s6 * t4
s8 = s8 + s6
s8 = t2 + s8
[s8 + 0] =s9
t2 = 1
s7 = t4 + t2
t4 = s7
goto lbl_While_157
lbl_WhileExit_158:
t2 = 0
t4 = t2
lbl_While_201:
t2 = [a2 + 20]
s10 = [t2 + 0]
t2 = t4 < s10
if0 t2 goto lbl_WhileExit_202
t2 = 0
s11 = t2
lbl_While_207:
t2 = [a2 + 44]
s1 = [t2 + 0]
t2 = s11 < s1
if0 t2 goto lbl_WhileExit_208
t2 = [a2 + 20]
s2 = 4
s3 = 5
s4 = s2 - s3
s5 = [t2 + 0]
s6 = s4 < t4
s9 = t4 < s5
s8 = s6 * s9
if0 s8 goto lbl_OutOfBounds_222
goto lbl_Inbound_223
lbl_OutOfBounds_222:
error ("array index out of bounds")
lbl_Inbound_223:
s7 = s2 * t4
s7 = s7 + s2
s7 = t2 + s7
t2 = [s7 + 0]
s10 = [a2 + 44]
s1 = 4
s3 = 5
s4 = s1 - s3
s5 = [s10 + 0]
s6 = s4 < s11
s9 = s11 < s5
s8 = s6 * s9
if0 s8 goto lbl_OutOfBounds_234
goto lbl_Inbound_235
lbl_OutOfBounds_234:
error ("array index out of bounds")
lbl_Inbound_235:
s2 = s1 * s11
s2 = s2 + s1
s2 = s10 + s2
s7 = [s2 + 0]
s3 = t2 + s7
t2 = t5 + s3
t5 = t2
t2 = 1
s4 = s11 + t2
s11 = s4
goto lbl_While_207
lbl_WhileExit_208:
t2 = 1
s5 = t4 + t2
t4 = s5
goto lbl_While_201
lbl_WhileExit_202:
result = t5
s5 = stack_s5
s3 = stack_s3
s4 = stack_s4
s2 = stack_s2
s7 = stack_s7
s3 = stack_s3
s11 = stack_s11
s4 = stack_s4
s9 = stack_s9
s9 = stack_s9
s6 = stack_s6
s8 = stack_s8
s2 = stack_s2
s10 = stack_s10
s6 = stack_s6
s4 = stack_s4
s5 = stack_s5
s2 = stack_s2
s3 = stack_s3
s4 = stack_s4
s5 = stack_s5
s3 = stack_s3
s11 = stack_s11
s1 = stack_s1
s1 = stack_s1
s7 = stack_s7
s8 = stack_s8
s1 = stack_s1
s6 = stack_s6
s10 = stack_s10
s7 = stack_s7
s3 = stack_s3
s1 = stack_s1
s2 = stack_s2
s10 = stack_s10
s11 = stack_s11
s9 = stack_s9
s5 = stack_s5
s8 = stack_s8
s7 = stack_s7
s4 = stack_s4
s5 = stack_s5
s5 = stack_s5
s3 = stack_s3
s4 = stack_s4
s1 = stack_s1
s2 = stack_s2
s2 = stack_s2
s11 = stack_s11
s8 = stack_s8
s7 = stack_s7
s6 = stack_s6
s9 = stack_s9
s6 = stack_s6
s8 = stack_s8
s5 = stack_s5
s3 = stack_s3
s4 = stack_s4
s10 = stack_s10
s1 = stack_s1
return result
func Y_setDepArray()
[a2 + 52] =a3
t4 = 1
v242 = t4
return v242
func Y_compute()
stack_s4 = s4
stack_s9 = s9
stack_s6 = s6
stack_s6 = s6
stack_s9 = s9
stack_s6 = s6
stack_s4 = s4
stack_s10 = s10
stack_s5 = s5
stack_s1 = s1
stack_s5 = s5
stack_s3 = s3
stack_s10 = s10
stack_s7 = s7
stack_s3 = s3
stack_s1 = s1
stack_s2 = s2
stack_s8 = s8
stack_s11 = s11
stack_s7 = s7
stack_s9 = s9
stack_s8 = s8
stack_s2 = s2
stack_s5 = s5
stack_s6 = s6
stack_s5 = s5
stack_s3 = s3
stack_s4 = s4
stack_s3 = s3
stack_s4 = s4
stack_s2 = s2
stack_s3 = s3
stack_s1 = s1
stack_s2 = s2
stack_s3 = s3
stack_s11 = s11
stack_s1 = s1
stack_s6 = s6
stack_s1 = s1
stack_s4 = s4
stack_s5 = s5
stack_s10 = s10
stack_s10 = s10
stack_s7 = s7
stack_s9 = s9
stack_s11 = s11
stack_s5 = s5
stack_s8 = s8
stack_s8 = s8
stack_s7 = s7
stack_s4 = s4
stack_s2 = s2
stack_s7 = s7
stack_s4 = s4
stack_s5 = s5
stack_s2 = s2
stack_s3 = s3
stack_s11 = s11
stack_s8 = s8
stack_s1 = s1
t4 = 32
t5 = 16
s1 = alloc(t4)
t4 = alloc(t5)
t5 = @V_compute
[t4 + 0] =t5
t5 = @V_getArray
[t4 + 4] =t5
t5 = @V_calculate
[t4 + 8] =t5
t5 = @V_setArray
[t4 + 12] =t5
[s1 + 0] =t4
if0 s1 goto lbl_NullPtr_251
goto lbl_GoodPtr_252
lbl_NullPtr_251:
error ("null pointer")
lbl_GoodPtr_252:
[a2 + 48] =s1
t5 = [a2 + 48]
if0 t5 goto lbl_NullPtr_256
t4 = [t5 + 0]
t4 = [t4 + 8]
stack_a2 = a2
a2 = t5
stack_a3 = a3
s2 = call t4()
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_257
lbl_NullPtr_256:
error ("null pointer")
lbl_GoodPtr_257:
t5 = s2
t4 = 1
s3 = 4
s4 = a3 + t4
s4 = s4 * s3
t4 = alloc(s4)
if0 t4 goto lbl_NullPtr_262
goto lbl_GoodPtr_263
lbl_NullPtr_262:
error ("null pointer")
lbl_GoodPtr_263:
[t4 + 0] =a3
[a2 + 20] =t4
t4 = 1
s5 = 4
s6 = a3 + t4
s6 = s6 * s5
t4 = alloc(s6)
if0 t4 goto lbl_NullPtr_268
goto lbl_GoodPtr_269
lbl_NullPtr_268:
error ("null pointer")
lbl_GoodPtr_269:
[t4 + 0] =a3
[a2 + 52] =t4
t2 = 0
t4 = t2
lbl_While_271:
t2 = [a2 + 20]
s7 = [t2 + 0]
t2 = t4 < s7
if0 t2 goto lbl_WhileExit_272
t2 = [a2 + 20]
s8 = 3
s9 = t5 * s8
s10 = 4
s11 = 5
s1 = s10 - s11
s2 = [t2 + 0]
s3 = s1 < t4
s4 = t4 < s2
s5 = s3 * s4
if0 s5 goto lbl_OutOfBounds_286
goto lbl_Inbound_287
lbl_OutOfBounds_286:
error ("array index out of bounds")
lbl_Inbound_287:
s6 = s10 * t4
s6 = s6 + s10
s6 = t2 + s6
[s6 + 0] =s9
t2 = [a2 + 52]
s7 = [a2 + 20]
s8 = 4
s11 = 5
s1 = s8 - s11
s2 = [s7 + 0]
s3 = s1 < t4
s4 = t4 < s2
s5 = s3 * s4
if0 s5 goto lbl_OutOfBounds_298
goto lbl_Inbound_299
lbl_OutOfBounds_298:
error ("array index out of bounds")
lbl_Inbound_299:
s10 = s8 * t4
s10 = s10 + s8
s10 = s7 + s10
s9 = [s10 + 0]
s6 = 4
s11 = 5
s1 = s6 - s11
s2 = [t2 + 0]
s3 = s1 < t4
s4 = t4 < s2
s5 = s3 * s4
if0 s5 goto lbl_OutOfBounds_309
goto lbl_Inbound_310
lbl_OutOfBounds_309:
error ("array index out of bounds")
lbl_Inbound_310:
s8 = s6 * t4
s8 = s8 + s6
s8 = t2 + s8
[s8 + 0] =s9
t2 = 1
s7 = t4 + t2
t4 = s7
goto lbl_While_271
lbl_WhileExit_272:
t2 = 0
t4 = t2
lbl_While_315:
t2 = [a2 + 20]
s10 = [t2 + 0]
t2 = t4 < s10
if0 t2 goto lbl_WhileExit_316
t2 = 0
s11 = t2
lbl_While_321:
t2 = [a2 + 52]
s1 = [t2 + 0]
t2 = s11 < s1
if0 t2 goto lbl_WhileExit_322
t2 = [a2 + 20]
s2 = 4
s3 = 5
s4 = s2 - s3
s5 = [t2 + 0]
s6 = s4 < t4
s9 = t4 < s5
s8 = s6 * s9
if0 s8 goto lbl_OutOfBounds_336
goto lbl_Inbound_337
lbl_OutOfBounds_336:
error ("array index out of bounds")
lbl_Inbound_337:
s7 = s2 * t4
s7 = s7 + s2
s7 = t2 + s7
t2 = [s7 + 0]
s10 = [a2 + 52]
s1 = 4
s3 = 5
s4 = s1 - s3
s5 = [s10 + 0]
s6 = s4 < s11
s9 = s11 < s5
s8 = s6 * s9
if0 s8 goto lbl_OutOfBounds_348
goto lbl_Inbound_349
lbl_OutOfBounds_348:
error ("array index out of bounds")
lbl_Inbound_349:
s2 = s1 * s11
s2 = s2 + s1
s2 = s10 + s2
s7 = [s2 + 0]
s3 = t2 - s7
t2 = t5 * s3
t5 = t2
t2 = 1
s4 = s11 + t2
s11 = s4
goto lbl_While_321
lbl_WhileExit_322:
t2 = 1
s5 = t4 + t2
t4 = s5
goto lbl_While_315
lbl_WhileExit_316:
result = t5
s4 = stack_s4
s9 = stack_s9
s6 = stack_s6
s6 = stack_s6
s9 = stack_s9
s6 = stack_s6
s4 = stack_s4
s10 = stack_s10
s5 = stack_s5
s1 = stack_s1
s5 = stack_s5
s3 = stack_s3
s10 = stack_s10
s7 = stack_s7
s3 = stack_s3
s1 = stack_s1
s2 = stack_s2
s8 = stack_s8
s11 = stack_s11
s7 = stack_s7
s9 = stack_s9
s8 = stack_s8
s2 = stack_s2
s5 = stack_s5
s6 = stack_s6
s5 = stack_s5
s3 = stack_s3
s4 = stack_s4
s3 = stack_s3
s4 = stack_s4
s2 = stack_s2
s3 = stack_s3
s1 = stack_s1
s2 = stack_s2
s3 = stack_s3
s11 = stack_s11
s1 = stack_s1
s6 = stack_s6
s1 = stack_s1
s4 = stack_s4
s5 = stack_s5
s10 = stack_s10
s10 = stack_s10
s7 = stack_s7
s9 = stack_s9
s11 = stack_s11
s5 = stack_s5
s8 = stack_s8
s8 = stack_s8
s7 = stack_s7
s4 = stack_s4
s2 = stack_s2
s7 = stack_s7
s4 = stack_s4
s5 = stack_s5
s2 = stack_s2
s3 = stack_s3
s11 = stack_s11
s8 = stack_s8
s1 = stack_s1
return result
func X_setDepArray()
[a2 + 60] =a3
t4 = 1
v356 = t4
return v356
func X_compute()
stack_s5 = s5
stack_s6 = s6
stack_s3 = s3
stack_s4 = s4
stack_s1 = s1
stack_s2 = s2
stack_s11 = s11
stack_s9 = s9
stack_s6 = s6
stack_s10 = s10
stack_s5 = s5
stack_s2 = s2
stack_s3 = s3
stack_s4 = s4
stack_s4 = s4
stack_s2 = s2
stack_s3 = s3
stack_s11 = s11
stack_s1 = s1
stack_s7 = s7
stack_s8 = s8
stack_s6 = s6
stack_s2 = s2
stack_s3 = s3
stack_s1 = s1
stack_s10 = s10
stack_s9 = s9
stack_s7 = s7
stack_s2 = s2
stack_s11 = s11
stack_s3 = s3
stack_s11 = s11
stack_s1 = s1
stack_s8 = s8
stack_s10 = s10
stack_s7 = s7
stack_s8 = s8
stack_s5 = s5
stack_s2 = s2
stack_s7 = s7
stack_s9 = s9
stack_s8 = s8
stack_s5 = s5
stack_s6 = s6
stack_s4 = s4
stack_s1 = s1
stack_s3 = s3
stack_s10 = s10
stack_s7 = s7
stack_s8 = s8
stack_s9 = s9
stack_s5 = s5
stack_s6 = s6
stack_s3 = s3
stack_s4 = s4
stack_s4 = s4
stack_s5 = s5
stack_s1 = s1
stack_s5 = s5
stack_s4 = s4
t4 = 40
t5 = 20
s1 = alloc(t4)
t4 = alloc(t5)
t5 = @W_compute
[t4 + 0] =t5
t5 = @V_getArray
[t4 + 4] =t5
t5 = @W_setDepArray
[t4 + 16] =t5
t5 = @V_calculate
[t4 + 8] =t5
t5 = @V_setArray
[t4 + 12] =t5
[s1 + 0] =t4
if0 s1 goto lbl_NullPtr_366
goto lbl_GoodPtr_367
lbl_NullPtr_366:
error ("null pointer")
lbl_GoodPtr_367:
[a2 + 56] =s1
t5 = [a2 + 56]
if0 t5 goto lbl_NullPtr_371
t4 = [t5 + 0]
t4 = [t4 + 8]
stack_a2 = a2
a2 = t5
stack_a3 = a3
s2 = call t4()
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_372
lbl_NullPtr_371:
error ("null pointer")
lbl_GoodPtr_372:
t5 = s2
t4 = 0
t5 = t4
t4 = 1
s3 = 4
s4 = a3 + t4
s4 = s4 * s3
t4 = alloc(s4)
if0 t4 goto lbl_NullPtr_378
goto lbl_GoodPtr_379
lbl_NullPtr_378:
error ("null pointer")
lbl_GoodPtr_379:
[t4 + 0] =a3
[a2 + 20] =t4
t4 = 1
s5 = 4
s6 = a3 + t4
s6 = s6 * s5
t4 = alloc(s6)
if0 t4 goto lbl_NullPtr_384
goto lbl_GoodPtr_385
lbl_NullPtr_384:
error ("null pointer")
lbl_GoodPtr_385:
[t4 + 0] =a3
[a2 + 60] =t4
t2 = 0
t4 = t2
lbl_While_387:
t2 = [a2 + 20]
s7 = [t2 + 0]
t2 = t4 < s7
if0 t2 goto lbl_WhileExit_388
t2 = [a2 + 20]
s8 = 4
s9 = t5 * s8
s10 = 4
s11 = 5
s1 = s10 - s11
s2 = [t2 + 0]
s3 = s1 < t4
s4 = t4 < s2
s5 = s3 * s4
if0 s5 goto lbl_OutOfBounds_402
goto lbl_Inbound_403
lbl_OutOfBounds_402:
error ("array index out of bounds")
lbl_Inbound_403:
s6 = s10 * t4
s6 = s6 + s10
s6 = t2 + s6
[s6 + 0] =s9
t2 = [a2 + 60]
s7 = [a2 + 20]
s8 = 4
s11 = 5
s1 = s8 - s11
s2 = [s7 + 0]
s3 = s1 < t4
s4 = t4 < s2
s5 = s3 * s4
if0 s5 goto lbl_OutOfBounds_414
goto lbl_Inbound_415
lbl_OutOfBounds_414:
error ("array index out of bounds")
lbl_Inbound_415:
s10 = s8 * t4
s10 = s10 + s8
s10 = s7 + s10
s9 = [s10 + 0]
s6 = 4
s11 = 5
s1 = s6 - s11
s2 = [t2 + 0]
s3 = s1 < t4
s4 = t4 < s2
s5 = s3 * s4
if0 s5 goto lbl_OutOfBounds_425
goto lbl_Inbound_426
lbl_OutOfBounds_425:
error ("array index out of bounds")
lbl_Inbound_426:
s8 = s6 * t4
s8 = s8 + s6
s8 = t2 + s8
[s8 + 0] =s9
t2 = 1
s7 = t4 + t2
t4 = s7
goto lbl_While_387
lbl_WhileExit_388:
t2 = 0
t4 = t2
lbl_While_431:
t2 = [a2 + 20]
s10 = [t2 + 0]
t2 = t4 < s10
if0 t2 goto lbl_WhileExit_432
t2 = 0
s11 = t2
lbl_While_437:
t2 = [a2 + 60]
s1 = [t2 + 0]
t2 = s11 < s1
if0 t2 goto lbl_WhileExit_438
t2 = [a2 + 20]
s2 = 4
s3 = 5
s4 = s2 - s3
s5 = [t2 + 0]
s6 = s4 < t4
s9 = t4 < s5
s8 = s6 * s9
if0 s8 goto lbl_OutOfBounds_452
goto lbl_Inbound_453
lbl_OutOfBounds_452:
error ("array index out of bounds")
lbl_Inbound_453:
s7 = s2 * t4
s7 = s7 + s2
s7 = t2 + s7
t2 = [s7 + 0]
s10 = [a2 + 60]
s1 = 4
s3 = 5
s4 = s1 - s3
s5 = [s10 + 0]
s6 = s4 < s11
s9 = s11 < s5
s8 = s6 * s9
if0 s8 goto lbl_OutOfBounds_464
goto lbl_Inbound_465
lbl_OutOfBounds_464:
error ("array index out of bounds")
lbl_Inbound_465:
s2 = s1 * s11
s2 = s2 + s1
s2 = s10 + s2
s7 = [s2 + 0]
s3 = t2 * s7
t2 = t5 + s3
t5 = t2
t2 = 1
s4 = s11 + t2
s11 = s4
goto lbl_While_437
lbl_WhileExit_438:
t2 = 1
s5 = t4 + t2
t4 = s5
goto lbl_While_431
lbl_WhileExit_432:
result = t5
s5 = stack_s5
s6 = stack_s6
s3 = stack_s3
s4 = stack_s4
s1 = stack_s1
s2 = stack_s2
s11 = stack_s11
s9 = stack_s9
s6 = stack_s6
s10 = stack_s10
s5 = stack_s5
s2 = stack_s2
s3 = stack_s3
s4 = stack_s4
s4 = stack_s4
s2 = stack_s2
s3 = stack_s3
s11 = stack_s11
s1 = stack_s1
s7 = stack_s7
s8 = stack_s8
s6 = stack_s6
s2 = stack_s2
s3 = stack_s3
s1 = stack_s1
s10 = stack_s10
s9 = stack_s9
s7 = stack_s7
s2 = stack_s2
s11 = stack_s11
s3 = stack_s3
s11 = stack_s11
s1 = stack_s1
s8 = stack_s8
s10 = stack_s10
s7 = stack_s7
s8 = stack_s8
s5 = stack_s5
s2 = stack_s2
s7 = stack_s7
s9 = stack_s9
s8 = stack_s8
s5 = stack_s5
s6 = stack_s6
s4 = stack_s4
s1 = stack_s1
s3 = stack_s3
s10 = stack_s10
s7 = stack_s7
s8 = stack_s8
s9 = stack_s9
s5 = stack_s5
s6 = stack_s6
s3 = stack_s3
s4 = stack_s4
s4 = stack_s4
s5 = stack_s5
s1 = stack_s1
s5 = stack_s5
s4 = stack_s4
return result
