func main()
stack_s3 = s3
stack_s4 = s4
stack_s2 = s2
stack_s5 = s5
stack_s11 = s11
stack_s6 = s6
stack_s8 = s8
stack_s9 = s9
stack_s10 = s10
stack_s1 = s1
stack_s7 = s7
t2 = 24
t3 = 4
t4 = alloc(t2)
t5 = alloc(t3)
s1 = @X_compute
[t5 + 0] =s1
[t4 + 0] =t5
if0 t4 goto lbl_NullPtr_5
goto lbl_GoodPtr_6
lbl_NullPtr_5:
error ("null pointer")
lbl_GoodPtr_6:
t1 = t4
x= t1
s3 = 44
s4 = 4
s2 = alloc(s3)
s5 = alloc(s4)
s6 = @Y_compute
[s5 + 0] =s6
[s2 + 0] =s5
if0 s2 goto lbl_NullPtr_12
goto lbl_GoodPtr_13
lbl_NullPtr_12:
error ("null pointer")
lbl_GoodPtr_13:
t1 = s2
y= t1
t0 = x
if0 t0 goto lbl_NullPtr_16
t0 = x
s8 = [t0 + 0]
s8 = [s8 + 0]
s9 = 10
s7 = 20
t0 = 30
v20 = t0
t0 = 40
v21 = t0
t0 = 50
v22 = t0
stack_a2 = a2
stack_a3 = a3
stack_a4 = a4
stack_a5 = a5
stack_a6 = a6
stack_a7 = a7
v18 = s9
v19 = s7
t1 = call s8(x v18 v19 v20 v21 v22)
v15 = t1
a2 = stack_a2
a3 = stack_a3
a4 = stack_a4
a5 = stack_a5
a6 = stack_a6
a7 = stack_a7
goto lbl_GoodPtr_17
lbl_NullPtr_16:
error ("null pointer")
lbl_GoodPtr_17:
t0 = v15
t1 = t0
result= t1
t0 = result
print (t0)
t0 = y
if0 t0 goto lbl_NullPtr_25
t0 = y
s11 = [t0 + 0]
s11 = [s11 + 0]
a2 = 10
s10 = 20
t0 = 30
v29 = t0
t0 = 40
v30 = t0
t0 = 50
v31 = t0
stack_a2 = a2
stack_a3 = a3
stack_a4 = a4
stack_a5 = a5
stack_a6 = a6
stack_a7 = a7
v27 = a2
v28 = s10
t1 = call s11(y v27 v28 v29 v30 v31)
v24 = t1
a2 = stack_a2
a3 = stack_a3
a4 = stack_a4
a5 = stack_a5
a6 = stack_a6
a7 = stack_a7
goto lbl_GoodPtr_26
lbl_NullPtr_25:
error ("null pointer")
lbl_GoodPtr_26:
t0 = v24
t1 = t0
result= t1
t0 = result
print (t0)
a3 = 0
v32 = a3
s3 = stack_s3
s4 = stack_s4
s2 = stack_s2
s5 = stack_s5
s11 = stack_s11
s6 = stack_s6
s8 = stack_s8
s9 = stack_s9
s10 = stack_s10
s1 = stack_s1
s7 = stack_s7
return v32
func X_compute(this a b c d e)
t4 = this
stack_s5 = s5
stack_s6 = s6
stack_s7 = s7
stack_s8 = s8
stack_s2 = s2
stack_s9 = s9
stack_s10 = s10
stack_s1 = s1
stack_s4 = s4
stack_s11 = s11
stack_s3 = s3
t5 = 0
t1 = t5
result= t1
t0 = a
t1 = b
s1 = t0 + t1
t0 = c
t1 = d
t2 = t0 + t1
t3 = s1 + t2
t1 = e
s2 = t3 + t1
t1 = s2
result= t1
t0 = result
t1 = t0
a= t1
s3 = 1
t0 = result
s4 = t0 + s3
t1 = s4
b= t1
s5 = 2
t0 = result
s6 = t0 + s5
t1 = s6
c= t1
s7 = 3
t0 = result
s8 = t0 + s7
t1 = s8
d= t1
s9 = 4
t0 = result
s10 = t0 + s9
t1 = s10
e= t1
t0 = a
t1 = b
s11 = t0 + t1
t0 = c
t1 = d
a2 = t0 + t1
a3 = s11 + a2
t1 = e
a4 = a3 + t1
v46 = a4
s5 = stack_s5
s6 = stack_s6
s7 = stack_s7
s8 = stack_s8
s2 = stack_s2
s9 = stack_s9
s10 = stack_s10
s1 = stack_s1
s4 = stack_s4
s11 = stack_s11
s3 = stack_s3
return v46
func Y_compute(this a b c d e)
t4 = this
stack_s10 = s10
stack_s7 = s7
stack_s2 = s2
stack_s9 = s9
stack_s11 = s11
stack_s1 = s1
stack_s3 = s3
stack_s4 = s4
stack_s5 = s5
stack_s6 = s6
stack_s8 = s8
t5 = 1
t1 = t5
result= t1
t0 = a
t1 = b
s1 = t0 * t1
t0 = c
t1 = d
t2 = t0 * t1
t3 = s1 * t2
t1 = e
s2 = t3 * t1
t1 = s2
result= t1
t0 = result
t1 = t0
a= t1
s3 = 1
t0 = result
s4 = t0 + s3
t1 = s4
b= t1
s5 = 2
t0 = result
s6 = t0 + s5
t1 = s6
c= t1
s7 = 3
t0 = result
s8 = t0 + s7
t1 = s8
d= t1
s9 = 4
t0 = result
s10 = t0 + s9
t1 = s10
e= t1
t0 = a
t1 = b
s11 = t0 + t1
t0 = c
t1 = d
a2 = t0 + t1
a3 = s11 + a2
t1 = e
a4 = a3 + t1
v63 = a4
s10 = stack_s10
s7 = stack_s7
s2 = stack_s2
s9 = stack_s9
s11 = stack_s11
s1 = stack_s1
s3 = stack_s3
s4 = stack_s4
s5 = stack_s5
s6 = stack_s6
s8 = stack_s8
return v63
