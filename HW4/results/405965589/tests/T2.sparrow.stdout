func main()
t2 = 128
t3 = 12
t4 = alloc(t2)
t5 = alloc(t3)
t2 = @F_getArray
[t5 + 4] =t2
t3 = @A_processData
[t5 + 0] =t3
t2 = @F_setArray
[t5 + 8] =t2
[t4 + 0] =t5
if0 t4 goto lbl_NullPtr_7
goto lbl_GoodPtr_8
lbl_NullPtr_7:
error ("null pointer")
lbl_GoodPtr_8:
t3 = t4
t2 = 108
t5 = 12
t4 = alloc(t2)
t2 = alloc(t5)
t5 = @F_getArray
[t2 + 4] =t5
t5 = @B_processData
[t2 + 0] =t5
t5 = @F_setArray
[t2 + 8] =t5
[t4 + 0] =t2
if0 t4 goto lbl_NullPtr_16
goto lbl_GoodPtr_17
lbl_NullPtr_16:
error ("null pointer")
lbl_GoodPtr_17:
t5 = t4
t2 = 88
t4 = 12
s1 = alloc(t2)
t2 = alloc(t4)
t4 = @F_getArray
[t2 + 4] =t4
t4 = @C_processData
[t2 + 0] =t4
t4 = @F_setArray
[t2 + 8] =t4
[s1 + 0] =t2
if0 s1 goto lbl_NullPtr_25
goto lbl_GoodPtr_26
lbl_NullPtr_25:
error ("null pointer")
lbl_GoodPtr_26:
t4 = s1
t2 = 68
s2 = 12
s3 = alloc(t2)
t2 = alloc(s2)
s4 = @F_getArray
[t2 + 4] =s4
s5 = @D_processData
[t2 + 0] =s5
s6 = @F_setArray
[t2 + 8] =s6
[s3 + 0] =t2
if0 s3 goto lbl_NullPtr_34
goto lbl_GoodPtr_35
lbl_NullPtr_34:
error ("null pointer")
lbl_GoodPtr_35:
t2 = s3
s7 = 48
s8 = 12
s9 = alloc(s7)
s10 = alloc(s8)
s11 = @F_getArray
[s10 + 4] =s11
s1 = @E_processData
[s10 + 0] =s1
s2 = @F_setArray
[s10 + 8] =s2
[s9 + 0] =s10
if0 s9 goto lbl_NullPtr_43
goto lbl_GoodPtr_44
lbl_NullPtr_43:
error ("null pointer")
lbl_GoodPtr_44:
s4 = s9
s5 = 28
s6 = 12
s3 = alloc(s5)
s7 = alloc(s6)
s8 = @F_processData
[s7 + 0] =s8
s11 = @F_getArray
[s7 + 4] =s11
s1 = @F_setArray
[s7 + 8] =s1
[s3 + 0] =s7
if0 s3 goto lbl_NullPtr_52
goto lbl_GoodPtr_53
lbl_NullPtr_52:
error ("null pointer")
lbl_GoodPtr_53:
s2 = s3
if0 t3 goto lbl_NullPtr_56
s10 = [t3 + 0]
s10 = [s10 + 0]
stack_t5 = t5
stack_t4 = t4
stack_t2 = t2
a2 = t3
s9 = call s10()
t5 = stack_t5
t4 = stack_t4
t2 = stack_t2
goto lbl_GoodPtr_57
lbl_NullPtr_56:
error ("null pointer")
lbl_GoodPtr_57:
t3 = s9
print (t3)
if0 t5 goto lbl_NullPtr_60
s5 = [t5 + 0]
s5 = [s5 + 0]
stack_t3 = t3
stack_t4 = t4
stack_t2 = t2
a2 = t5
s6 = call s5()
t3 = stack_t3
t4 = stack_t4
t2 = stack_t2
goto lbl_GoodPtr_61
lbl_NullPtr_60:
error ("null pointer")
lbl_GoodPtr_61:
t3 = s6
print (t3)
if0 t4 goto lbl_NullPtr_64
t5 = [t4 + 0]
t5 = [t5 + 0]
stack_t3 = t3
stack_t2 = t2
a2 = t4
s8 = call t5()
t3 = stack_t3
t2 = stack_t2
goto lbl_GoodPtr_65
lbl_NullPtr_64:
error ("null pointer")
lbl_GoodPtr_65:
t3 = s8
print (t3)
if0 t2 goto lbl_NullPtr_68
t4 = [t2 + 0]
t4 = [t4 + 0]
stack_t3 = t3
a2 = t2
t5 = call t4()
t3 = stack_t3
goto lbl_GoodPtr_69
lbl_NullPtr_68:
error ("null pointer")
lbl_GoodPtr_69:
t3 = t5
print (t3)
if0 s4 goto lbl_NullPtr_72
t2 = [s4 + 0]
t2 = [t2 + 0]
stack_t3 = t3
a2 = s4
t4 = call t2()
t3 = stack_t3
goto lbl_GoodPtr_73
lbl_NullPtr_72:
error ("null pointer")
lbl_GoodPtr_73:
t3 = t4
print (t3)
if0 s2 goto lbl_NullPtr_76
t5 = [s2 + 0]
t5 = [t5 + 0]
stack_t3 = t3
a2 = s2
t2 = call t5()
t3 = stack_t3
goto lbl_GoodPtr_77
lbl_NullPtr_76:
error ("null pointer")
lbl_GoodPtr_77:
t3 = t2
print (t3)
t4 = 0
v78 = t4
s11 = stack_s11
s1 = stack_s1
s10 = stack_s10
s9 = stack_s9
s5 = stack_s5
s6 = stack_s6
s8 = stack_s8
s1 = stack_s1
s3 = stack_s3
s2 = stack_s2
s5 = stack_s5
s4 = stack_s4
s6 = stack_s6
s7 = stack_s7
s9 = stack_s9
s8 = stack_s8
s10 = stack_s10
s4 = stack_s4
s2 = stack_s2
s1 = stack_s1
s11 = stack_s11
s2 = stack_s2
s5 = stack_s5
s3 = stack_s3
s6 = stack_s6
s8 = stack_s8
s7 = stack_s7
return v78
func F_getArray()
t3 = [a2 + 16]
v79 = t3
return v79
func F_setArray()
[a2 + 16] =a3
t4 = 1
v80 = t4
return v80
func F_processData()
stack_s11 = s11
stack_s1 = s1
stack_s9 = s9
stack_s1 = s1
stack_s10 = s10
stack_s6 = s6
stack_s10 = s10
stack_s8 = s8
stack_s11 = s11
stack_s9 = s9
stack_s3 = s3
stack_s5 = s5
stack_s6 = s6
stack_s7 = s7
stack_s4 = s4
stack_s8 = s8
stack_s2 = s2
stack_s7 = s7
stack_s4 = s4
stack_s2 = s2
stack_s1 = s1
stack_s2 = s2
stack_s3 = s3
stack_s3 = s3
stack_s5 = s5
t3 = 0
t4 = t3
t5 = 10
t3 = 1
s1 = 4
s2 = t5 + t3
s2 = s2 * s1
t3 = alloc(s2)
if0 t3 goto lbl_NullPtr_87
goto lbl_GoodPtr_88
lbl_NullPtr_87:
error ("null pointer")
lbl_GoodPtr_88:
[t3 + 0] =t5
[a2 + 16] =t3
t5 = 0
t3 = t5
lbl_While_90:
t5 = [a2 + 16]
s3 = [t5 + 0]
t5 = t3 < s3
if0 t5 goto lbl_WhileExit_91
t5 = [a2 + 16]
s4 = 2
s5 = t3 * s4
s6 = 4
s7 = 5
s8 = s6 - s7
s9 = [t5 + 0]
s10 = s8 < t3
s11 = t3 < s9
s1 = s10 * s11
if0 s1 goto lbl_OutOfBounds_105
goto lbl_Inbound_106
lbl_OutOfBounds_105:
error ("array index out of bounds")
lbl_Inbound_106:
s2 = s6 * t3
s2 = s2 + s6
s2 = t5 + s2
[s2 + 0] =s5
t5 = 1
s3 = t3 + t5
t3 = s3
goto lbl_While_90
lbl_WhileExit_91:
t5 = 0
t3 = t5
lbl_While_111:
t5 = [a2 + 16]
s4 = [t5 + 0]
t5 = t3 < s4
if0 t5 goto lbl_WhileExit_112
t5 = [a2 + 16]
s7 = 4
s8 = 5
s9 = s7 - s8
s10 = [t5 + 0]
s11 = s9 < t3
s1 = t3 < s10
s6 = s11 * s1
if0 s6 goto lbl_OutOfBounds_125
goto lbl_Inbound_126
lbl_OutOfBounds_125:
error ("array index out of bounds")
lbl_Inbound_126:
s5 = s7 * t3
s5 = s5 + s7
s5 = t5 + s5
t5 = [s5 + 0]
s2 = t4 + t5
t4 = s2
t5 = 1
s3 = t3 + t5
t3 = s3
goto lbl_While_111
lbl_WhileExit_112:
result = t4
s11 = stack_s11
s1 = stack_s1
s9 = stack_s9
s1 = stack_s1
s10 = stack_s10
s6 = stack_s6
s10 = stack_s10
s8 = stack_s8
s11 = stack_s11
s9 = stack_s9
s3 = stack_s3
s5 = stack_s5
s6 = stack_s6
s7 = stack_s7
s4 = stack_s4
s8 = stack_s8
s2 = stack_s2
s7 = stack_s7
s4 = stack_s4
s2 = stack_s2
s1 = stack_s1
s2 = stack_s2
s3 = stack_s3
s3 = stack_s3
s5 = stack_s5
return result
func E_processData()
stack_s4 = s4
stack_s8 = s8
stack_s6 = s6
stack_s5 = s5
stack_s7 = s7
stack_s4 = s4
stack_s3 = s3
stack_s2 = s2
stack_s8 = s8
stack_s11 = s11
stack_s9 = s9
stack_s1 = s1
stack_s9 = s9
stack_s10 = s10
stack_s3 = s3
stack_s1 = s1
stack_s2 = s2
stack_s2 = s2
stack_s3 = s3
stack_s1 = s1
stack_s5 = s5
stack_s10 = s10
stack_s6 = s6
stack_s11 = s11
stack_s7 = s7
t3 = 1
t4 = t3
t5 = 10
t3 = 1
s1 = 4
s2 = t5 + t3
s2 = s2 * s1
t3 = alloc(s2)
if0 t3 goto lbl_NullPtr_137
goto lbl_GoodPtr_138
lbl_NullPtr_137:
error ("null pointer")
lbl_GoodPtr_138:
[t3 + 0] =t5
[a2 + 16] =t3
t5 = 0
t3 = t5
lbl_While_140:
t5 = [a2 + 16]
s3 = [t5 + 0]
t5 = t3 < s3
if0 t5 goto lbl_WhileExit_141
t5 = [a2 + 16]
s4 = 3
s5 = t3 * s4
s6 = 4
s7 = 5
s8 = s6 - s7
s9 = [t5 + 0]
s10 = s8 < t3
s11 = t3 < s9
s1 = s10 * s11
if0 s1 goto lbl_OutOfBounds_155
goto lbl_Inbound_156
lbl_OutOfBounds_155:
error ("array index out of bounds")
lbl_Inbound_156:
s2 = s6 * t3
s2 = s2 + s6
s2 = t5 + s2
[s2 + 0] =s5
t5 = 1
s3 = t3 + t5
t3 = s3
goto lbl_While_140
lbl_WhileExit_141:
t5 = 0
t3 = t5
lbl_While_161:
t5 = [a2 + 16]
s4 = [t5 + 0]
t5 = t3 < s4
if0 t5 goto lbl_WhileExit_162
t5 = [a2 + 16]
s7 = 4
s8 = 5
s9 = s7 - s8
s10 = [t5 + 0]
s11 = s9 < t3
s1 = t3 < s10
s6 = s11 * s1
if0 s6 goto lbl_OutOfBounds_175
goto lbl_Inbound_176
lbl_OutOfBounds_175:
error ("array index out of bounds")
lbl_Inbound_176:
s5 = s7 * t3
s5 = s5 + s7
s5 = t5 + s5
t5 = [s5 + 0]
s2 = t4 * t5
t4 = s2
t5 = 1
s3 = t3 + t5
t3 = s3
goto lbl_While_161
lbl_WhileExit_162:
result = t4
s4 = stack_s4
s8 = stack_s8
s6 = stack_s6
s5 = stack_s5
s7 = stack_s7
s4 = stack_s4
s3 = stack_s3
s2 = stack_s2
s8 = stack_s8
s11 = stack_s11
s9 = stack_s9
s1 = stack_s1
s9 = stack_s9
s10 = stack_s10
s3 = stack_s3
s1 = stack_s1
s2 = stack_s2
s2 = stack_s2
s3 = stack_s3
s1 = stack_s1
s5 = stack_s5
s10 = stack_s10
s6 = stack_s6
s11 = stack_s11
s7 = stack_s7
return result
func D_processData()
stack_s1 = s1
stack_s9 = s9
stack_s10 = s10
stack_s8 = s8
stack_s2 = s2
stack_s4 = s4
stack_s1 = s1
stack_s3 = s3
stack_s2 = s2
stack_s1 = s1
stack_s11 = s11
stack_s10 = s10
stack_s9 = s9
stack_s11 = s11
stack_s3 = s3
stack_s8 = s8
stack_s9 = s9
stack_s5 = s5
stack_s2 = s2
stack_s1 = s1
stack_s6 = s6
stack_s11 = s11
stack_s8 = s8
stack_s10 = s10
stack_s3 = s3
stack_s4 = s4
stack_s7 = s7
stack_s3 = s3
stack_s6 = s6
stack_s2 = s2
stack_s7 = s7
stack_s5 = s5
stack_s4 = s4
stack_s5 = s5
stack_s1 = s1
stack_s6 = s6
stack_s10 = s10
stack_s11 = s11
t3 = 0
t4 = t3
t5 = 10
t3 = 1
s1 = 4
s2 = t5 + t3
s2 = s2 * s1
t3 = alloc(s2)
if0 t3 goto lbl_NullPtr_187
goto lbl_GoodPtr_188
lbl_NullPtr_187:
error ("null pointer")
lbl_GoodPtr_188:
[t3 + 0] =t5
[a2 + 16] =t3
t5 = 0
t3 = t5
lbl_While_190:
t5 = [a2 + 16]
s3 = [t5 + 0]
t5 = t3 < s3
if0 t5 goto lbl_WhileExit_191
t5 = [a2 + 16]
s4 = 4
s5 = t3 * s4
s6 = 4
s7 = 5
s8 = s6 - s7
s9 = [t5 + 0]
s10 = s8 < t3
s11 = t3 < s9
s1 = s10 * s11
if0 s1 goto lbl_OutOfBounds_205
goto lbl_Inbound_206
lbl_OutOfBounds_205:
error ("array index out of bounds")
lbl_Inbound_206:
s2 = s6 * t3
s2 = s2 + s6
s2 = t5 + s2
[s2 + 0] =s5
t5 = 1
s3 = t3 + t5
t3 = s3
goto lbl_While_190
lbl_WhileExit_191:
t5 = 0
t3 = t5
lbl_While_211:
t5 = [a2 + 16]
s4 = [t5 + 0]
t5 = t3 < s4
if0 t5 goto lbl_WhileExit_212
t5 = 0
s7 = t5
lbl_While_217:
t5 = [a2 + 16]
s8 = [t5 + 0]
t5 = s7 < s8
if0 t5 goto lbl_WhileExit_218
t5 = [a2 + 16]
s9 = 4
s10 = 5
s11 = s9 - s10
s1 = [t5 + 0]
s6 = s11 < t3
s5 = t3 < s1
s2 = s6 * s5
if0 s2 goto lbl_OutOfBounds_232
goto lbl_Inbound_233
lbl_OutOfBounds_232:
error ("array index out of bounds")
lbl_Inbound_233:
s3 = s9 * t3
s3 = s3 + s9
s3 = t5 + s3
t5 = [s3 + 0]
s4 = [a2 + 16]
s8 = 4
s10 = 5
s11 = s8 - s10
s1 = [s4 + 0]
s6 = s11 < s7
s5 = s7 < s1
s2 = s6 * s5
if0 s2 goto lbl_OutOfBounds_244
goto lbl_Inbound_245
lbl_OutOfBounds_244:
error ("array index out of bounds")
lbl_Inbound_245:
s9 = s8 * s7
s9 = s9 + s8
s9 = s4 + s9
s3 = [s9 + 0]
s10 = t5 + s3
t5 = t4 + s10
t4 = t5
t5 = 1
s11 = s7 + t5
s7 = s11
goto lbl_While_217
lbl_WhileExit_218:
t5 = 1
s1 = t3 + t5
t3 = s1
goto lbl_While_211
lbl_WhileExit_212:
result = t4
s1 = stack_s1
s9 = stack_s9
s10 = stack_s10
s8 = stack_s8
s2 = stack_s2
s4 = stack_s4
s1 = stack_s1
s3 = stack_s3
s2 = stack_s2
s1 = stack_s1
s11 = stack_s11
s10 = stack_s10
s9 = stack_s9
s11 = stack_s11
s3 = stack_s3
s8 = stack_s8
s9 = stack_s9
s5 = stack_s5
s2 = stack_s2
s1 = stack_s1
s6 = stack_s6
s11 = stack_s11
s8 = stack_s8
s10 = stack_s10
s3 = stack_s3
s4 = stack_s4
s7 = stack_s7
s3 = stack_s3
s6 = stack_s6
s2 = stack_s2
s7 = stack_s7
s5 = stack_s5
s4 = stack_s4
s5 = stack_s5
s1 = stack_s1
s6 = stack_s6
s10 = stack_s10
s11 = stack_s11
return result
func C_processData()
stack_s4 = s4
stack_s5 = s5
stack_s6 = s6
stack_s2 = s2
stack_s5 = s5
stack_s6 = s6
stack_s3 = s3
stack_s10 = s10
stack_s8 = s8
stack_s1 = s1
stack_s1 = s1
stack_s2 = s2
stack_s10 = s10
stack_s11 = s11
stack_s9 = s9
stack_s1 = s1
stack_s4 = s4
stack_s3 = s3
stack_s11 = s11
stack_s9 = s9
stack_s2 = s2
stack_s8 = s8
stack_s9 = s9
stack_s7 = s7
stack_s3 = s3
stack_s6 = s6
stack_s5 = s5
stack_s7 = s7
stack_s11 = s11
stack_s2 = s2
stack_s1 = s1
stack_s1 = s1
stack_s10 = s10
stack_s11 = s11
stack_s10 = s10
stack_s4 = s4
stack_s8 = s8
stack_s3 = s3
t3 = 1
t4 = t3
t5 = 10
t3 = 1
s1 = 4
s2 = t5 + t3
s2 = s2 * s1
t3 = alloc(s2)
if0 t3 goto lbl_NullPtr_258
goto lbl_GoodPtr_259
lbl_NullPtr_258:
error ("null pointer")
lbl_GoodPtr_259:
[t3 + 0] =t5
[a2 + 16] =t3
t5 = 0
t3 = t5
lbl_While_261:
t5 = [a2 + 16]
s3 = [t5 + 0]
t5 = t3 < s3
if0 t5 goto lbl_WhileExit_262
t5 = [a2 + 16]
s4 = 5
s5 = t3 * s4
s6 = 4
s7 = 5
s8 = s6 - s7
s9 = [t5 + 0]
s10 = s8 < t3
s11 = t3 < s9
s1 = s10 * s11
if0 s1 goto lbl_OutOfBounds_276
goto lbl_Inbound_277
lbl_OutOfBounds_276:
error ("array index out of bounds")
lbl_Inbound_277:
s2 = s6 * t3
s2 = s2 + s6
s2 = t5 + s2
[s2 + 0] =s5
t5 = 1
s3 = t3 + t5
t3 = s3
goto lbl_While_261
lbl_WhileExit_262:
t5 = 0
t3 = t5
lbl_While_282:
t5 = [a2 + 16]
s4 = [t5 + 0]
t5 = t3 < s4
if0 t5 goto lbl_WhileExit_283
t5 = 0
s7 = t5
lbl_While_288:
t5 = [a2 + 16]
s8 = [t5 + 0]
t5 = s7 < s8
if0 t5 goto lbl_WhileExit_289
t5 = [a2 + 16]
s9 = 4
s10 = 5
s11 = s9 - s10
s1 = [t5 + 0]
s6 = s11 < t3
s5 = t3 < s1
s2 = s6 * s5
if0 s2 goto lbl_OutOfBounds_303
goto lbl_Inbound_304
lbl_OutOfBounds_303:
error ("array index out of bounds")
lbl_Inbound_304:
s3 = s9 * t3
s3 = s3 + s9
s3 = t5 + s3
t5 = [s3 + 0]
s4 = [a2 + 16]
s8 = 4
s10 = 5
s11 = s8 - s10
s1 = [s4 + 0]
s6 = s11 < s7
s5 = s7 < s1
s2 = s6 * s5
if0 s2 goto lbl_OutOfBounds_315
goto lbl_Inbound_316
lbl_OutOfBounds_315:
error ("array index out of bounds")
lbl_Inbound_316:
s9 = s8 * s7
s9 = s9 + s8
s9 = s4 + s9
s3 = [s9 + 0]
s10 = t5 - s3
t5 = t4 * s10
t4 = t5
t5 = 1
s11 = s7 + t5
s7 = s11
goto lbl_While_288
lbl_WhileExit_289:
t5 = 1
s1 = t3 + t5
t3 = s1
goto lbl_While_282
lbl_WhileExit_283:
result = t4
s4 = stack_s4
s5 = stack_s5
s6 = stack_s6
s2 = stack_s2
s5 = stack_s5
s6 = stack_s6
s3 = stack_s3
s10 = stack_s10
s8 = stack_s8
s1 = stack_s1
s1 = stack_s1
s2 = stack_s2
s10 = stack_s10
s11 = stack_s11
s9 = stack_s9
s1 = stack_s1
s4 = stack_s4
s3 = stack_s3
s11 = stack_s11
s9 = stack_s9
s2 = stack_s2
s8 = stack_s8
s9 = stack_s9
s7 = stack_s7
s3 = stack_s3
s6 = stack_s6
s5 = stack_s5
s7 = stack_s7
s11 = stack_s11
s2 = stack_s2
s1 = stack_s1
s1 = stack_s1
s10 = stack_s10
s11 = stack_s11
s10 = stack_s10
s4 = stack_s4
s8 = stack_s8
s3 = stack_s3
return result
func B_processData()
stack_s11 = s11
stack_s1 = s1
stack_s10 = s10
stack_s11 = s11
stack_s3 = s3
stack_s1 = s1
stack_s9 = s9
stack_s10 = s10
stack_s9 = s9
stack_s7 = s7
stack_s2 = s2
stack_s8 = s8
stack_s6 = s6
stack_s6 = s6
stack_s5 = s5
stack_s5 = s5
stack_s4 = s4
stack_s3 = s3
stack_s1 = s1
stack_s6 = s6
stack_s4 = s4
stack_s8 = s8
stack_s3 = s3
stack_s5 = s5
stack_s2 = s2
stack_s2 = s2
stack_s11 = s11
stack_s1 = s1
stack_s9 = s9
stack_s10 = s10
stack_s10 = s10
stack_s8 = s8
stack_s1 = s1
stack_s11 = s11
stack_s4 = s4
stack_s7 = s7
stack_s3 = s3
stack_s2 = s2
t3 = 0
t4 = t3
t5 = 10
t3 = 1
s1 = 4
s2 = t5 + t3
s2 = s2 * s1
t3 = alloc(s2)
if0 t3 goto lbl_NullPtr_329
goto lbl_GoodPtr_330
lbl_NullPtr_329:
error ("null pointer")
lbl_GoodPtr_330:
[t3 + 0] =t5
[a2 + 16] =t3
t5 = 0
t3 = t5
lbl_While_332:
t5 = [a2 + 16]
s3 = [t5 + 0]
t5 = t3 < s3
if0 t5 goto lbl_WhileExit_333
t5 = [a2 + 16]
s4 = 6
s5 = t3 * s4
s6 = 4
s7 = 5
s8 = s6 - s7
s9 = [t5 + 0]
s10 = s8 < t3
s11 = t3 < s9
s1 = s10 * s11
if0 s1 goto lbl_OutOfBounds_347
goto lbl_Inbound_348
lbl_OutOfBounds_347:
error ("array index out of bounds")
lbl_Inbound_348:
s2 = s6 * t3
s2 = s2 + s6
s2 = t5 + s2
[s2 + 0] =s5
t5 = 1
s3 = t3 + t5
t3 = s3
goto lbl_While_332
lbl_WhileExit_333:
t5 = 0
t3 = t5
lbl_While_353:
t5 = [a2 + 16]
s4 = [t5 + 0]
t5 = t3 < s4
if0 t5 goto lbl_WhileExit_354
t5 = 0
s7 = t5
lbl_While_359:
t5 = [a2 + 16]
s8 = [t5 + 0]
t5 = s7 < s8
if0 t5 goto lbl_WhileExit_360
t5 = [a2 + 16]
s9 = 4
s10 = 5
s11 = s9 - s10
s1 = [t5 + 0]
s6 = s11 < t3
s5 = t3 < s1
s2 = s6 * s5
if0 s2 goto lbl_OutOfBounds_374
goto lbl_Inbound_375
lbl_OutOfBounds_374:
error ("array index out of bounds")
lbl_Inbound_375:
s3 = s9 * t3
s3 = s3 + s9
s3 = t5 + s3
t5 = [s3 + 0]
s4 = [a2 + 16]
s8 = 4
s10 = 5
s11 = s8 - s10
s1 = [s4 + 0]
s6 = s11 < s7
s5 = s7 < s1
s2 = s6 * s5
if0 s2 goto lbl_OutOfBounds_386
goto lbl_Inbound_387
lbl_OutOfBounds_386:
error ("array index out of bounds")
lbl_Inbound_387:
s9 = s8 * s7
s9 = s9 + s8
s9 = s4 + s9
s3 = [s9 + 0]
s10 = t5 * s3
t5 = t4 + s10
t4 = t5
t5 = 1
s11 = s7 + t5
s7 = s11
goto lbl_While_359
lbl_WhileExit_360:
t5 = 1
s1 = t3 + t5
t3 = s1
goto lbl_While_353
lbl_WhileExit_354:
result = t4
s11 = stack_s11
s1 = stack_s1
s10 = stack_s10
s11 = stack_s11
s3 = stack_s3
s1 = stack_s1
s9 = stack_s9
s10 = stack_s10
s9 = stack_s9
s7 = stack_s7
s2 = stack_s2
s8 = stack_s8
s6 = stack_s6
s6 = stack_s6
s5 = stack_s5
s5 = stack_s5
s4 = stack_s4
s3 = stack_s3
s1 = stack_s1
s6 = stack_s6
s4 = stack_s4
s8 = stack_s8
s3 = stack_s3
s5 = stack_s5
s2 = stack_s2
s2 = stack_s2
s11 = stack_s11
s1 = stack_s1
s9 = stack_s9
s10 = stack_s10
s10 = stack_s10
s8 = stack_s8
s1 = stack_s1
s11 = stack_s11
s4 = stack_s4
s7 = stack_s7
s3 = stack_s3
s2 = stack_s2
return result
func A_processData()
stack_s2 = s2
stack_s3 = s3
stack_s1 = s1
stack_s3 = s3
stack_s11 = s11
stack_s1 = s1
stack_s10 = s10
stack_s9 = s9
stack_s11 = s11
stack_s8 = s8
stack_s9 = s9
stack_s6 = s6
stack_s5 = s5
stack_s7 = s7
stack_s2 = s2
stack_s1 = s1
stack_s4 = s4
stack_s6 = s6
stack_s10 = s10
stack_s11 = s11
stack_s8 = s8
stack_s5 = s5
stack_s3 = s3
stack_s4 = s4
stack_s3 = s3
stack_s2 = s2
stack_s6 = s6
stack_s5 = s5
stack_s11 = s11
stack_s1 = s1
stack_s10 = s10
stack_s9 = s9
stack_s10 = s10
stack_s8 = s8
stack_s2 = s2
stack_s7 = s7
stack_s1 = s1
stack_s4 = s4
t3 = 1
t4 = t3
t5 = 10
t3 = 1
s1 = 4
s2 = t5 + t3
s2 = s2 * s1
t3 = alloc(s2)
if0 t3 goto lbl_NullPtr_400
goto lbl_GoodPtr_401
lbl_NullPtr_400:
error ("null pointer")
lbl_GoodPtr_401:
[t3 + 0] =t5
[a2 + 16] =t3
t5 = 0
t3 = t5
lbl_While_403:
t5 = [a2 + 16]
s3 = [t5 + 0]
t5 = t3 < s3
if0 t5 goto lbl_WhileExit_404
t5 = [a2 + 16]
s4 = 7
s5 = t3 * s4
s6 = 4
s7 = 5
s8 = s6 - s7
s9 = [t5 + 0]
s10 = s8 < t3
s11 = t3 < s9
s1 = s10 * s11
if0 s1 goto lbl_OutOfBounds_418
goto lbl_Inbound_419
lbl_OutOfBounds_418:
error ("array index out of bounds")
lbl_Inbound_419:
s2 = s6 * t3
s2 = s2 + s6
s2 = t5 + s2
[s2 + 0] =s5
t5 = 1
s3 = t3 + t5
t3 = s3
goto lbl_While_403
lbl_WhileExit_404:
t5 = 0
t3 = t5
lbl_While_424:
t5 = [a2 + 16]
s4 = [t5 + 0]
t5 = t3 < s4
if0 t5 goto lbl_WhileExit_425
t5 = 0
s7 = t5
lbl_While_430:
t5 = [a2 + 16]
s8 = [t5 + 0]
t5 = s7 < s8
if0 t5 goto lbl_WhileExit_431
t5 = [a2 + 16]
s9 = 4
s10 = 5
s11 = s9 - s10
s1 = [t5 + 0]
s6 = s11 < t3
s5 = t3 < s1
s2 = s6 * s5
if0 s2 goto lbl_OutOfBounds_445
goto lbl_Inbound_446
lbl_OutOfBounds_445:
error ("array index out of bounds")
lbl_Inbound_446:
s3 = s9 * t3
s3 = s3 + s9
s3 = t5 + s3
t5 = [s3 + 0]
s4 = [a2 + 16]
s8 = 4
s10 = 5
s11 = s8 - s10
s1 = [s4 + 0]
s6 = s11 < s7
s5 = s7 < s1
s2 = s6 * s5
if0 s2 goto lbl_OutOfBounds_457
goto lbl_Inbound_458
lbl_OutOfBounds_457:
error ("array index out of bounds")
lbl_Inbound_458:
s9 = s8 * s7
s9 = s9 + s8
s9 = s4 + s9
s3 = [s9 + 0]
s10 = t5 + s3
t5 = t4 * s10
t4 = t5
t5 = 1
s11 = s7 + t5
s7 = s11
goto lbl_While_430
lbl_WhileExit_431:
t5 = 1
s1 = t3 + t5
t3 = s1
goto lbl_While_424
lbl_WhileExit_425:
result = t4
s2 = stack_s2
s3 = stack_s3
s1 = stack_s1
s3 = stack_s3
s11 = stack_s11
s1 = stack_s1
s10 = stack_s10
s9 = stack_s9
s11 = stack_s11
s8 = stack_s8
s9 = stack_s9
s6 = stack_s6
s5 = stack_s5
s7 = stack_s7
s2 = stack_s2
s1 = stack_s1
s4 = stack_s4
s6 = stack_s6
s10 = stack_s10
s11 = stack_s11
s8 = stack_s8
s5 = stack_s5
s3 = stack_s3
s4 = stack_s4
s3 = stack_s3
s2 = stack_s2
s6 = stack_s6
s5 = stack_s5
s11 = stack_s11
s1 = stack_s1
s10 = stack_s10
s9 = stack_s9
s10 = stack_s10
s8 = stack_s8
s2 = stack_s2
s7 = stack_s7
s1 = stack_s1
s4 = stack_s4
return result
