func main()
stack_s3 = s3
stack_s4 = s4
stack_s5 = s5
stack_s6 = s6
stack_s7 = s7
stack_s1 = s1
stack_s2 = s2
t2 = 12
t3 = 16
t4 = alloc(t2)
t5 = alloc(t3)
s1 = @LS_Print
[t5 + 0] =s1
s2 = @LS_Init
[t5 + 4] =s2
s3 = @LS_Start
[t5 + 8] =s3
s4 = @LS_Search
[t5 + 12] =s4
[t4 + 0] =t5
if0 t4 goto lbl_NullPtr_8
goto lbl_GoodPtr_9
lbl_NullPtr_8:
error ("null pointer")
lbl_GoodPtr_9:
if0 t4 goto lbl_NullPtr_12
s5 = [t4 + 0]
s5 = [s5 + 8]
s6 = 10
stack_a2 = a2
a2 = t4
stack_a3 = a3
a3 = s6
t1 = call s5()
v11 = t1
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_13
lbl_NullPtr_12:
error ("null pointer")
lbl_GoodPtr_13:
t0 = v11
print (t0)
s7 = 0
v15 = s7
s3 = stack_s3
s4 = stack_s4
s5 = stack_s5
s6 = stack_s6
s7 = stack_s7
s1 = stack_s1
s2 = stack_s2
t0 = v15
return v15
func LS_Start()
stack_s3 = s3
stack_s8 = s8
stack_s1 = s1
stack_s2 = s2
stack_s1 = s1
stack_s10 = s10
stack_s9 = s9
stack_s2 = s2
stack_s5 = s5
stack_s4 = s4
stack_s11 = s11
stack_s7 = s7
stack_s6 = s6
if0 a2 goto lbl_NullPtr_18
t4 = [a2 + 0]
t4 = [t4 + 4]
stack_a2 = a2
a2 = a2
stack_a3 = a3
a3 = a3
t3 = call t4()
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_19
lbl_NullPtr_18:
error ("null pointer")
lbl_GoodPtr_19:
t5 = t3
if0 a2 goto lbl_NullPtr_22
s1 = [a2 + 0]
s1 = [s1 + 0]
stack_a2 = a2
a2 = a2
s2 = call s1()
a2 = stack_a2
goto lbl_GoodPtr_23
lbl_NullPtr_22:
error ("null pointer")
lbl_GoodPtr_23:
s3 = s2
s4 = 9999
print (s4)
if0 a2 goto lbl_NullPtr_27
s5 = [a2 + 0]
s5 = [s5 + 12]
s6 = 8
stack_a2 = a2
a2 = a2
stack_a3 = a3
a3 = s6
s7 = call s5()
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_28
lbl_NullPtr_27:
error ("null pointer")
lbl_GoodPtr_28:
print (s7)
if0 a2 goto lbl_NullPtr_32
s8 = [a2 + 0]
s8 = [s8 + 12]
s9 = 12
stack_a2 = a2
a2 = a2
stack_a3 = a3
a3 = s9
s10 = call s8()
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_33
lbl_NullPtr_32:
error ("null pointer")
lbl_GoodPtr_33:
print (s10)
if0 a2 goto lbl_NullPtr_37
s11 = [a2 + 0]
s11 = [s11 + 12]
t2 = 17
stack_a2 = a2
a2 = a2
stack_a3 = a3
a3 = t2
t4 = call s11()
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_38
lbl_NullPtr_37:
error ("null pointer")
lbl_GoodPtr_38:
print (t4)
if0 a2 goto lbl_NullPtr_42
t3 = [a2 + 0]
t3 = [t3 + 12]
t5 = 50
stack_a2 = a2
a2 = a2
stack_a3 = a3
a3 = t5
s1 = call t3()
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_43
lbl_NullPtr_42:
error ("null pointer")
lbl_GoodPtr_43:
print (s1)
s2 = 55
v45 = s2
s3 = stack_s3
s8 = stack_s8
s1 = stack_s1
s2 = stack_s2
s1 = stack_s1
s10 = stack_s10
s9 = stack_s9
s2 = stack_s2
s5 = stack_s5
s4 = stack_s4
s11 = stack_s11
s7 = stack_s7
s6 = stack_s6
t0 = v45
return v45
func LS_Print()
stack_s6 = s6
stack_s9 = s9
stack_s7 = s7
stack_s1 = s1
stack_s10 = s10
stack_s8 = s8
stack_s2 = s2
stack_s3 = s3
stack_s5 = s5
stack_s4 = s4
t3 = 1
t1 = t3
j= t1
lbl_While_47:
t5 = [a2 + 8]
t0 = j
t4 = t0 < t5
if0 t4 goto lbl_WhileExit_48
t0 =[a2 + 4]
v51 = t0
t0 = 4
v52 = t0
t2 = 5
t0 = v52
s1 = t0 - t2
t0 = v51
s3 = [t0 + 0]
t1 = j
s2 = s1 < t1
t0 = j
s4 = t0 < s3
s5 = s2 * s4
if0 s5 goto lbl_OutOfBounds_59
goto lbl_Inbound_60
lbl_OutOfBounds_59:
error ("array index out of bounds")
lbl_Inbound_60:
t0 = v52
t1 = j
s6 = t0 * t1
t1 = v52
s6 = s6 + t1
t0 = v51
s6 = t0 + s6
s7 = [s6 + 0]
print (s7)
s8 = 1
t0 = j
s9 = t0 + s8
t1 = s9
j= t1
goto lbl_While_47
lbl_WhileExit_48:
s10 = 0
v65 = s10
s6 = stack_s6
s9 = stack_s9
s7 = stack_s7
s1 = stack_s1
s10 = stack_s10
s8 = stack_s8
s2 = stack_s2
s3 = stack_s3
s5 = stack_s5
s4 = stack_s4
t0 = v65
return v65
func LS_Search()
stack_s10 = s10
stack_s8 = s8
stack_s2 = s2
stack_s9 = s9
stack_s2 = s2
stack_s5 = s5
stack_s3 = s3
stack_s3 = s3
stack_s6 = s6
stack_s4 = s4
stack_s4 = s4
stack_s5 = s5
stack_s7 = s7
stack_s6 = s6
stack_s7 = s7
stack_s8 = s8
stack_s9 = s9
stack_s11 = s11
stack_s1 = s1
stack_s1 = s1
t4 = 1
t1 = t4
j= t1
t5 = 0
t1 = t5
ls01= t1
s1 = 0
t1 = s1
ifound= t1
lbl_While_69:
s2 = [a2 + 8]
t0 = j
t3 = t0 < s2
if0 t3 goto lbl_WhileExit_70
t0 =[a2 + 4]
v73 = t0
t0 = 4
v74 = t0
t2 = 5
t0 = v74
s3 = t0 - t2
t0 = v73
s5 = [t0 + 0]
t1 = j
s4 = s3 < t1
t0 = j
s6 = t0 < s5
s7 = s4 * s6
if0 s7 goto lbl_OutOfBounds_81
goto lbl_Inbound_82
lbl_OutOfBounds_81:
error ("array index out of bounds")
lbl_Inbound_82:
t0 = v74
t1 = j
s8 = t0 * t1
t1 = v74
s8 = s8 + t1
t0 = v73
s8 = t0 + s8
s9 = [s8 + 0]
s10 = s9
s11 = 1
t4 = a3 + s11
t5 = t4
s1 = s10 < a3
if0 s1 goto lbl_Else_87
s2 = 0
t1 = s2
nt= t1
goto lbl_IfEnd_88
lbl_Else_87:
t3 = s10 < t5
t2 = 1
s3 = t3 < t2
if0 s3 goto lbl_Else_91
s5 = 0
t1 = s5
nt= t1
goto lbl_IfEnd_92
lbl_Else_91:
s4 = 1
t1 = s4
ls01= t1
s6 = 1
t1 = s6
ifound= t1
s7 = [a2 + 8]
t1 = s7
j= t1
lbl_IfEnd_92:
lbl_IfEnd_88:
s8 = 1
t0 = j
s9 = t0 + s8
t1 = s9
j= t1
goto lbl_While_69
lbl_WhileExit_70:
s10 = stack_s10
s8 = stack_s8
s2 = stack_s2
s9 = stack_s9
s2 = stack_s2
s5 = stack_s5
s3 = stack_s3
s3 = stack_s3
s6 = stack_s6
s4 = stack_s4
s4 = stack_s4
s5 = stack_s5
s7 = stack_s7
s6 = stack_s6
s7 = stack_s7
s8 = stack_s8
s9 = stack_s9
s11 = stack_s11
s1 = stack_s1
s1 = stack_s1
t0 = ifound
return ifound
func LS_Init()
stack_s10 = s10
stack_s1 = s1
stack_s5 = s5
stack_s11 = s11
stack_s9 = s9
stack_s8 = s8
stack_s7 = s7
stack_s11 = s11
stack_s6 = s6
stack_s9 = s9
stack_s8 = s8
stack_s3 = s3
stack_s7 = s7
stack_s4 = s4
stack_s6 = s6
stack_s2 = s2
stack_s2 = s2
stack_s1 = s1
stack_s3 = s3
stack_s4 = s4
[a2 + 8] =a3
t4 = 1
t3 = 4
t2 = a3 + t4
t2 = t2 * t3
t5 = alloc(t2)
if0 t5 goto lbl_NullPtr_106
goto lbl_GoodPtr_107
lbl_NullPtr_106:
error ("null pointer")
lbl_GoodPtr_107:
[t5 + 0] =a3
[a2 + 4] =t5
s1 = 1
t1 = s1
j= t1
s3 = [a2 + 8]
s4 = 1
s2 = s3 + s4
t1 = s2
k= t1
lbl_While_112:
s6 = [a2 + 8]
t0 = j
s7 = t0 < s6
if0 s7 goto lbl_WhileExit_113
s8 = 2
t1 = j
s9 = s8 * t1
s10 = s9
s11 = 3
t0 = k
s5 = t0 - s11
t4 = s5
t0 =[a2 + 4]
v120 = t0
t0 =s10 + t4
v121 = t0
t0 = 4
v122 = t0
t5 = 5
t0 = v122
t3 = t0 - t5
t0 = v120
s1 = [t0 + 0]
t1 = j
t2 = t3 < t1
t0 = j
s3 = t0 < s1
s4 = t2 * s3
if0 s4 goto lbl_OutOfBounds_129
goto lbl_Inbound_130
lbl_OutOfBounds_129:
error ("array index out of bounds")
lbl_Inbound_130:
t0 = v122
t1 = j
s2 = t0 * t1
t1 = v122
s2 = s2 + t1
t0 = v120
s2 = t0 + s2
t1 = v121
[s2 + 0] =t1
s6 = 1
t0 = j
s7 = t0 + s6
t1 = s7
j= t1
s8 = 1
t0 = k
s9 = t0 - s8
t1 = s9
k= t1
goto lbl_While_112
lbl_WhileExit_113:
s11 = 0
v136 = s11
s10 = stack_s10
s1 = stack_s1
s5 = stack_s5
s11 = stack_s11
s9 = stack_s9
s8 = stack_s8
s7 = stack_s7
s11 = stack_s11
s6 = stack_s6
s9 = stack_s9
s8 = stack_s8
s3 = stack_s3
s7 = stack_s7
s4 = stack_s4
s6 = stack_s6
s2 = stack_s2
s2 = stack_s2
s1 = stack_s1
s3 = stack_s3
s4 = stack_s4
t0 = v136
return v136
