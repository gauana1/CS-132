func main()
t2 = 12
t3 = 16
t4 = alloc(t2)
t5 = alloc(t3)
t2 = @LS_Print
[t5 + 0] =t2
t3 = @LS_Init
[t5 + 4] =t3
t2 = @LS_Start
[t5 + 8] =t2
t3 = @LS_Search
[t5 + 12] =t3
[t4 + 0] =t5
if0 t4 goto lbl_NullPtr_8
goto lbl_GoodPtr_9
lbl_NullPtr_8:
error ("null pointer")
lbl_GoodPtr_9:
if0 t4 goto lbl_NullPtr_12
t2 = [t4 + 0]
t2 = [t2 + 8]
t3 = 10
a2 = t4
a3 = t3
t5 = call t2()
goto lbl_GoodPtr_13
lbl_NullPtr_12:
error ("null pointer")
lbl_GoodPtr_13:
print (t5)
t4 = 0
v15 = t4
return v15
func LS_Start()
if0 a2 goto lbl_NullPtr_18
t4 = [a2 + 0]
t4 = [t4 + 4]
stack_a2 = a2
stack_a3 = a3
t5 = call t4()
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_19
lbl_NullPtr_18:
error ("null pointer")
lbl_GoodPtr_19:
t2 = t5
if0 a2 goto lbl_NullPtr_22
t4 = [a2 + 0]
t4 = [t4 + 0]
stack_a2 = a2
t5 = call t4()
a2 = stack_a2
goto lbl_GoodPtr_23
lbl_NullPtr_22:
error ("null pointer")
lbl_GoodPtr_23:
t2 = t5
t4 = 9999
print (t4)
if0 a2 goto lbl_NullPtr_27
t5 = [a2 + 0]
t5 = [t5 + 12]
t2 = 8
stack_a2 = a2
stack_a3 = a3
a3 = t2
t4 = call t5()
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_28
lbl_NullPtr_27:
error ("null pointer")
lbl_GoodPtr_28:
print (t4)
if0 a2 goto lbl_NullPtr_32
t5 = [a2 + 0]
t5 = [t5 + 12]
t2 = 12
stack_a2 = a2
stack_a3 = a3
a3 = t2
t4 = call t5()
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_33
lbl_NullPtr_32:
error ("null pointer")
lbl_GoodPtr_33:
print (t4)
if0 a2 goto lbl_NullPtr_37
t5 = [a2 + 0]
t5 = [t5 + 12]
t2 = 17
stack_a2 = a2
stack_a3 = a3
a3 = t2
t4 = call t5()
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_38
lbl_NullPtr_37:
error ("null pointer")
lbl_GoodPtr_38:
print (t4)
if0 a2 goto lbl_NullPtr_42
t5 = [a2 + 0]
t5 = [t5 + 12]
t2 = 50
stack_a2 = a2
stack_a3 = a3
a3 = t2
t4 = call t5()
a2 = stack_a2
a3 = stack_a3
goto lbl_GoodPtr_43
lbl_NullPtr_42:
error ("null pointer")
lbl_GoodPtr_43:
print (t4)
t3 = 55
v45 = t3
return v45
func LS_Print()
stack_s7 = s7
stack_s2 = s2
stack_s1 = s1
stack_s4 = s4
stack_s3 = s3
stack_s6 = s6
stack_s5 = s5
t3 = 1
t4 = t3
lbl_While_47:
t5 = [a2 + 8]
t3 = t4 < t5
if0 t3 goto lbl_WhileExit_48
t5 = [a2 + 4]
t3 = 4
s1 = 5
s2 = t3 - s1
s3 = [t5 + 0]
s4 = s2 < t4
s5 = t4 < s3
s6 = s4 * s5
if0 s6 goto lbl_OutOfBounds_59
goto lbl_Inbound_60
lbl_OutOfBounds_59:
error ("array index out of bounds")
lbl_Inbound_60:
s7 = t3 * t4
s7 = s7 + t3
s7 = t5 + s7
t3 = [s7 + 0]
print (t3)
t5 = 1
t3 = t4 + t5
t4 = t3
goto lbl_While_47
lbl_WhileExit_48:
t5 = 0
v65 = t5
s7 = stack_s7
s2 = stack_s2
s1 = stack_s1
s4 = stack_s4
s3 = stack_s3
s6 = stack_s6
s5 = stack_s5
return v65
func LS_Search()
stack_s8 = s8
stack_s2 = s2
stack_s3 = s3
stack_s7 = s7
stack_s4 = s4
stack_s3 = s3
stack_s9 = s9
stack_s4 = s4
stack_s10 = s10
stack_s6 = s6
stack_s5 = s5
stack_s8 = s8
stack_s7 = s7
stack_s9 = s9
stack_s10 = s10
stack_s11 = s11
stack_s5 = s5
stack_s6 = s6
stack_s1 = s1
t4 = 1
t5 = t4
t4 = 0
s1 = t4
t4 = 0
s2 = t4
lbl_While_69:
t4 = [a2 + 8]
s3 = t5 < t4
if0 s3 goto lbl_WhileExit_70
t4 = [a2 + 4]
s4 = 4
s5 = 5
s6 = s4 - s5
s7 = [t4 + 0]
s8 = s6 < t5
s9 = t5 < s7
s10 = s8 * s9
if0 s10 goto lbl_OutOfBounds_81
goto lbl_Inbound_82
lbl_OutOfBounds_81:
error ("array index out of bounds")
lbl_Inbound_82:
s11 = s4 * t5
s11 = s11 + s4
s11 = t4 + s11
t4 = [s11 + 0]
s3 = t4
t4 = 1
s5 = a3 + t4
t4 = s5
s6 = s3 < a3
if0 s6 goto lbl_Else_87
s7 = 0
s8 = s7
goto lbl_IfEnd_88
lbl_Else_87:
s9 = s3 < t4
t4 = 1
s10 = s9 < t4
if0 s10 goto lbl_Else_91
t4 = 0
s8 = t4
goto lbl_IfEnd_92
lbl_Else_91:
t4 = 1
s1 = t4
t4 = 1
s2 = t4
t4 = [a2 + 8]
t5 = t4
lbl_IfEnd_92:
lbl_IfEnd_88:
t4 = 1
s4 = t5 + t4
t5 = s4
goto lbl_While_69
lbl_WhileExit_70:
ifound = s2
s8 = stack_s8
s2 = stack_s2
s3 = stack_s3
s7 = stack_s7
s4 = stack_s4
s3 = stack_s3
s9 = stack_s9
s4 = stack_s4
s10 = stack_s10
s6 = stack_s6
s5 = stack_s5
s8 = stack_s8
s7 = stack_s7
s9 = stack_s9
s10 = stack_s10
s11 = stack_s11
s5 = stack_s5
s6 = stack_s6
s1 = stack_s1
return ifound
func LS_Init()
stack_s1 = s1
stack_s1 = s1
stack_s2 = s2
stack_s10 = s10
stack_s7 = s7
stack_s11 = s11
stack_s9 = s9
stack_s8 = s8
stack_s6 = s6
stack_s5 = s5
stack_s4 = s4
stack_s3 = s3
stack_s7 = s7
stack_s6 = s6
stack_s5 = s5
stack_s2 = s2
stack_s3 = s3
stack_s4 = s4
[a2 + 8] =a3
t4 = 1
t5 = 4
s1 = a3 + t4
s1 = s1 * t5
t4 = alloc(s1)
if0 t4 goto lbl_NullPtr_106
goto lbl_GoodPtr_107
lbl_NullPtr_106:
error ("null pointer")
lbl_GoodPtr_107:
[t4 + 0] =a3
[a2 + 4] =t4
t5 = 1
t2 = t5
t4 = [a2 + 8]
t5 = 1
s2 = t4 + t5
t4 = s2
lbl_While_112:
t5 = [a2 + 8]
s3 = t2 < t5
if0 s3 goto lbl_WhileExit_113
t5 = 2
s4 = t5 * t2
t5 = s4
s5 = 3
s6 = t4 - s5
s7 = s6
s8 = [a2 + 4]
s9 = t5 + s7
t5 = 4
s10 = 5
s11 = t5 - s10
s1 = [s8 + 0]
s2 = s11 < t2
s3 = t2 < s1
s4 = s2 * s3
if0 s4 goto lbl_OutOfBounds_129
goto lbl_Inbound_130
lbl_OutOfBounds_129:
error ("array index out of bounds")
lbl_Inbound_130:
s5 = t5 * t2
s5 = s5 + t5
s5 = s8 + s5
[s5 + 0] =s9
t5 = 1
s6 = t2 + t5
t2 = s6
t5 = 1
s7 = t4 - t5
t4 = s7
goto lbl_While_112
lbl_WhileExit_113:
t5 = 0
v136 = t5
s1 = stack_s1
s1 = stack_s1
s2 = stack_s2
s10 = stack_s10
s7 = stack_s7
s11 = stack_s11
s9 = stack_s9
s8 = stack_s8
s6 = stack_s6
s5 = stack_s5
s4 = stack_s4
s3 = stack_s3
s7 = stack_s7
s6 = stack_s6
s5 = stack_s5
s2 = stack_s2
s3 = stack_s3
s4 = stack_s4
return v136
