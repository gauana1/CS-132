func main()
t2 = 20
t3 = 16
t4 = alloc(t2)
t5 = alloc(t3)
t2 = @Generator_set_seed
[t5 + 0] =t2
t3 = @Generator_mod
[t5 + 4] =t3
t2 = @Generator_initialize
[t5 + 8] =t2
t3 = @Generator_advance
[t5 + 12] =t3
[t4 + 0] =t5
if0 t4 goto lbl_NullPtr_8
goto lbl_GoodPtr_9
lbl_NullPtr_8:
error ("null pointer")
lbl_GoodPtr_9:
t2 = t4
t3 = 28
t5 = 28
t4 = alloc(t3)
t3 = alloc(t5)
t5 = @Matrix_5xn_equal
[t3 + 0] =t5
t5 = @Matrix_5xn_set
[t3 + 4] =t5
t5 = @Matrix_5xn_col_size
[t3 + 8] =t5
t5 = @Matrix_5xn_equalP
[t3 + 12] =t5
t5 = @Matrix_5xn_get
[t3 + 16] =t5
t5 = @Matrix_5xn_initialize
[t3 + 20] =t5
t5 = @Matrix_5xn_row_size
[t3 + 24] =t5
[t4 + 0] =t3
if0 t4 goto lbl_NullPtr_21
goto lbl_GoodPtr_22
lbl_NullPtr_21:
error ("null pointer")
lbl_GoodPtr_22:
t5 = t4
if0 t2 goto lbl_NullPtr_25
t3 = [t2 + 0]
t3 = [t3 + 8]
t4 = 10
s1 = 15625
s2 = 15586
s3 = 7981
stack_t5 = t5
stack_t2 = t2
a6 = s3
a5 = s2
a2 = t2
a4 = s1
a3 = t4
s4 = call t3()
t5 = stack_t5
t2 = stack_t2
goto lbl_GoodPtr_26
lbl_NullPtr_25:
error ("null pointer")
lbl_GoodPtr_26:
t3 = s4
t4 = 20
s5 = t4
if0 t5 goto lbl_NullPtr_34
t4 = [t5 + 0]
t4 = [t4 + 20]
stack_t5 = t5
stack_t2 = t2
stack_t3 = t3
a2 = t5
a3 = s5
s6 = call t4()
t5 = stack_t5
t2 = stack_t2
t3 = stack_t3
goto lbl_GoodPtr_35
lbl_NullPtr_34:
error ("null pointer")
lbl_GoodPtr_35:
t3 = s6
if0 t5 goto lbl_NullPtr_38
t4 = [t5 + 0]
t4 = [t4 + 24]
stack_t5 = t5
stack_t2 = t2
stack_t3 = t3
a2 = t5
s7 = call t4()
t5 = stack_t5
t2 = stack_t2
t3 = stack_t3
goto lbl_GoodPtr_39
lbl_NullPtr_38:
error ("null pointer")
lbl_GoodPtr_39:
t4 = s7
s8 = 0
s9 = s8
lbl_While_41:
s10 = s9 < t4
if0 s10 goto lbl_WhileExit_42
s11 = 0
s1 = s11
lbl_While_45:
s2 = s1 < s5
if0 s2 goto lbl_WhileExit_46
if0 t5 goto lbl_NullPtr_50
s3 = [t5 + 0]
s3 = [s3 + 4]
if0 t2 goto lbl_NullPtr_54
s4 = [t2 + 0]
s4 = [s4 + 12]
stack_t5 = t5
stack_t2 = t2
stack_t3 = t3
stack_t4 = t4
a2 = t2
s6 = call s4()
t5 = stack_t5
t2 = stack_t2
t3 = stack_t3
t4 = stack_t4
goto lbl_GoodPtr_55
lbl_NullPtr_54:
error ("null pointer")
lbl_GoodPtr_55:
stack_t5 = t5
stack_t2 = t2
stack_t3 = t3
stack_t4 = t4
a5 = s6
a2 = t5
a4 = s1
a3 = s9
s7 = call s3()
t5 = stack_t5
t2 = stack_t2
t3 = stack_t3
t4 = stack_t4
goto lbl_GoodPtr_51
lbl_NullPtr_50:
error ("null pointer")
lbl_GoodPtr_51:
print (s7)
s8 = 1
s10 = s1 + s8
s1 = s10
goto lbl_While_45
lbl_WhileExit_46:
s11 = 1
s2 = s9 + s11
s9 = s2
goto lbl_While_41
lbl_WhileExit_42:
t2 = 6
t4 = t2
t2 = 8
s4 = 16
s3 = alloc(t2)
t2 = alloc(s4)
s6 = @BinHistogram_div
[t2 + 0] =s6
s7 = @BinHistogram_find_range
[t2 + 4] =s7
s8 = @BinHistogram_initialize
[t2 + 8] =s8
s10 = @BinHistogram_get_bins
[t2 + 12] =s10
[s3 + 0] =t2
if0 s3 goto lbl_NullPtr_69
goto lbl_GoodPtr_70
lbl_NullPtr_69:
error ("null pointer")
lbl_GoodPtr_70:
t2 = s3
if0 t2 goto lbl_NullPtr_73
s1 = [t2 + 0]
s1 = [s1 + 8]
stack_t2 = t2
stack_t5 = t5
stack_t3 = t3
stack_t4 = t4
a2 = t2
a3 = t4
s11 = call s1()
t2 = stack_t2
t5 = stack_t5
t3 = stack_t3
t4 = stack_t4
goto lbl_GoodPtr_74
lbl_NullPtr_73:
error ("null pointer")
lbl_GoodPtr_74:
t3 = s11
if0 t2 goto lbl_NullPtr_77
t3 = [t2 + 0]
t3 = [t3 + 12]
stack_t4 = t4
a2 = t2
a3 = t5
s2 = call t3()
t4 = stack_t4
goto lbl_GoodPtr_78
lbl_NullPtr_77:
error ("null pointer")
lbl_GoodPtr_78:
t5 = s2
t2 = 0
t3 = t2
lbl_While_80:
t2 = t3 < t4
if0 t2 goto lbl_WhileExit_81
t2 = 4
s5 = 5
s9 = t2 - s5
s4 = [t5 + 0]
s6 = s9 < t3
s7 = t3 < s4
s8 = s6 * s7
if0 s8 goto lbl_OutOfBounds_90
goto lbl_Inbound_91
lbl_OutOfBounds_90:
error ("array index out of bounds")
lbl_Inbound_91:
s10 = t2 * t3
s10 = s10 + t2
s10 = t5 + s10
t2 = [s10 + 0]
print (t2)
t2 = 1
s3 = t3 + t2
t3 = s3
goto lbl_While_80
lbl_WhileExit_81:
t2 = 0
v96 = t2
s10 = stack_s10
s3 = stack_s3
s4 = stack_s4
s6 = stack_s6
s10 = stack_s10
s2 = stack_s2
s8 = stack_s8
s11 = stack_s11
s3 = stack_s3
s4 = stack_s4
s6 = stack_s6
s8 = stack_s8
s7 = stack_s7
s4 = stack_s4
s10 = stack_s10
s2 = stack_s2
s1 = stack_s1
s11 = stack_s11
s1 = stack_s1
s3 = stack_s3
s2 = stack_s2
s6 = stack_s6
s7 = stack_s7
s5 = stack_s5
s1 = stack_s1
s9 = stack_s9
s9 = stack_s9
s8 = stack_s8
s5 = stack_s5
s10 = stack_s10
s6 = stack_s6
s4 = stack_s4
s8 = stack_s8
s11 = stack_s11
s7 = stack_s7
s2 = stack_s2
s7 = stack_s7
s3 = stack_s3
return v96
func BinHistogram_initialize()
[a2 + 4] =a3
size = a3
return size
func BinHistogram_get_bins()
stack_s4 = s4
stack_s7 = s7
stack_s9 = s9
stack_s5 = s5
stack_s8 = s8
stack_s5 = s5
stack_s8 = s8
stack_s1 = s1
stack_s9 = s9
stack_s4 = s4
stack_s5 = s5
stack_s1 = s1
stack_s7 = s7
stack_s8 = s8
stack_s9 = s9
stack_s7 = s7
stack_s11 = s11
stack_s1 = s1
stack_s7 = s7
stack_s5 = s5
stack_s9 = s9
stack_s2 = s2
stack_s4 = s4
stack_s5 = s5
stack_s5 = s5
stack_s2 = s2
stack_s11 = s11
stack_s2 = s2
stack_s4 = s4
stack_s11 = s11
stack_s1 = s1
stack_s2 = s2
stack_s3 = s3
stack_s1 = s1
stack_s4 = s4
stack_s2 = s2
stack_s8 = s8
stack_s11 = s11
stack_s7 = s7
stack_s4 = s4
stack_s5 = s5
stack_s1 = s1
stack_s7 = s7
stack_s9 = s9
stack_s4 = s4
stack_s5 = s5
stack_s5 = s5
stack_s11 = s11
stack_s2 = s2
stack_s2 = s2
stack_s2 = s2
stack_s11 = s11
stack_s9 = s9
stack_s11 = s11
stack_s5 = s5
stack_s9 = s9
stack_s11 = s11
stack_s5 = s5
stack_s2 = s2
stack_s11 = s11
stack_s9 = s9
stack_s6 = s6
stack_s2 = s2
stack_s11 = s11
stack_s5 = s5
stack_s8 = s8
stack_s9 = s9
stack_s5 = s5
stack_s7 = s7
stack_s4 = s4
stack_s11 = s11
stack_s1 = s1
stack_s11 = s11
stack_s5 = s5
stack_s9 = s9
stack_s4 = s4
stack_s8 = s8
stack_s9 = s9
stack_s10 = s10
stack_s4 = s4
stack_s7 = s7
stack_s9 = s9
stack_s4 = s4
stack_s4 = s4
stack_s5 = s5
t4 = [a2 + 4]
t5 = t4
t4 = 1
s1 = 4
s2 = t5 + t4
s2 = s2 * s1
t4 = alloc(s2)
if0 t4 goto lbl_NullPtr_102
goto lbl_GoodPtr_103
lbl_NullPtr_102:
error ("null pointer")
lbl_GoodPtr_103:
[t4 + 0] =t5
s3 = t4
t4 = 1
s4 = 4
s5 = t5 + t4
s5 = s5 * s4
t4 = alloc(s5)
if0 t4 goto lbl_NullPtr_108
goto lbl_GoodPtr_109
lbl_NullPtr_108:
error ("null pointer")
lbl_GoodPtr_109:
[t4 + 0] =t5
s6 = t4
if0 a3 goto lbl_NullPtr_112
t4 = [a3 + 0]
t4 = [t4 + 8]
stack_t5 = t5
stack_a2 = a2
a2 = a3
s7 = call t4()
a2 = stack_a2
t5 = stack_t5
goto lbl_GoodPtr_113
lbl_NullPtr_112:
error ("null pointer")
lbl_GoodPtr_113:
t4 = s7
if0 a3 goto lbl_NullPtr_116
s8 = [a3 + 0]
s8 = [s8 + 24]
stack_t5 = t5
stack_t4 = t4
stack_a2 = a2
a2 = a3
s9 = call s8()
a2 = stack_a2
t5 = stack_t5
t4 = stack_t4
goto lbl_GoodPtr_117
lbl_NullPtr_116:
error ("null pointer")
lbl_GoodPtr_117:
s10 = s9
if0 a2 goto lbl_NullPtr_120
s11 = [a2 + 0]
s11 = [s11 + 4]
stack_t5 = t5
stack_t4 = t4
stack_a2 = a2
stack_a3 = a3
s1 = call s11()
a2 = stack_a2
a3 = stack_a3
t5 = stack_t5
t4 = stack_t4
goto lbl_GoodPtr_121
lbl_NullPtr_120:
error ("null pointer")
lbl_GoodPtr_121:
s2 = s1
s4 = 0
s5 = 4
s7 = 5
s8 = s5 - s7
s9 = [s2 + 0]
s11 = s8 < s4
s1 = s4 < s9
s7 = s11 * s1
if0 s7 goto lbl_OutOfBounds_130
goto lbl_Inbound_131
lbl_OutOfBounds_130:
error ("array index out of bounds")
lbl_Inbound_131:
s8 = s5 * s4
s8 = s8 + s5
s8 = s2 + s8
s9 = [s8 + 0]
s11 = s9
s1 = 1
s7 = 4
s4 = 5
s5 = s7 - s4
s8 = [s2 + 0]
s9 = s5 < s1
s4 = s1 < s8
s5 = s9 * s4
if0 s5 goto lbl_OutOfBounds_142
goto lbl_Inbound_143
lbl_OutOfBounds_142:
error ("array index out of bounds")
lbl_Inbound_143:
s8 = s7 * s1
s8 = s8 + s7
s8 = s2 + s8
s9 = [s8 + 0]
s4 = s9
if0 a2 goto lbl_NullPtr_148
s5 = [a2 + 0]
s5 = [s5 + 0]
s1 = s4 - s11
stack_t5 = t5
stack_t4 = t4
stack_a2 = a2
stack_a4 = a4
a4 = t5
stack_a3 = a3
a3 = s1
s7 = call s5()
a2 = stack_a2
a3 = stack_a3
a4 = stack_a4
t5 = stack_t5
t4 = stack_t4
goto lbl_GoodPtr_149
lbl_NullPtr_148:
error ("null pointer")
lbl_GoodPtr_149:
t3 = s7
print (s11)
print (s4)
s2 = 0
s8 = s2
s9 = s11
lbl_While_152:
s5 = s8 < t5
if0 s5 goto lbl_WhileExit_153
s1 = 4
s7 = 5
s4 = s1 - s7
s2 = [s3 + 0]
s11 = s4 < s8
s5 = s8 < s2
s7 = s11 * s5
if0 s7 goto lbl_OutOfBounds_162
goto lbl_Inbound_163
lbl_OutOfBounds_162:
error ("array index out of bounds")
lbl_Inbound_163:
s4 = s1 * s8
s4 = s4 + s1
s4 = s3 + s4
[s4 + 0] =s9
s2 = 1
s11 = s8 + s2
s8 = s11
s5 = s9 + t3
s9 = s5
goto lbl_While_152
lbl_WhileExit_153:
t3 = 0
s7 = t3
lbl_While_169:
t3 = s7 < s10
if0 t3 goto lbl_WhileExit_170
t3 = 0
s1 = t3
lbl_While_173:
t3 = s1 < t4
if0 t3 goto lbl_WhileExit_174
t3 = 0
s8 = t3
lbl_While_177:
t3 = s8 < t5
if0 t3 goto lbl_WhileExit_178
if0 a3 goto lbl_NullPtr_182
t3 = [a3 + 0]
t3 = [t3 + 16]
stack_t5 = t5
stack_t4 = t4
stack_a2 = a2
a2 = a3
stack_a4 = a4
a4 = s1
stack_a3 = a3
a3 = s7
s4 = call t3()
a2 = stack_a2
a3 = stack_a3
a4 = stack_a4
t5 = stack_t5
t4 = stack_t4
goto lbl_GoodPtr_183
lbl_NullPtr_182:
error ("null pointer")
lbl_GoodPtr_183:
t3 = s4
s2 = 4
s11 = 5
s5 = s2 - s11
s9 = [s3 + 0]
s4 = s5 < s8
s11 = s8 < s9
s5 = s4 * s11
if0 s5 goto lbl_OutOfBounds_194
goto lbl_Inbound_195
lbl_OutOfBounds_194:
error ("array index out of bounds")
lbl_Inbound_195:
s9 = s2 * s8
s9 = s9 + s2
s9 = s3 + s9
s4 = [s9 + 0]
s11 = t3 < s4
if0 s11 goto lbl_Else_184
t3 = 4
s5 = 5
s2 = t3 - s5
s9 = [s6 + 0]
s4 = s2 < s8
s11 = s8 < s9
s5 = s4 * s11
if0 s5 goto lbl_OutOfBounds_206
goto lbl_Inbound_207
lbl_OutOfBounds_206:
error ("array index out of bounds")
lbl_Inbound_207:
s2 = t3 * s8
s2 = s2 + t3
s2 = s6 + s2
t3 = [s2 + 0]
s9 = 1
s4 = t3 + s9
t3 = 4
s11 = 5
s5 = t3 - s11
s2 = [s6 + 0]
s9 = s5 < s8
s11 = s8 < s2
s5 = s9 * s11
if0 s5 goto lbl_OutOfBounds_218
goto lbl_Inbound_219
lbl_OutOfBounds_218:
error ("array index out of bounds")
lbl_Inbound_219:
s2 = t3 * s8
s2 = s2 + t3
s2 = s6 + s2
[s2 + 0] =s4
goto lbl_IfEnd_185
lbl_Else_184:
lbl_IfEnd_185:
t3 = 1
s9 = s8 + t3
s8 = s9
goto lbl_While_177
lbl_WhileExit_178:
t3 = 1
s11 = s1 + t3
s1 = s11
goto lbl_While_173
lbl_WhileExit_174:
t3 = 1
s5 = s7 + t3
s7 = s5
goto lbl_While_169
lbl_WhileExit_170:
histogram = s6
s4 = stack_s4
s7 = stack_s7
s9 = stack_s9
s5 = stack_s5
s8 = stack_s8
s5 = stack_s5
s8 = stack_s8
s1 = stack_s1
s9 = stack_s9
s4 = stack_s4
s5 = stack_s5
s1 = stack_s1
s7 = stack_s7
s8 = stack_s8
s9 = stack_s9
s7 = stack_s7
s11 = stack_s11
s1 = stack_s1
s7 = stack_s7
s5 = stack_s5
s9 = stack_s9
s2 = stack_s2
s4 = stack_s4
s5 = stack_s5
s5 = stack_s5
s2 = stack_s2
s11 = stack_s11
s2 = stack_s2
s4 = stack_s4
s11 = stack_s11
s1 = stack_s1
s2 = stack_s2
s3 = stack_s3
s1 = stack_s1
s4 = stack_s4
s2 = stack_s2
s8 = stack_s8
s11 = stack_s11
s7 = stack_s7
s4 = stack_s4
s5 = stack_s5
s1 = stack_s1
s7 = stack_s7
s9 = stack_s9
s4 = stack_s4
s5 = stack_s5
s5 = stack_s5
s11 = stack_s11
s2 = stack_s2
s2 = stack_s2
s2 = stack_s2
s11 = stack_s11
s9 = stack_s9
s11 = stack_s11
s5 = stack_s5
s9 = stack_s9
s11 = stack_s11
s5 = stack_s5
s2 = stack_s2
s11 = stack_s11
s9 = stack_s9
s6 = stack_s6
s2 = stack_s2
s11 = stack_s11
s5 = stack_s5
s8 = stack_s8
s9 = stack_s9
s5 = stack_s5
s7 = stack_s7
s4 = stack_s4
s11 = stack_s11
s1 = stack_s1
s11 = stack_s11
s5 = stack_s5
s9 = stack_s9
s4 = stack_s4
s8 = stack_s8
s9 = stack_s9
s10 = stack_s10
s4 = stack_s4
s7 = stack_s7
s9 = stack_s9
s4 = stack_s4
s4 = stack_s4
s5 = stack_s5
return histogram
func BinHistogram_find_range()
stack_s5 = s5
stack_s4 = s4
stack_s3 = s3
stack_s1 = s1
stack_s11 = s11
stack_s9 = s9
stack_s5 = s5
stack_s3 = s3
stack_s4 = s4
stack_s11 = s11
stack_s1 = s1
stack_s9 = s9
stack_s4 = s4
stack_s5 = s5
stack_s3 = s3
stack_s3 = s3
stack_s6 = s6
stack_s2 = s2
stack_s1 = s1
stack_s7 = s7
stack_s2 = s2
stack_s6 = s6
stack_s2 = s2
stack_s8 = s8
stack_s11 = s11
stack_s6 = s6
stack_s9 = s9
stack_s1 = s1
stack_s10 = s10
t4 = 2
t5 = 1
t2 = 4
s1 = t4 + t5
s1 = s1 * t2
t5 = alloc(s1)
if0 t5 goto lbl_NullPtr_232
goto lbl_GoodPtr_233
lbl_NullPtr_232:
error ("null pointer")
lbl_GoodPtr_233:
[t5 + 0] =t4
t2 = t5
if0 a3 goto lbl_NullPtr_236
t4 = [a3 + 0]
t4 = [t4 + 8]
stack_t2 = t2
stack_a2 = a2
a2 = a3
t5 = call t4()
a2 = stack_a2
t2 = stack_t2
goto lbl_GoodPtr_237
lbl_NullPtr_236:
error ("null pointer")
lbl_GoodPtr_237:
t4 = t5
if0 a3 goto lbl_NullPtr_240
t5 = [a3 + 0]
t5 = [t5 + 24]
stack_t2 = t2
stack_t4 = t4
stack_a2 = a2
a2 = a3
s2 = call t5()
a2 = stack_a2
t2 = stack_t2
t4 = stack_t4
goto lbl_GoodPtr_241
lbl_NullPtr_240:
error ("null pointer")
lbl_GoodPtr_241:
t5 = s2
if0 a3 goto lbl_NullPtr_244
s3 = [a3 + 0]
s3 = [s3 + 16]
s4 = 0
s5 = 0
stack_t2 = t2
stack_t4 = t4
stack_t5 = t5
stack_a2 = a2
a2 = a3
stack_a4 = a4
a4 = s5
stack_a3 = a3
a3 = s4
s6 = call s3()
a2 = stack_a2
a3 = stack_a3
a4 = stack_a4
t2 = stack_t2
t4 = stack_t4
t5 = stack_t5
goto lbl_GoodPtr_245
lbl_NullPtr_244:
error ("null pointer")
lbl_GoodPtr_245:
s7 = s6
s8 = s7
s9 = 0
s10 = s9
lbl_While_249:
s11 = s10 < t5
if0 s11 goto lbl_WhileExit_250
s1 = 0
s2 = s1
lbl_While_253:
s3 = s2 < t4
if0 s3 goto lbl_WhileExit_254
if0 a3 goto lbl_NullPtr_258
s4 = [a3 + 0]
s4 = [s4 + 16]
stack_t2 = t2
stack_t4 = t4
stack_t5 = t5
stack_a2 = a2
a2 = a3
stack_a4 = a4
a4 = s2
stack_a3 = a3
a3 = s10
s5 = call s4()
a2 = stack_a2
a3 = stack_a3
a4 = stack_a4
t2 = stack_t2
t4 = stack_t4
t5 = stack_t5
goto lbl_GoodPtr_259
lbl_NullPtr_258:
error ("null pointer")
lbl_GoodPtr_259:
s6 = s5
s9 = s6 < s7
if0 s9 goto lbl_Else_260
s7 = s6
goto lbl_IfEnd_261
lbl_Else_260:
lbl_IfEnd_261:
s11 = s8 < s6
if0 s11 goto lbl_Else_263
s8 = s6
goto lbl_IfEnd_264
lbl_Else_263:
lbl_IfEnd_264:
s1 = 1
s3 = s2 + s1
s2 = s3
goto lbl_While_253
lbl_WhileExit_254:
s4 = 1
s5 = s10 + s4
s10 = s5
goto lbl_While_249
lbl_WhileExit_250:
t3 = 0
t4 = 4
t5 = 5
s9 = t4 - t5
t5 = [t2 + 0]
s11 = s9 < t3
s6 = t3 < t5
t5 = s11 * s6
if0 t5 goto lbl_OutOfBounds_278
goto lbl_Inbound_279
lbl_OutOfBounds_278:
error ("array index out of bounds")
lbl_Inbound_279:
t5 = t4 * t3
t5 = t5 + t4
t5 = t2 + t5
[t5 + 0] =s7
t3 = 1
t4 = 4
t5 = 5
s1 = t4 - t5
t5 = [t2 + 0]
s3 = s1 < t3
s2 = t3 < t5
t5 = s3 * s2
if0 t5 goto lbl_OutOfBounds_289
goto lbl_Inbound_290
lbl_OutOfBounds_289:
error ("array index out of bounds")
lbl_Inbound_290:
t5 = t4 * t3
t5 = t5 + t4
t5 = t2 + t5
[t5 + 0] =s8
min_max = t2
s5 = stack_s5
s4 = stack_s4
s3 = stack_s3
s1 = stack_s1
s11 = stack_s11
s9 = stack_s9
s5 = stack_s5
s3 = stack_s3
s4 = stack_s4
s11 = stack_s11
s1 = stack_s1
s9 = stack_s9
s4 = stack_s4
s5 = stack_s5
s3 = stack_s3
s3 = stack_s3
s6 = stack_s6
s2 = stack_s2
s1 = stack_s1
s7 = stack_s7
s2 = stack_s2
s6 = stack_s6
s2 = stack_s2
s8 = stack_s8
s11 = stack_s11
s6 = stack_s6
s9 = stack_s9
s1 = stack_s1
s10 = stack_s10
return min_max
func BinHistogram_div()
stack_s3 = s3
stack_s2 = s2
stack_s1 = s1
t5 = 0
t4 = t5
lbl_While_293:
t5 = a3 < a4
s1 = 1
s2 = t5 < s1
if0 s2 goto lbl_WhileExit_294
t5 = a3 - a4
a3 = t5
t5 = 1
s3 = t4 + t5
t4 = s3
goto lbl_While_293
lbl_WhileExit_294:
quotient = t4
s3 = stack_s3
s2 = stack_s2
s1 = stack_s1
return quotient
func Generator_initialize()
[a2 + 12] =a3
[a2 + 16] =a4
[a2 + 4] =a5
[a2 + 8] =a6
t5 = [a2 + 12]
v301 = t5
return v301
func Generator_set_seed()
t4 = [a2 + 12]
t5 = t4
[a2 + 12] =a3
prev = t5
return prev
func Generator_advance()
stack_s1 = s1
stack_s2 = s2
if0 a2 goto lbl_NullPtr_305
t3 = [a2 + 0]
t3 = [t3 + 4]
t4 = [a2 + 12]
t5 = [a2 + 4]
s1 = t4 * t5
t4 = [a2 + 8]
t5 = s1 + t4
t4 = [a2 + 16]
stack_a2 = a2
stack_a4 = a4
a4 = t4
stack_a3 = a3
a3 = t5
s2 = call t3()
a2 = stack_a2
a3 = stack_a3
a4 = stack_a4
goto lbl_GoodPtr_306
lbl_NullPtr_305:
error ("null pointer")
lbl_GoodPtr_306:
[a2 + 12] =s2
t3 = [a2 + 12]
v313 = t3
s1 = stack_s1
s2 = stack_s2
return v313
func Generator_mod()
stack_s1 = s1
lbl_While_314:
t5 = a3 < a4
t4 = 1
s1 = t5 < t4
if0 s1 goto lbl_WhileExit_315
t5 = a3 - a4
a3 = t5
goto lbl_While_314
lbl_WhileExit_315:
a = a3
s1 = stack_s1
return a
func Matrix_5xn_initialize()
stack_s3 = s3
stack_s5 = s5
stack_s1 = s1
stack_s4 = s4
stack_s2 = s2
[a2 + 12] =a3
t4 = 1
t5 = 4
s1 = a3 + t4
s1 = s1 * t5
t4 = alloc(s1)
if0 t4 goto lbl_NullPtr_324
goto lbl_GoodPtr_325
lbl_NullPtr_324:
error ("null pointer")
lbl_GoodPtr_325:
[t4 + 0] =a3
[a2 + 8] =t4
t5 = 1
t4 = 4
s2 = a3 + t5
s2 = s2 * t4
t5 = alloc(s2)
if0 t5 goto lbl_NullPtr_330
goto lbl_GoodPtr_331
lbl_NullPtr_330:
error ("null pointer")
lbl_GoodPtr_331:
[t5 + 0] =a3
[a2 + 4] =t5
t4 = 1
t5 = 4
s3 = a3 + t4
s3 = s3 * t5
t4 = alloc(s3)
if0 t4 goto lbl_NullPtr_336
goto lbl_GoodPtr_337
lbl_NullPtr_336:
error ("null pointer")
lbl_GoodPtr_337:
[t4 + 0] =a3
[a2 + 20] =t4
t5 = 1
t4 = 4
s4 = a3 + t5
s4 = s4 * t4
t5 = alloc(s4)
if0 t5 goto lbl_NullPtr_342
goto lbl_GoodPtr_343
lbl_NullPtr_342:
error ("null pointer")
lbl_GoodPtr_343:
[t5 + 0] =a3
[a2 + 16] =t5
t4 = 1
t5 = 4
s5 = a3 + t4
s5 = s5 * t5
t4 = alloc(s5)
if0 t4 goto lbl_NullPtr_348
goto lbl_GoodPtr_349
lbl_NullPtr_348:
error ("null pointer")
lbl_GoodPtr_349:
[t4 + 0] =a3
[a2 + 24] =t4
cols = a3
s3 = stack_s3
s5 = stack_s5
s1 = stack_s1
s4 = stack_s4
s2 = stack_s2
return cols
func Matrix_5xn_set()
stack_s3 = s3
stack_s4 = s4
stack_s2 = s2
stack_s11 = s11
stack_s5 = s5
stack_s10 = s10
stack_s7 = s7
stack_s9 = s9
stack_s1 = s1
stack_s5 = s5
stack_s6 = s6
stack_s4 = s4
stack_s2 = s2
stack_s1 = s1
stack_s10 = s10
stack_s1 = s1
stack_s7 = s7
stack_s5 = s5
stack_s11 = s11
stack_s9 = s9
stack_s7 = s7
stack_s8 = s8
stack_s5 = s5
stack_s9 = s9
stack_s4 = s4
stack_s5 = s5
stack_s7 = s7
stack_s4 = s4
stack_s1 = s1
stack_s2 = s2
stack_s11 = s11
stack_s10 = s10
stack_s3 = s3
stack_s9 = s9
stack_s4 = s4
stack_s10 = s10
stack_s2 = s2
stack_s11 = s11
stack_s7 = s7
stack_s11 = s11
stack_s5 = s5
stack_s1 = s1
stack_s4 = s4
stack_s5 = s5
stack_s4 = s4
stack_s8 = s8
stack_s2 = s2
stack_s11 = s11
stack_s10 = s10
stack_s9 = s9
stack_s7 = s7
stack_s3 = s3
stack_s5 = s5
stack_s10 = s10
stack_s7 = s7
stack_s10 = s10
stack_s4 = s4
stack_s11 = s11
stack_s9 = s9
stack_s2 = s2
stack_s10 = s10
stack_s7 = s7
stack_s5 = s5
stack_s1 = s1
stack_s3 = s3
stack_s1 = s1
stack_s3 = s3
stack_s1 = s1
stack_s11 = s11
stack_s4 = s4
stack_s9 = s9
stack_s3 = s3
stack_s2 = s2
stack_s9 = s9
stack_s11 = s11
stack_s2 = s2
stack_s10 = s10
stack_s5 = s5
stack_s9 = s9
stack_s10 = s10
stack_s9 = s9
stack_s7 = s7
stack_s7 = s7
stack_s5 = s5
stack_s4 = s4
stack_s3 = s3
stack_s3 = s3
stack_s4 = s4
stack_s1 = s1
stack_s1 = s1
stack_s2 = s2
stack_s2 = s2
stack_s11 = s11
stack_s2 = s2
stack_s9 = s9
s1 = 1
s2 = 1
s3 = 4
s4 = s1 + s2
s4 = s4 * s3
s5 = alloc(s4)
if0 s5 goto lbl_NullPtr_355
goto lbl_GoodPtr_356
lbl_NullPtr_355:
error ("null pointer")
lbl_GoodPtr_356:
[s5 + 0] =s1
s6 = s5
s7 = 1
s8 = s7
s9 = [a2 + 12]
s10 = a4 < s9
if0 s10 goto lbl_FullAnd_361
s11 = 0
s2 = a4 < s11
s3 = 1
s4 = s2 < s3
s1 = s4
goto lbl_ShortAnd_362
lbl_FullAnd_361:
s1 = 0
lbl_ShortAnd_362:
if0 s1 goto lbl_Else_358
if0 s8 goto lbl_FullAnd_372
if0 a2 goto lbl_NullPtr_376
s5 = [a2 + 0]
s5 = [s5 + 12]
s7 = 0
stack_a2 = a2
stack_a4 = a4
a4 = s7
stack_a3 = a3
s9 = call s5()
a2 = stack_a2
a3 = stack_a3
a4 = stack_a4
goto lbl_GoodPtr_377
lbl_NullPtr_376:
error ("null pointer")
lbl_GoodPtr_377:
s10 = s9
goto lbl_ShortAnd_373
lbl_FullAnd_372:
s10 = 0
lbl_ShortAnd_373:
if0 s10 goto lbl_Else_369
s11 = 0
s8 = s11
s2 = [a2 + 8]
s3 = 4
s4 = 5
s1 = s3 - s4
s5 = [s2 + 0]
s7 = s1 < a4
s9 = a4 < s5
s10 = s7 * s9
if0 s10 goto lbl_OutOfBounds_388
goto lbl_Inbound_389
lbl_OutOfBounds_388:
error ("array index out of bounds")
lbl_Inbound_389:
s11 = s3 * a4
s11 = s11 + s3
s11 = s2 + s11
[s11 + 0] =a5
goto lbl_IfEnd_370
lbl_Else_369:
lbl_IfEnd_370:
if0 s8 goto lbl_FullAnd_394
if0 a2 goto lbl_NullPtr_398
s4 = [a2 + 0]
s4 = [s4 + 12]
s1 = 1
stack_a2 = a2
stack_a4 = a4
a4 = s1
stack_a3 = a3
s5 = call s4()
a2 = stack_a2
a3 = stack_a3
a4 = stack_a4
goto lbl_GoodPtr_399
lbl_NullPtr_398:
error ("null pointer")
lbl_GoodPtr_399:
s7 = s5
goto lbl_ShortAnd_395
lbl_FullAnd_394:
s7 = 0
lbl_ShortAnd_395:
if0 s7 goto lbl_Else_391
s9 = 0
s8 = s9
s10 = [a2 + 4]
s3 = 4
s2 = 5
s11 = s3 - s2
s4 = [s10 + 0]
s1 = s11 < a4
s5 = a4 < s4
s7 = s1 * s5
if0 s7 goto lbl_OutOfBounds_410
goto lbl_Inbound_411
lbl_OutOfBounds_410:
error ("array index out of bounds")
lbl_Inbound_411:
s9 = s3 * a4
s9 = s9 + s3
s9 = s10 + s9
[s9 + 0] =a5
goto lbl_IfEnd_392
lbl_Else_391:
lbl_IfEnd_392:
if0 s8 goto lbl_FullAnd_416
if0 a2 goto lbl_NullPtr_420
s2 = [a2 + 0]
s2 = [s2 + 12]
s11 = 2
stack_a2 = a2
stack_a4 = a4
a4 = s11
stack_a3 = a3
s4 = call s2()
a2 = stack_a2
a3 = stack_a3
a4 = stack_a4
goto lbl_GoodPtr_421
lbl_NullPtr_420:
error ("null pointer")
lbl_GoodPtr_421:
s1 = s4
goto lbl_ShortAnd_417
lbl_FullAnd_416:
s1 = 0
lbl_ShortAnd_417:
if0 s1 goto lbl_Else_413
s5 = 0
s8 = s5
s7 = [a2 + 20]
s3 = 4
s10 = 5
s9 = s3 - s10
s2 = [s7 + 0]
s11 = s9 < a4
s4 = a4 < s2
s1 = s11 * s4
if0 s1 goto lbl_OutOfBounds_432
goto lbl_Inbound_433
lbl_OutOfBounds_432:
error ("array index out of bounds")
lbl_Inbound_433:
s5 = s3 * a4
s5 = s5 + s3
s5 = s7 + s5
[s5 + 0] =a5
goto lbl_IfEnd_414
lbl_Else_413:
lbl_IfEnd_414:
if0 s8 goto lbl_FullAnd_438
if0 a2 goto lbl_NullPtr_442
s10 = [a2 + 0]
s10 = [s10 + 12]
s9 = 3
stack_a2 = a2
stack_a4 = a4
a4 = s9
stack_a3 = a3
s2 = call s10()
a2 = stack_a2
a3 = stack_a3
a4 = stack_a4
goto lbl_GoodPtr_443
lbl_NullPtr_442:
error ("null pointer")
lbl_GoodPtr_443:
s11 = s2
goto lbl_ShortAnd_439
lbl_FullAnd_438:
s11 = 0
lbl_ShortAnd_439:
if0 s11 goto lbl_Else_435
s4 = 0
s8 = s4
s1 = [a2 + 16]
s3 = 4
s7 = 5
s5 = s3 - s7
s10 = [s1 + 0]
s9 = s5 < a4
s2 = a4 < s10
s11 = s9 * s2
if0 s11 goto lbl_OutOfBounds_454
goto lbl_Inbound_455
lbl_OutOfBounds_454:
error ("array index out of bounds")
lbl_Inbound_455:
s4 = s3 * a4
s4 = s4 + s3
s4 = s1 + s4
[s4 + 0] =a5
goto lbl_IfEnd_436
lbl_Else_435:
lbl_IfEnd_436:
if0 s8 goto lbl_FullAnd_460
if0 a2 goto lbl_NullPtr_464
s7 = [a2 + 0]
s7 = [s7 + 12]
s5 = 4
stack_a2 = a2
stack_a4 = a4
a4 = s5
stack_a3 = a3
s10 = call s7()
a2 = stack_a2
a3 = stack_a3
a4 = stack_a4
goto lbl_GoodPtr_465
lbl_NullPtr_464:
error ("null pointer")
lbl_GoodPtr_465:
t3 = s10
goto lbl_ShortAnd_461
lbl_FullAnd_460:
t3 = 0
lbl_ShortAnd_461:
if0 t3 goto lbl_Else_457
t3 = 0
s8 = t3
t3 = [a2 + 24]
t4 = 4
s9 = 5
s2 = t4 - s9
s11 = [t3 + 0]
s3 = s2 < a4
s1 = a4 < s11
s4 = s3 * s1
if0 s4 goto lbl_OutOfBounds_476
goto lbl_Inbound_477
lbl_OutOfBounds_476:
error ("array index out of bounds")
lbl_Inbound_477:
s7 = t4 * a4
s7 = s7 + t4
s7 = t3 + s7
[s7 + 0] =a5
goto lbl_IfEnd_458
lbl_Else_457:
lbl_IfEnd_458:
if0 s8 goto lbl_Else_479
t2 = 1
t4 = 0
t3 = 4
s5 = 5
s10 = t3 - s5
s9 = [s6 + 0]
s2 = s10 < t2
s11 = t2 < s9
s3 = s2 * s11
if0 s3 goto lbl_OutOfBounds_490
goto lbl_Inbound_491
lbl_OutOfBounds_490:
error ("array index out of bounds")
lbl_Inbound_491:
s1 = t3 * t2
s1 = s1 + t3
s1 = s6 + s1
[s1 + 0] =t4
goto lbl_IfEnd_480
lbl_Else_479:
lbl_IfEnd_480:
goto lbl_IfEnd_359
lbl_Else_358:
t2 = 1
t3 = 0
t4 = 4
s4 = 5
s7 = t4 - s4
s8 = [s6 + 0]
s5 = s7 < t2
s10 = t2 < s8
s9 = s5 * s10
if0 s9 goto lbl_OutOfBounds_502
goto lbl_Inbound_503
lbl_OutOfBounds_502:
error ("array index out of bounds")
lbl_Inbound_503:
s2 = t4 * t2
s2 = s2 + t4
s2 = s6 + s2
[s2 + 0] =t3
lbl_IfEnd_359:
value = a5
s3 = stack_s3
s4 = stack_s4
s2 = stack_s2
s11 = stack_s11
s5 = stack_s5
s10 = stack_s10
s7 = stack_s7
s9 = stack_s9
s1 = stack_s1
s5 = stack_s5
s6 = stack_s6
s4 = stack_s4
s2 = stack_s2
s1 = stack_s1
s10 = stack_s10
s1 = stack_s1
s7 = stack_s7
s5 = stack_s5
s11 = stack_s11
s9 = stack_s9
s7 = stack_s7
s8 = stack_s8
s5 = stack_s5
s9 = stack_s9
s4 = stack_s4
s5 = stack_s5
s7 = stack_s7
s4 = stack_s4
s1 = stack_s1
s2 = stack_s2
s11 = stack_s11
s10 = stack_s10
s3 = stack_s3
s9 = stack_s9
s4 = stack_s4
s10 = stack_s10
s2 = stack_s2
s11 = stack_s11
s7 = stack_s7
s11 = stack_s11
s5 = stack_s5
s1 = stack_s1
s4 = stack_s4
s5 = stack_s5
s4 = stack_s4
s8 = stack_s8
s2 = stack_s2
s11 = stack_s11
s10 = stack_s10
s9 = stack_s9
s7 = stack_s7
s3 = stack_s3
s5 = stack_s5
s10 = stack_s10
s7 = stack_s7
s10 = stack_s10
s4 = stack_s4
s11 = stack_s11
s9 = stack_s9
s2 = stack_s2
s10 = stack_s10
s7 = stack_s7
s5 = stack_s5
s1 = stack_s1
s3 = stack_s3
s1 = stack_s1
s3 = stack_s3
s1 = stack_s1
s11 = stack_s11
s4 = stack_s4
s9 = stack_s9
s3 = stack_s3
s2 = stack_s2
s9 = stack_s9
s11 = stack_s11
s2 = stack_s2
s10 = stack_s10
s5 = stack_s5
s9 = stack_s9
s10 = stack_s10
s9 = stack_s9
s7 = stack_s7
s7 = stack_s7
s5 = stack_s5
s4 = stack_s4
s3 = stack_s3
s3 = stack_s3
s4 = stack_s4
s1 = stack_s1
s1 = stack_s1
s2 = stack_s2
s2 = stack_s2
s11 = stack_s11
s2 = stack_s2
s9 = stack_s9
return value
func Matrix_5xn_get()
stack_s9 = s9
stack_s7 = s7
stack_s11 = s11
stack_s7 = s7
stack_s2 = s2
stack_s8 = s8
stack_s5 = s5
stack_s1 = s1
stack_s5 = s5
stack_s6 = s6
stack_s3 = s3
stack_s11 = s11
stack_s4 = s4
stack_s9 = s9
stack_s2 = s2
stack_s9 = s9
stack_s8 = s8
stack_s11 = s11
stack_s3 = s3
stack_s4 = s4
stack_s8 = s8
stack_s1 = s1
stack_s5 = s5
stack_s7 = s7
stack_s4 = s4
stack_s5 = s5
stack_s2 = s2
stack_s3 = s3
stack_s2 = s2
stack_s7 = s7
stack_s8 = s8
stack_s2 = s2
stack_s5 = s5
stack_s4 = s4
stack_s3 = s3
stack_s1 = s1
stack_s8 = s8
stack_s9 = s9
stack_s7 = s7
stack_s11 = s11
stack_s6 = s6
stack_s5 = s5
stack_s2 = s2
stack_s1 = s1
stack_s8 = s8
stack_s2 = s2
stack_s5 = s5
stack_s4 = s4
stack_s1 = s1
stack_s11 = s11
stack_s3 = s3
stack_s7 = s7
stack_s9 = s9
stack_s11 = s11
stack_s7 = s7
stack_s8 = s8
stack_s5 = s5
stack_s2 = s2
stack_s8 = s8
stack_s5 = s5
stack_s1 = s1
stack_s9 = s9
stack_s2 = s2
stack_s1 = s1
stack_s9 = s9
stack_s4 = s4
stack_s5 = s5
stack_s7 = s7
stack_s9 = s9
stack_s11 = s11
stack_s2 = s2
stack_s3 = s3
stack_s11 = s11
stack_s1 = s1
stack_s11 = s11
stack_s1 = s1
stack_s7 = s7
stack_s11 = s11
stack_s7 = s7
stack_s4 = s4
stack_s8 = s8
stack_s9 = s9
stack_s5 = s5
stack_s8 = s8
stack_s9 = s9
stack_s3 = s3
stack_s10 = s10
stack_s8 = s8
stack_s9 = s9
stack_s8 = s8
stack_s7 = s7
stack_s11 = s11
stack_s1 = s1
stack_s2 = s2
stack_s2 = s2
stack_s3 = s3
stack_s1 = s1
stack_s1 = s1
stack_s5 = s5
stack_s7 = s7
stack_s4 = s4
t5 = 1
s1 = 1
s2 = 4
s3 = t5 + s1
s3 = s3 * s2
s4 = alloc(s3)
if0 s4 goto lbl_NullPtr_510
goto lbl_GoodPtr_511
lbl_NullPtr_510:
error ("null pointer")
lbl_GoodPtr_511:
[s4 + 0] =t5
t5 = s4
s5 = 1
s6 = s5
s7 = 0
s8 = 1
s9 = s7 - s8
s10 = s9
s11 = [a2 + 12]
s1 = a4 < s11
if0 s1 goto lbl_FullAnd_519
s2 = 0
s3 = a4 < s2
s4 = 1
s5 = s3 < s4
s7 = s5
goto lbl_ShortAnd_520
lbl_FullAnd_519:
s7 = 0
lbl_ShortAnd_520:
if0 s7 goto lbl_Else_516
if0 s6 goto lbl_FullAnd_530
if0 a2 goto lbl_NullPtr_534
s8 = [a2 + 0]
s8 = [s8 + 0]
s9 = 0
stack_t5 = t5
stack_a2 = a2
stack_a4 = a4
a4 = s9
stack_a3 = a3
s11 = call s8()
a2 = stack_a2
a3 = stack_a3
a4 = stack_a4
t5 = stack_t5
goto lbl_GoodPtr_535
lbl_NullPtr_534:
error ("null pointer")
lbl_GoodPtr_535:
s1 = s11
goto lbl_ShortAnd_531
lbl_FullAnd_530:
s1 = 0
lbl_ShortAnd_531:
if0 s1 goto lbl_Else_527
s2 = 0
s6 = s2
s3 = [a2 + 8]
s4 = 4
s5 = 5
s7 = s4 - s5
s8 = [s3 + 0]
s9 = s7 < a4
s11 = a4 < s8
s1 = s9 * s11
if0 s1 goto lbl_OutOfBounds_546
goto lbl_Inbound_547
lbl_OutOfBounds_546:
error ("array index out of bounds")
lbl_Inbound_547:
s2 = s4 * a4
s2 = s2 + s4
s2 = s3 + s2
s5 = [s2 + 0]
s10 = s5
goto lbl_IfEnd_528
lbl_Else_527:
lbl_IfEnd_528:
if0 s6 goto lbl_FullAnd_553
if0 a2 goto lbl_NullPtr_557
s7 = [a2 + 0]
s7 = [s7 + 0]
s8 = 1
stack_t5 = t5
stack_a2 = a2
stack_a4 = a4
a4 = s8
stack_a3 = a3
s9 = call s7()
a2 = stack_a2
a3 = stack_a3
a4 = stack_a4
t5 = stack_t5
goto lbl_GoodPtr_558
lbl_NullPtr_557:
error ("null pointer")
lbl_GoodPtr_558:
s11 = s9
goto lbl_ShortAnd_554
lbl_FullAnd_553:
s11 = 0
lbl_ShortAnd_554:
if0 s11 goto lbl_Else_550
s1 = 0
s6 = s1
s4 = [a2 + 4]
s3 = 4
s2 = 5
s5 = s3 - s2
s7 = [s4 + 0]
s8 = s5 < a4
s9 = a4 < s7
s11 = s8 * s9
if0 s11 goto lbl_OutOfBounds_569
goto lbl_Inbound_570
lbl_OutOfBounds_569:
error ("array index out of bounds")
lbl_Inbound_570:
s1 = s3 * a4
s1 = s1 + s3
s1 = s4 + s1
s2 = [s1 + 0]
s10 = s2
goto lbl_IfEnd_551
lbl_Else_550:
lbl_IfEnd_551:
if0 s6 goto lbl_FullAnd_576
if0 a2 goto lbl_NullPtr_580
s5 = [a2 + 0]
s5 = [s5 + 0]
s7 = 2
stack_t5 = t5
stack_a2 = a2
stack_a4 = a4
a4 = s7
stack_a3 = a3
s8 = call s5()
a2 = stack_a2
a3 = stack_a3
a4 = stack_a4
t5 = stack_t5
goto lbl_GoodPtr_581
lbl_NullPtr_580:
error ("null pointer")
lbl_GoodPtr_581:
s9 = s8
goto lbl_ShortAnd_577
lbl_FullAnd_576:
s9 = 0
lbl_ShortAnd_577:
if0 s9 goto lbl_Else_573
s11 = 0
s6 = s11
s3 = [a2 + 20]
s4 = 4
s1 = 5
s2 = s4 - s1
s5 = [s3 + 0]
s7 = s2 < a4
s8 = a4 < s5
s9 = s7 * s8
if0 s9 goto lbl_OutOfBounds_592
goto lbl_Inbound_593
lbl_OutOfBounds_592:
error ("array index out of bounds")
lbl_Inbound_593:
s11 = s4 * a4
s11 = s11 + s4
s11 = s3 + s11
s1 = [s11 + 0]
s10 = s1
goto lbl_IfEnd_574
lbl_Else_573:
lbl_IfEnd_574:
if0 s6 goto lbl_FullAnd_599
if0 a2 goto lbl_NullPtr_603
s2 = [a2 + 0]
s2 = [s2 + 0]
s5 = 3
stack_t5 = t5
stack_a2 = a2
stack_a4 = a4
a4 = s5
stack_a3 = a3
s7 = call s2()
a2 = stack_a2
a3 = stack_a3
a4 = stack_a4
t5 = stack_t5
goto lbl_GoodPtr_604
lbl_NullPtr_603:
error ("null pointer")
lbl_GoodPtr_604:
s8 = s7
goto lbl_ShortAnd_600
lbl_FullAnd_599:
s8 = 0
lbl_ShortAnd_600:
if0 s8 goto lbl_Else_596
s9 = 0
s6 = s9
s4 = [a2 + 16]
s3 = 4
s11 = 5
s1 = s3 - s11
s2 = [s4 + 0]
s5 = s1 < a4
s7 = a4 < s2
s8 = s5 * s7
if0 s8 goto lbl_OutOfBounds_615
goto lbl_Inbound_616
lbl_OutOfBounds_615:
error ("array index out of bounds")
lbl_Inbound_616:
s9 = s3 * a4
s9 = s9 + s3
s9 = s4 + s9
s11 = [s9 + 0]
s10 = s11
goto lbl_IfEnd_597
lbl_Else_596:
lbl_IfEnd_597:
if0 s6 goto lbl_FullAnd_622
if0 a2 goto lbl_NullPtr_626
s1 = [a2 + 0]
s1 = [s1 + 0]
s2 = 4
stack_t5 = t5
stack_a2 = a2
stack_a4 = a4
a4 = s2
stack_a3 = a3
s5 = call s1()
a2 = stack_a2
a3 = stack_a3
a4 = stack_a4
t5 = stack_t5
goto lbl_GoodPtr_627
lbl_NullPtr_626:
error ("null pointer")
lbl_GoodPtr_627:
t3 = s5
goto lbl_ShortAnd_623
lbl_FullAnd_622:
t3 = 0
lbl_ShortAnd_623:
if0 t3 goto lbl_Else_619
t3 = 0
s6 = t3
t3 = [a2 + 24]
t4 = 4
s7 = 5
s8 = t4 - s7
s3 = [t3 + 0]
s4 = s8 < a4
s9 = a4 < s3
s11 = s4 * s9
if0 s11 goto lbl_OutOfBounds_638
goto lbl_Inbound_639
lbl_OutOfBounds_638:
error ("array index out of bounds")
lbl_Inbound_639:
s1 = t4 * a4
s1 = s1 + t4
s1 = t3 + s1
t2 = [s1 + 0]
s10 = t2
goto lbl_IfEnd_620
lbl_Else_619:
lbl_IfEnd_620:
if0 s6 goto lbl_Else_642
t4 = 1
t3 = 0
t2 = 4
s2 = 5
s5 = t2 - s2
s7 = [t5 + 0]
s8 = s5 < t4
s3 = t4 < s7
s4 = s8 * s3
if0 s4 goto lbl_OutOfBounds_653
goto lbl_Inbound_654
lbl_OutOfBounds_653:
error ("array index out of bounds")
lbl_Inbound_654:
s9 = t2 * t4
s9 = s9 + t2
s9 = t5 + s9
[s9 + 0] =t3
goto lbl_IfEnd_643
lbl_Else_642:
lbl_IfEnd_643:
goto lbl_IfEnd_517
lbl_Else_516:
t4 = 1
t2 = 0
t3 = 4
s11 = 5
s1 = t3 - s11
s6 = [t5 + 0]
s2 = s1 < t4
s5 = t4 < s6
s7 = s2 * s5
if0 s7 goto lbl_OutOfBounds_665
goto lbl_Inbound_666
lbl_OutOfBounds_665:
error ("array index out of bounds")
lbl_Inbound_666:
s8 = t3 * t4
s8 = s8 + t3
s8 = t5 + s8
[s8 + 0] =t2
lbl_IfEnd_517:
value = s10
s9 = stack_s9
s7 = stack_s7
s11 = stack_s11
s7 = stack_s7
s2 = stack_s2
s8 = stack_s8
s5 = stack_s5
s1 = stack_s1
s5 = stack_s5
s6 = stack_s6
s3 = stack_s3
s11 = stack_s11
s4 = stack_s4
s9 = stack_s9
s2 = stack_s2
s9 = stack_s9
s8 = stack_s8
s11 = stack_s11
s3 = stack_s3
s4 = stack_s4
s8 = stack_s8
s1 = stack_s1
s5 = stack_s5
s7 = stack_s7
s4 = stack_s4
s5 = stack_s5
s2 = stack_s2
s3 = stack_s3
s2 = stack_s2
s7 = stack_s7
s8 = stack_s8
s2 = stack_s2
s5 = stack_s5
s4 = stack_s4
s3 = stack_s3
s1 = stack_s1
s8 = stack_s8
s9 = stack_s9
s7 = stack_s7
s11 = stack_s11
s6 = stack_s6
s5 = stack_s5
s2 = stack_s2
s1 = stack_s1
s8 = stack_s8
s2 = stack_s2
s5 = stack_s5
s4 = stack_s4
s1 = stack_s1
s11 = stack_s11
s3 = stack_s3
s7 = stack_s7
s9 = stack_s9
s11 = stack_s11
s7 = stack_s7
s8 = stack_s8
s5 = stack_s5
s2 = stack_s2
s8 = stack_s8
s5 = stack_s5
s1 = stack_s1
s9 = stack_s9
s2 = stack_s2
s1 = stack_s1
s9 = stack_s9
s4 = stack_s4
s5 = stack_s5
s7 = stack_s7
s9 = stack_s9
s11 = stack_s11
s2 = stack_s2
s3 = stack_s3
s11 = stack_s11
s1 = stack_s1
s11 = stack_s11
s1 = stack_s1
s7 = stack_s7
s11 = stack_s11
s7 = stack_s7
s4 = stack_s4
s8 = stack_s8
s9 = stack_s9
s5 = stack_s5
s8 = stack_s8
s9 = stack_s9
s3 = stack_s3
s10 = stack_s10
s8 = stack_s8
s9 = stack_s9
s8 = stack_s8
s7 = stack_s7
s11 = stack_s11
s1 = stack_s1
s2 = stack_s2
s2 = stack_s2
s3 = stack_s3
s1 = stack_s1
s1 = stack_s1
s5 = stack_s5
s7 = stack_s7
s4 = stack_s4
return value
func Matrix_5xn_col_size()
t3 = [a2 + 12]
v668 = t3
return v668
func Matrix_5xn_row_size()
t3 = 5
v669 = t3
return v669
func Matrix_5xn_equalP()
t5 = a3 - a4
print (t5)
t4 = a3 < a4
if0 t4 goto lbl_Else_671
t5 = 0
t4 = t5
goto lbl_IfEnd_672
lbl_Else_671:
t5 = a4 < a3
if0 t5 goto lbl_Else_675
t2 = 0
t4 = t2
goto lbl_IfEnd_676
lbl_Else_675:
t3 = 1
t4 = t3
lbl_IfEnd_676:
lbl_IfEnd_672:
res = t4
return res
func Matrix_5xn_equal()
t5 = a3 < a4
if0 t5 goto lbl_Else_680
t4 = 0
t5 = t4
goto lbl_IfEnd_681
lbl_Else_680:
t4 = a4 < a3
if0 t4 goto lbl_Else_684
t2 = 0
t5 = t2
goto lbl_IfEnd_685
lbl_Else_684:
t3 = 1
t5 = t3
lbl_IfEnd_685:
lbl_IfEnd_681:
res = t5
return res
